{"version":3,"sources":["assets/img/deer-logo.svg","components/FactoryNode.jsx","components/Panel.jsx","views/Dashboard.jsx","layouts/Admin.jsx","routes.js","components/Navbars/DemoNavbar.jsx","components/Footer/Footer.jsx","index.js"],"names":["module","exports","__webpack_require__","p","FactoryNode","props","_this","Object","classCallCheck","this","_super","call","that","assertThisInitialized","linkWidget","addWidget","linkName","v","window","open","widgets_start_y","widgets_up","onDrawForeground","ctx","graphcanvas","flags","collapsed","font","fontSize","str0","message","replace","lines","splitStringForCanvas","split","j","length","fillText","str","newStr","charsInStr","includes","myReg","RegExp","strArr","match","i","trim","react_default","a","createElement","React","Component","Panel","changeInput","e","temp","assign","panelData","curVal","target","value","properties","updateParentPanelData","numNodeType","changeInputWithRadio","updatedProperties","excludeProps","xoneProperties","filter","undefined","keys","forEach","exp","changeRadio","setState","showSelectorProps","propsSelector","propsMaxCount","map","nodeSelectorProp","addOneMoreProperty","curProp","maxCount","nums","lastNum","Math","max","apply","toConsumableArray","parseInt","push","alert","addOneMorePropertyBundle","pArr","_loop","removeSelector","s","_temp$properties","_s$i","newObj","objectWithoutProperties","toPropertyKey","every","elem","state","name","uuidv4","_this2","propsSelectorWithMaxCount","otherProps","otherpr","sortBySelectorValue","Card","className","CardTitle","tag","nodePath","CardBody","react","key","FormGroup","Input","type","onChange","pr","check","Label","checked","index","Button","outline","color","size","onClick","aria-hidden","selector","N3","require","DataFactory","namedNode","literal","defaultGraph","URI","location","href","litegraph","hostname","port","LiteGraph","Dashboard","curPanelData","id","findIndex","getBaseUrl","exec","callbackFunction","formProperties","resizeWindowFunc","canvas","document","getElementById","parent","width","offsetWidth","height","offsetHeight","graphCanvas","resize","getPropertyFirst","quadsWithXone","quadI","fullContent","quad","subject","object","tempXoneNodeParams","predicate","getPropertiesForNode","node","propsWithPropPredicate","propsUnderSelectorNode","selectorNodeMinCount","minCount","console","log","propsUnderSelectorNodeWithMaxCount","nodeName","c","propName","getPropertyName","propsWithXonePredicate","propsFromXone","basicProps","xone","selectorMinCount","prop","betweenDashesArray","getInputPorts","getOutputPorts","getMessage","getUrlForTheNode","initializeNode","propsArrForNode","inputPorts","outputPorts","inputs","outputs","url","filteredProps","filteredProp","x","nodeClass","_FactoryNode","inherits","_super2","createSuper","addInput","addOutput","onDblClick","showProperies","title","bgcolor","registerNodeType","_FactoryNode2","_nodeClass","_super3","_this3","_FactoryNode3","_nodeClass2","_super4","_this4","nodeType","propertiesCopy","showPanel","find","data","current_node","showNode","quadOb","nodes","nodesArray","add","toggleDropdown","show","saveConfig","graph","serialize","writer","Writer","prefixes","format","Parser","blankNodePrefix","addQuad","link","inputLinkId","inputLinkInGraph","links","inputOriginNode","getNodeById","origin_id","inputPortsList","blankNodes","inputPort","blank","list","obj","addBlankNodes","downloadTtl","end","error","result","blob","Blob","URL","createObjectURL","download","click","runConfig","submitConfig","propsSelectorSorted","num","matchedProps","containsFalse","to2dArray","byPredicate","arr2D","subBlankNodes","downloadResults","fetch","requestID","availableFiles","then","response","file","File","formData","FormData","uploadFiles","append","method","body","json","res","code","visible","requestId","showLogButton","interval","setInterval","getStatusForRequest","content","status","clearInterval","requestCompleteModal","showConfigButton","getResults","showLogs","toggle","getFilteredOptions","event","afterFilteredSuggestions","prefixOptions","toLowerCase","userInput","selectedPrefix","namespace","contexts","isDisabled","handleNamespaceChange","addNewPrefixes","concat","saveResults","showResultModal","toggleResultModal","toggleRequestCompleteModal","files","selectedFiles","onSelectedFiles","onSelectedFile","fileReader","FileReader","onload","fileLoadedEvent","textFromFileLoaded","ttlToUI","readAsText","uploadTtl","hiddenFileInput","current","parser","fullFileContent","parse","nodesInstances","mainPath","nodeWithSpecificType","createNode","instance","q","realName","connectedNode","connect","LGraph","outputLinks","config","isModalOpen","showForm","showComponent","nodeArr","input1","input2","example","foaf","dbpedia","deer","fcage","geo","owl","rdf","rdfs","xsd","Set","quads","createRef","removeEventListener","_this5","addEventListener","LGraphCanvas","start","show_info","text","_this6","_","opt","Modal","isOpen","ModalHeader","ModalBody","Table","style","Row","Col","lg","md","sm","xs","Form","placeholder","Dropdown","suggestions","DropdownItem","disabled","CardFooter","addPrefix","Badge","variant","multiple","marginLeft","float","display","ref","marginRight","marginBottom","components_Panel","registered_node_types","searchbox_extras","ps","routes","path","icon","component","layout","Header","dropdownOpen","bind","dropdownToggle","sidebarToggle","brandName","indexOf","documentElement","classList","innerWidth","updateColor","history","pathname","Navbar","expand","Container","fluid","NavbarBrand","alt","src","Footer","default","handleActiveClick","activeColor","handleBgClick","backgroundColor","mainPanel","navigator","platform","PerfectScrollbar","destroy","action","scrollTop","scrollingElement","Navbars_DemoNavbar","react_router","components_Footer_Footer","hist","createBrowserHistory","ReactDOM","render","layouts_Admin","to"],"mappings":"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","file":"static/js/main.3ac73c9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/deer-logo.b55379b3.svg\";","import React, { Fragment } from \"react\";\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nclass FactoryNode extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // this.addInput(\"input\", \"text\");\n    // this.properties = {\n    //   linkName: \"https://google.com\",\n    //   name: \"\",\n    //   outputFile: \"number\",\n    //   outputFormat: 0,\n    // };\n    \n    // this.linkName = \"https://google.com\";\n\n    var that = this;\n\n    this.linkWidget = this.addWidget(\n      \"button\",\n      \"read more\",\n      this.linkName,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        window.open( \n              that.linkName, \"_blank\"); \n      }\n    );\n    this.widgets_start_y = 70;\n    this.widgets_up = false;\n\n    this.onDrawForeground = (ctx, graphcanvas) =>\n    {\n      if(this.flags.collapsed)\n        return;\n      let fontSize = 12;\n      ctx.font = fontSize+\"px Arial\";\n      // console.log(this.message);\n      let str0 = null;\n      if(this.message[0]){\n        str0 = this.message[0].replace(/\"/g,\"\");\n      }\n      str0 = str0 || \"Description of the node ...Continue description of the node ...\";\n      let str1 = this.splitStringForCanvas(str0);\n      var lines = str1.split('\\n');\n      for (var j = 0; j<lines.length; j++)\n        ctx.fillText(lines[j], 10, 55 + (j*fontSize) );\n    }\n    \n  }\n\n  // create folder for utils and move this function there\n  splitStringForCanvas(str){\n    let newStr = \"\";\n    let charsInStr = 27;\n    if(this.props.includes(\"Operator\")){\n      charsInStr = 49;\n    }\n    let myReg = new RegExp(\".{1,\"+charsInStr+\"}\", \"g\");\n    let strArr = str.match(myReg);\n    for(let i=0; i<strArr.length; i++){\n      newStr += strArr[i].trim() + \"\\n\";\n    }\n    return newStr;\n  }\n\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n\nexport default FactoryNode;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n  Button,\n  Card,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\n\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectorProps: false,\n      name: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if(this.props.panelData.properties.name === ''){\n      let name = uuidv4();\n      var temp = Object.assign({}, this.props.panelData);\n      temp.properties.name = name;\n      this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n      this.setState({name: name});\n    } else {\n      this.setState({name: this.props.panelData.properties.name});\n    }\n  }\n\n  changeInput = (e, p) => {\n    var temp = Object.assign({}, this.props.panelData);\n    let curVal = e.target.value;\n    if(e.target.value.length > 1){\n      curVal = e.target.value.trim();\n    }\n    temp.properties[p] = curVal;\n    this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n  }\n\n  changeInputWithRadio = (e, p) => {\n    // change the edited input\n    this.changeInput(e, p);\n\n    var temp = Object.assign({}, this.props.panelData);\n    let updatedProperties = temp.properties;\n    let excludeProps = this.props.panelData.xoneProperties.filter(i => {return i !== undefined && i !== p});\n    // clear all optional except the current one\n    Object.keys(temp.properties).forEach(i => {\n      excludeProps.forEach(exp => {\n        if (exp === i){\n          updatedProperties[i] = \"\";\n        } \n      })     \n    });\n    temp.properties = updatedProperties;\n    this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n  \n  }\n\n  changeRadio = (e, p) => {\n    e.target.value = \" \";\n    this.changeInputWithRadio(e, p);\n    if(p === \"selector\"){\n      this.setState({\n        showSelectorProps: true\n      })\n    } else {\n      this.setState({\n        showSelectorProps: false\n      })\n      // clear property inputs when another radio button was checked\n      let temp = Object.assign({}, this.props.panelData);\n      let updatedProperties = temp.properties;\n      let excludeProps = this.props.panelData.xoneProperties.filter(i => {return i !== undefined && i !== p});\n      // clear selectorProps if there is selector in xone and it is not chosen\n      if(excludeProps.includes(\"selector\")){\n        let propsSelector = this.props.panelData.propsSelector.propsMaxCount.map(i => i.nodeSelectorProp);\n        Object.keys(temp.properties).forEach(i => {\n          propsSelector.forEach(exp => {\n            if (exp === i){\n              updatedProperties[i] = \"\";\n            } \n          })     \n        });\n      }\n      temp.properties = updatedProperties;\n      this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n    }\n  }\n\n  addOneMoreProperty = (p) => {\n    let curProp = p;\n    p = p.replace(/\\d+/g, '').replace(\"_extra_\", \"\");\n    let propsSelector = this.props.panelData.propsSelector.propsMaxCount;\n    let temp = Object.assign({}, this.props.panelData);\n    let maxCount = propsSelector.filter(i => i.nodeSelectorProp === p)[0].maxCount;\n    let preNums = propsSelector.filter(i => i.nodeSelectorProp.includes(p));\n    let nums = preNums.filter(i => i.nodeSelectorProp.includes(\"_extra_\") \n      && i.nodeSelectorProp.split(\"_extra_\")[0] === curProp).map(i => i.nodeSelectorProp.split(\"_extra_\")[1]);\n    let lastNum = Math.max(...nums) + 1;\n    if (nums.length === 0){\n      lastNum = \"1\";\n    }\n    //check max count and add additionalProp\n    if(parseInt(maxCount) >= parseInt(lastNum)+1){\n      temp.propsSelector.propsMaxCount.push({nodeSelectorProp: curProp+\"_extra_\"+lastNum, maxCount: maxCount});\n      temp.properties[curProp+\"_extra_\"+lastNum] = \"\";\n      this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n    } else {\n      alert(\"maxCount: \" + maxCount);\n    }\n  }\n\n  addOneMorePropertyBundle = (pArr) => {\n    pArr = pArr[0];\n    let isMaxCount = false;\n    let maxCount = -1;\n    for (let i = 0; i < pArr.length; i++) {\n      let p = pArr[i];\n      if(!p.includes(\"_extra_\")){\n        p = p.replace(/\\d+/g, '');\n        let propsSelector = this.props.panelData.propsSelector.propsMaxCount;\n        let temp = Object.assign({}, this.props.panelData);\n        maxCount = propsSelector.filter(i => i.nodeSelectorProp === p)[0].maxCount;\n        let preNums = propsSelector.filter(i => i.nodeSelectorProp.includes(p) && i.nodeSelectorProp.match(/\\d+/g));\n        let nums = preNums.map(i => i.nodeSelectorProp.match(/\\d+/g)[0]);\n        let lastNum = Math.max(...nums) + 1;\n        if (nums.length === 0){\n          lastNum = \"2\";\n        }\n\n        temp.propsSelector.propsMaxCount.push({nodeSelectorProp: p+lastNum, maxCount: maxCount});\n        temp.properties[p+lastNum] = \"\";\n        this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n      }\n    }\n  }\n\n  removeSelector = (s) => {\n    let temp = Object.assign({}, this.props.panelData);\n    // .properties -> remove property from object\n    for (let i=0; i<s.length; i++){\n      const {[s[i]]: foo, ...newObj} = temp.properties;\n      temp.properties = newObj;\n    }\n    // .propsSelector.propsMaxCount -> remove object from array with 'nodeSelectorProp' property\n    temp.propsSelector.propsMaxCount = temp.propsSelector.propsMaxCount.filter(i => s.every(elem => i.nodeSelectorProp !== elem));\n    this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n  }\n\n\n  render() {\n    let excludeProps = this.props.panelData.xoneProperties.filter(i => {return i !== undefined});\n    let propsSelectorWithMaxCount = this.props.panelData.propsSelector.propsMaxCount;\n    let propsSelector = propsSelectorWithMaxCount.map(i => i.nodeSelectorProp);\n    let otherProps = Object.keys(this.props.panelData.properties)\n                    .filter(otherpr => !excludeProps.includes(otherpr) \n                      && !propsSelector.includes(otherpr) && otherpr !== \"operation\" && otherpr != \"name\");\n    if(excludeProps.includes(\"selector\") && this.state.showSelectorProps === false && this.props.panelData.properties[\"selector\"].length == 0){\n      propsSelector = [];\n    }\n\n    if(propsSelector.length){\n      propsSelector = this.props.sortBySelectorValue(propsSelector);\n    }\n\n    return (\n      <div>\n        <Card>\n          <div className=\"numbers\">\n            <CardTitle tag=\"p\" className=\"nodeName\">{this.props.panelData.nodePath.split('/')[1]}</CardTitle>\n            <p className=\"nodePath\">{this.props.panelData.nodePath}</p>\n          </div> \n          <CardBody>\n            <p>Properties</p>\n            {otherProps.map((p) => (\n              <Fragment key={p}>\n                <FormGroup>\n                  <label>{p}</label>\n                  <Input\n                    type=\"text\"\n                    value={this.props.panelData.properties[p]}\n                    onChange={(e) => this.changeInput(e,p)}\n                  ></Input>\n                </FormGroup>\n              </Fragment>\n            ))}\n            {excludeProps.map((pr) => (<FormGroup check key={pr}>\n                <label>{pr}</label>\n                <Label check>\n                  <Input type=\"radio\" checked={this.props.panelData.properties[pr].length !== 0} onChange={(e) => this.changeRadio(e,pr)} name=\"radio1\" />\n                  {pr !== \"selector\" ? <Input\n                      type=\"text\"\n                      value={this.props.panelData.properties[pr]}\n                      onChange={(e) => this.changeInputWithRadio(e,pr)}\n                  ></Input> : <div className=\"shiftCheckbox\"></div>}\n                </Label>\n            </FormGroup>))}\n            {propsSelector.map((s, index) => (\n              <div className=\"panelSelectorRow\" key={index}>\n                {index !== 0 ? <Button outline color=\"primary\" size=\"sm\" onClick={() => this.removeSelector(s)} className=\"delButton\">\n                  <i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\n                </Button> : ''}\n                  {s.map((p) => (\n                    <Fragment key={p}>\n                      <FormGroup>\n                        <label>{p}</label>\n                        <div className=\"row\">\n                          <div className=\"col\">                   \n                            <Input\n                              type=\"text\"\n                              value={this.props.panelData.properties[p]}\n                              onChange={(e) => this.changeInput(e,p)}\n                            ></Input>\n                          </div>\n                          {propsSelectorWithMaxCount.filter(i => i.nodeSelectorProp === p)[0].maxCount > 1 ? <Button className=\"plusButton\" onClick={() => this.addOneMoreProperty(p)} color=\"primary\">+</Button> : null}\n                        </div>\n                      </FormGroup>\n                    </Fragment>\n                  ))}\n              </div>\n            ))}\n            {((this.props.panelData.properties.selector && this.props.panelData.properties.selector.length) || \"operation\" in this.props.panelData.properties) ? <Button className=\"plusButtonFixed\" onClick={() => this.addOneMorePropertyBundle(propsSelector)} color=\"primary\">+</Button>: null}\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Panel;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Fragment } from \"react\";\n// react plugin used to create charts\nimport _ from \"lodash\";\nimport \"./Dashboard.css\";\nimport FactoryNode from \"../components/FactoryNode\";\nimport Panel from \"../components/Panel\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  Button,\n  ModalHeader,\n  Modal,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Dropdown,\n  DropdownItem,\n  Badge,\n  Table,\n} from \"reactstrap\";\n\nconst N3 = require(\"n3\");\nconst { DataFactory } = N3;\nconst { namedNode, literal, defaultGraph } = DataFactory;\nconst URI = window.location.href;\n//const URI = \"http://localhost:8080\";\nconst BASE_URI = window.location.hostname + \":\" + window.location.port;\n\nconst litegraph = window.LiteGraph;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph: new litegraph.LGraph(),\n      graphCanvas: null,\n      outputLinks: [],\n      prefixOptions: [],\n      config: ``,\n      isModalOpen: false,\n      namespace: \"\",\n      userInput: \"\",\n      afterFilteredSuggestions: [],\n      addNewPrefixes: [],\n      showForm: false,\n      showComponent: \"\",\n      node: \"\",\n      isDisabled: false,\n      nodeArr: [],\n      file: \"\",\n      visible: false,\n      requestID: \"\",\n      showResultModal: false,\n      requestCompleteModal: false,\n      showConfigButton: false,\n      availableFiles: [],\n      showLogButton: false,\n      formProperties: \"\",\n      input1: \"\",\n      input2: \"\",\n      prefixes: {\n        example: \"urn:example:demo/\",\n        foaf: \"http://xmlns.com/foaf/0.1/\",\n        dbpedia: \"http://dbpedia.org/resource/\",\n        deer: \"https://w3id.org/deer/\",\n        fcage: \"https://w3id.org/fcage/\",\n        geo: \"http://www.w3.org/2003/01/geo/wgs84_pos#\",\n        owl: \"http://www.w3.org/2002/07/owl#\",\n        rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n        rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n        xsd: \"http://www.w3.org/2001/XMLSchema#\",\n      },\n      nodesArray: new Set(),\n      quads: [],\n      tempXoneNodeParams: [],\n      fullContent: null,\n      inputPorts: [],\n      inputLinkId: '',\n      selectedFiles: [],\n      panelData: [\n        // {\n        //   numNodeType: 0,\n        //   nodePath: \"one/two\",\n        //   properties: [\"a\", \"b\"],\n        //   showPanel: \"false\",\n        // }\n      ]\n    };\n    this.hiddenFileInput = React.createRef();\n  }\n\n  updateParentPanelData = (temp, numNodeType) => {\n    var curPanelData = Object.assign([], this.state.panelData);\n    let id = curPanelData.findIndex(i => numNodeType === i.numNodeType);\n    curPanelData[id] = temp;\n    this.setState({\n      panelData: curPanelData\n    })\n  };\n\n  getBaseUrl = () => {\n    var re = new RegExp(/^.*\\//);\n    return re.exec(window.location.href);\n  };\n\n  callbackFunction = (properties) => {\n    // console.log(properties);\n    this.setState({\n      formProperties: properties,\n    });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeWindowFunc);\n  };\n\n  resizeWindowFunc = () => {\n    let canvas = document.getElementById(\"mycanvas\");\n    let parent = document.getElementById(\"parentCanvas\");\n    canvas.width = parent.offsetWidth;\n    canvas.height = parent.offsetHeight;\n\n    if (this.state.graphCanvas != null) {\n      this.state.graphCanvas.resize();\n    }\n\n  };\n\n  componentDidMount() {\n    this.resizeWindowFunc();\n    window.addEventListener(\"resize\", this.resizeWindowFunc);\n\n    var graphCanvas = new litegraph.LGraphCanvas(\"#mycanvas\", this.state.graph);\n    this.setState({\n        graphCanvas: graphCanvas,\n    });\n    this.state.graph.start();\n   \n    graphCanvas.show_info = false;\n\n    //returns the prefixes\n    fetch(\"http://prefix.cc/context\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        this.setState({\n          contexts: content[\"@context\"],\n          prefixOptions: Object.keys(content[\"@context\"]),\n        });\n      });\n\n    if (this.state.userInput === \"\" || this.state.namespace === \"\") {\n      this.setState({\n        isDisabled: true,\n      });\n    }\n\n    const parser = new N3.Parser();\n    fetch(URI + \"/shapes\")\n      .then(function (response) {\n        return response.text();\n      })\n      .then((content) => {\n        // console.log(content);\n        const p= new N3.Parser();\n        let fullContent = p.parse(content);\n        this.setState({\n          fullContent: fullContent,\n        });\n\n        parser.parse(content, (error, quad, prefixes) => {\n          if(quad){\n            //console.log(quad);\n            this.showNode(quad);\n          }\n          else{\n\n          }\n          //  console.log(\"No node returned.\");\n        });\n        \n      });\n  }\n\n  getPropertyFirst = (quadsWithXone) => {\n    quadsWithXone.forEach(i => {\n        let quadI = this.state.fullContent.filter(quad => quad.subject.id.includes(i.object.id));\n        if(quadI[0] && !quadI[0].object.id.includes(\"_:n\")){\n          let tempXoneNodeParams = this.state.tempXoneNodeParams;\n          tempXoneNodeParams.push(quadI[0].object.id);\n          this.setState({\n            tempXoneNodeParams: tempXoneNodeParams,\n          });\n        }\n        if(!i.object.id.includes('nil') && i.predicate.id.includes('rest')){\n          this.getPropertyFirst(quadI);\n        }\n    });\n  }\n\n  getPropertiesForNode = (node) => {\n    let arr = [];\n\n    this.setState({\n      tempXoneNodeParams: [],\n    });\n\n    let propsWithPropPredicate = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"property\")).map(i => i.object.id);\n    let propsUnderSelectorNode = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"property\") && quad.object.id.split(\"_\").length-1 == 2).map(i => i.object.id);\n    let selectorNodeMinCount = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && (quad.subject.id.includes(\"selector\") || quad.subject.id.includes(\"operation\")) && quad.predicate.id.includes(\"minCount\")).map(i => i.object.id);\n    let minCount = -1;\n    if(selectorNodeMinCount.length){\n      minCount = selectorNodeMinCount[0].split(\"^^\")[0].match(/\\d+/g)[0];\n      console.log(node, minCount);\n    }\n\n    let propsUnderSelectorNodeWithMaxCount = [];\n    propsUnderSelectorNode.forEach(nodeName => {\n      for(let c = 0; c < minCount; c++){\n        let num = this.state.fullContent.filter(quad => quad.subject.id.includes(nodeName) && quad.predicate.id.includes(\"maxCount\")).map(i => i.object.id);\n        let maxCount = num[0].split(\"^^\")[0].match(/\\d+/g)[0];\n        let propName = this.getPropertyName(nodeName);\n        if(c === 0){\n          propsUnderSelectorNodeWithMaxCount.push({nodeSelectorProp: propName, maxCount: maxCount}); \n        } else {\n          propsUnderSelectorNodeWithMaxCount.push({nodeSelectorProp: propName+c, maxCount: maxCount}); \n        }\n      }\n    });\n    let propsWithXonePredicate = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"xone\")); \n    \n    let propsFromXone = [];\n    propsWithXonePredicate.forEach(pr => {\n      let quadsWithXone = this.state.fullContent.filter(quad => quad.subject.id.includes(pr.object.id));\n      this.getPropertyFirst(quadsWithXone);\n      propsFromXone = this.state.tempXoneNodeParams;\n    });\n\n    let allNodeProps = {'basicProps': propsWithPropPredicate, 'xone': propsFromXone, 'propsSelector': {selectorMinCount: minCount, propsMaxCount: propsUnderSelectorNodeWithMaxCount}};\n    return allNodeProps;\n  }\n\n  getPropertyName = (prop) => {\n    let betweenDashesArray = prop.split('_');\n    let property = \"\";\n    if(betweenDashesArray.length > 2){\n      property = betweenDashesArray[betweenDashesArray.length-1];\n    } else {\n      property = betweenDashesArray[1];\n    }\n    return property;\n  }\n\n  getInputPorts = (node) => {\n    let inputPorts = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"maxInPorts\")).map(i => i.object.id);\n    return inputPorts;\n  }\n\n  getOutputPorts = (node) => {\n    let outputPorts = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"maxOutPorts\")).map(i => i.object.id);\n    return outputPorts;\n  }\n\n  getMessage = (node) => {\n    let message = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"comment\")).map(i => i.object.id);\n    return message;\n  }\n\n  getUrlForTheNode = (node) => {\n    let message = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"seeAlso\")).map(i => i.object.id);\n    return message;\n  }\n\n  initializeNode = (node) => {   \n    let propsArrForNode = this.getPropertiesForNode(node);\n    let inputPorts = this.getInputPorts(node)[0];\n    let outputPorts = this.getOutputPorts(node)[0];\n    let inputs = inputPorts.match(/\\d+/)[0];\n    let outputs = outputPorts.match(/\\d+/)[0];\n    let message = this.getMessage(node);\n    let url = this.getUrlForTheNode(node);\n    let xoneProperties = null;\n    let propsSelector = propsArrForNode.propsSelector;\n    let that = this;\n\n    let properties = {\n      name: \"\"\n    };\n\n    let filteredProps = propsArrForNode.basicProps.map(filteredProp => {\n      return this.getPropertyName(filteredProp);\n    })\n\n    filteredProps.forEach(pr => {\n      properties[pr] = \"\";\n    });\n\n    // now all fields from xone are added, show only one to the user (with radiobutton)\n    filteredProps = propsArrForNode.xone.filter(x => x.includes(node)).map(filteredProp => {\n      return this.getPropertyName(filteredProp);\n    })\n    xoneProperties = filteredProps;\n\n    filteredProps.forEach(pr => {\n      properties[pr] = \"\";\n    });\n\n    propsSelector.propsMaxCount.forEach(pr => {\n      properties[pr.nodeSelectorProp] = \"\";\n    })\n  \n    // add to graph\n    if(node.includes(\"Operator\") ){\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          for(var i = 0; i < inputs; i++){\n            this.addInput(\"input\", \"text\");\n          }\n          for(var j = 0; j < outputs; j++){\n            this.addOutput(\"output\", \"text\");\n          }\n          \n          this.message = message;\n          this.linkName = url;\n\n          this.onDblClick = (e) => {\n            that.showProperies(\"Operator/\", e, node, properties, xoneProperties, propsSelector);\n          }\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [320, 100];\n      nodeClass.color = \"#664d00\";\n      nodeClass.bgcolor = \"#8c6a00\";\n      litegraph.registerNodeType(\"Operator/\"+node, nodeClass);\n      \n    } else \n    if(node.includes(\"Reader\")){\n      // console.log(typeof properties);\n      // console.log(Object.create(properties));\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          this.addOutput(\"output\", \"text\");\n          this.message = message;\n          this.linkName = url;\n\n          this.onDblClick = (e) => {\n            that.showProperies(\"Reader/\", e, node, properties, xoneProperties, propsSelector);\n          }\n\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [180, 100];\n      nodeClass.color = \"#223322\";\n      nodeClass.bgcolor = \"#335533\";\n      litegraph.registerNodeType(\"Reader/\"+node, nodeClass);\n    } else {\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          this.addInput(\"input\", \"text\");\n          this.message = message;\n          this.linkName = url;\n\n          this.onDblClick = (e) => {\n            that.showProperies(\"Writer/\", e, node, properties, xoneProperties, propsSelector);\n          }\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [180, 100];\n      nodeClass.color = \"#223322\";\n      nodeClass.bgcolor = \"#335533\";\n      litegraph.registerNodeType(\"Writer/\"+node, nodeClass);\n    }\n  }\n\n  showProperies = (nodeType, e, node, properties, xoneProperties, propsSelector) => {\n    let propertiesCopy = Object.assign({}, properties);\n    // initialize panel data\n    let panelData = Object.assign([], this.state.panelData);\n    // hide all panels\n    panelData = panelData.map(p => {\n      let temp = Object.assign({}, p);\n      temp.showPanel = false;\n      return temp;\n    });\n    // if this panel was just added\n    let exists = this.state.panelData.find(p => { return p.numNodeType === e.target.data.current_node.id && p.nodePath === nodeType+node});\n    if(!exists){\n      panelData.push({\n          numNodeType: e.target.data.current_node.id,\n          nodePath: nodeType+node,\n          properties: propertiesCopy,\n          xoneProperties: xoneProperties,\n          showPanel: true,\n          propsSelector: propsSelector,\n      });\n      this.setState({\n        panelData: panelData,\n      });\n    }  \n    else {\n      // show current one\n      let idForChange = this.state.panelData.findIndex(p => { return p.nodePath === nodeType+node && p.numNodeType === e.target.data.current_node.id});\n      panelData[idForChange].showPanel = true;\n      this.setState({\n        panelData: panelData,\n      });\n    }\n  }\n\n  showNode = (quadOb) => {\n    // save possible node names in array\n    if(quadOb.predicate.id.includes(\"targetClass\")){\n      let node = quadOb.object.id.split(\"https://w3id.org/deer/\")[1];\n      // console.log(quadOb.object.id);\n      let nodes = this.state.nodesArray;\n      if(node){\n        nodes.add(node);\n        this.initializeNode(node);\n      }\n\n      this.setState({\n        nodesArray: nodes,\n      });\n      \n    }\n  };\n\n  toggleDropdown = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  };\n\n  // getOutputLinks = (node) => {\n  //   for (let link in node.outputs) {\n  //     if (node.outputs[link].links) {\n  //       for (let nodeLink in node.outputs[link].links) {\n  //         var link_id = node.outputs[link].links[nodeLink];\n  //         var linkInGraph = this.state.graph.links[link_id];\n  //         if (linkInGraph) {\n  //           var target_node = this.state.graph.getNodeById(\n  //             linkInGraph.target_id\n  //           );\n  //           return target_node;\n  //         }\n  //       }\n  //     }\n  //   }\n  // };\n\n  saveConfig = () => {\n\n    var data = this.state.graph.serialize();\n    //use N3\n    const myQuad = DataFactory.quad(\n      namedNode(\"https://ruben.verborgh.org/profile/#me\"),\n      namedNode(\"http://xmlns.com/foaf/0.1/givenName\"),\n      literal(\"Ruben\", \"en\"),\n      defaultGraph()\n    );\n\n    var writer = new N3.Writer(\n      {\n        prefixes: this.state.prefixes,\n      },\n      { format: \"N-Triples\" }\n    );\n\n    var parser = new N3.Parser({ format: \"N3\", blankNodePrefix: \"\" });\n    data.nodes.map((node, key) => {\n      let inputPorts = [];\n      let curInputLinkId = '';\n\n      node.properties = this.state.panelData.filter(i => i.numNodeType === node.id && i.nodePath === node.type)[0].properties;\n\n      writer.addQuad(\n        namedNode(\"urn:example:demo/\" + node.properties.name),\n        namedNode(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\"), //predicate\n        namedNode(\"https://w3id.org/deer/\" + node.type.split(\"/\")[1]) //object\n      );\n\n      //if it has an input link, check for them and add to an array\n      if (node.inputs) {\n          for (var i=0; i < node.inputs.length; i++) {\n            if (node.inputs[i].link) {\n              var inputLinkId = node.inputs[i].link;\n              var inputLinkInGraph = this.state.graph.links[inputLinkId];\n             if (inputLinkInGraph) {\n               var inputOriginNode = this.state.graph.getNodeById(\n                 inputLinkInGraph.origin_id\n               );\n               let inputPortsList = this.state.inputPorts;\n                 inputPortsList.push(inputOriginNode);\n                 inputPorts = inputPortsList;\n                 curInputLinkId = inputLinkId\n              \n             }\n         }\n         }\n          // console.log(this.state.inputPorts);\n          //adding the quad for each inputLinks here\n          let blankNodes = inputPorts.map((inputPort, key) => {\n            inputPort.properties = this.state.panelData.filter(i => i.numNodeType === inputPort.id && i.nodePath === inputPort.type)[0].properties;\n            return writer.blank([{\n              predicate: namedNode(\"https://w3id.org/fcage/\" + \"fromNode\"),\n              object:    namedNode(\"urn:example:demo/\" + inputPort.properties.name),\n            },{\n              predicate: namedNode(\"https://w3id.org/fcage/\" + \"fromPort\"),\n              object:    literal(key),\n            }])\n          })\n\n          \n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"https://w3id.org/fcage/\" + \"hasInput\"),\n            writer.list(blankNodes)        \n          );\n          \n          inputPorts.length = 0;\n          curInputLinkId = '';\n\n      }\n\n      // console.log(node);\n\n      let obj = node.properties;\n      // quads with blank nodes\n      if (\"operation\" in obj){\n        let blankNodes = this.addBlankNodes(\"operation\", obj);\n        blankNodes.forEach(i => {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + obj.name),\n            namedNode(\"https://w3id.org/deer/operation\"),\n            writer.blank(i)\n          );\n        })\n      } else if (\"selector\" in obj && obj.selector !== \"\"){\n        let blankNodes = this.addBlankNodes(\"selector\", obj);\n        blankNodes.forEach(i => {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + obj.name),\n            namedNode(\"https://w3id.org/deer/selector\"),\n            writer.blank(i)\n          );\n        })\n      }\n      else{ // simple quads\n        for (var prop in obj) {\n          if (prop !== \"name\" && obj[prop].length){\n            if (obj[prop].includes('http')){\n              writer.addQuad(\n                namedNode(\"urn:example:demo/\" + node.properties.name),\n                namedNode(\"https://w3id.org/deer/\" + prop),\n                namedNode(obj[prop])\n              );\n            }\n            else {\n              writer.addQuad(\n                namedNode(\"urn:example:demo/\" + node.properties.name),\n                namedNode(\"https://w3id.org/deer/\" + prop),\n                literal(obj[prop])\n              );\n            }\n          }\n        }\n      }\n\n\n    });\n    return writer;\n  }\n\n  downloadTtl = () => {\n    let writer = this.saveConfig();\n    writer.end((error, result) => {\n      console.log(result);\n      let blob = new Blob([result], { type: \"text/ttl\" });\n      let url = window.URL.createObjectURL(blob);\n      let a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"config.ttl\";\n      a.click();\n      result = \"\";\n    });\n  }\n\n  runConfig = () => {\n    let writer = this.saveConfig();\n    writer.end((error, result) => {\n      console.log(result);\n      this.submitConfig(result);\n      result = \"\";\n    });\n  };\n\n  sortBySelectorValue = (propsSelector) => {\n    const propsSelectorSorted = [];\n    let predPropPair = [];\n    propsSelector.forEach(i => {\n      let num;\n      if(!i.match(/_extra_\\d+/g))\n        num = i.match(/\\d+/g) || 1;\n      else\n        num = i.split(\"_extra_\")[0].match(/\\d+/g);\n      let matchedProps;  \n      if(num === 1 || num === null){\n        matchedProps = propsSelector.filter(p => p.match(/\\d+/g) === null || (p.match(/_extra_\\d+/g) && !p.split(\"_extra_\")[0].match(/\\d+/g)));\n      } else {\n        matchedProps = propsSelector.filter(p => (p.includes(num) && !p.match(/_extra_\\d+/g)) || (p.match(/_extra_\\d+/g) && p.split(\"_extra_\")[0].match(/\\d+/g) && parseInt(p.split(\"_extra_\")[0].match(/\\d+/g)[0]) === parseInt(num)));\n      }\n\n      let exists = propsSelectorSorted.map(i => !i.every(elem => matchedProps.includes(elem)));\n      let containsFalse = exists.includes(false)\n\n      if(matchedProps.length && !containsFalse){\n        propsSelectorSorted.push(matchedProps);\n      }\n\n      predPropPair = matchedProps;\n    })\n    propsSelector = propsSelectorSorted;\n    return propsSelector;\n  }\n\n  to2dArray = (obj) => {\n    let propsSelector = Object.keys(obj);\n    propsSelector = propsSelector.filter(e => { return e !== 'name' })\n    propsSelector = this.sortBySelectorValue(propsSelector);\n    return propsSelector;\n  }\n\n  addBlankNodes = (byPredicate, obj) => {\n    let arr2D = this.to2dArray(obj);\n    let blankNodes = [];\n\n    arr2D.forEach(i => {\n      let subBlankNodes = [];\n      i.forEach(j => {\n        if (j !== \"name\" && j !== byPredicate && obj[j].length){\n          subBlankNodes.push({\n            predicate: namedNode(\n              \"https://w3id.org/deer/\"+j.replace(/\\d+/g, '').replace(\"_extra_\", \"\")\n            ),\n            object: namedNode(obj[j])\n          });\n        }\n      })\n      blankNodes.push(subBlankNodes);\n    })\n    return blankNodes;\n  }\n\n  //Download the results\n  downloadResults = (index) => {\n    fetch(\n      URI +\n        \"/result/\" +\n        this.state.requestID +\n        \"/\" +\n        this.state.availableFiles[index]\n    ).then((response) => {\n      response.blob().then((blob) => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.availableFiles[index];\n        a.click();\n      });\n    });\n  };\n\n  submitConfig = (result) => {\n    var data = new Blob([result], { type: \"text/ttl\" });\n    var file = new File([data], \"config.ttl\");\n\n    var formData = new FormData();\n    formData = this.uploadFiles();\n    formData.append(\"config\", file);\n    fetch(URI + \"/submit\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        if (res.error && res.error.code === -1) {\n          this.setState({\n            visible: true,\n          });\n        } else if (res.requestId) {\n          this.setState({\n            requestID: res.requestId,\n            showLogButton: true,\n          });\n          this.interval = setInterval(this.getStatusForRequest, 1000);\n        }\n      });\n  };\n\n  getStatusForRequest = () => {\n    fetch(URI + \"/status/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        if (content.status.code === 2) {\n          clearInterval(this.interval);\n          this.setState({\n            requestCompleteModal: true,\n            showConfigButton: true,\n          });\n          this.getResults();\n        } else if(content.status.code === 1){\n          clearInterval(this.interval);\n          this.setState({\n            visible: true,\n          });\n        }\n      });\n  };\n\n  getResults = () => {\n    fetch(URI + \"/results/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        console.log(content.availableFiles);\n        this.setState({\n          availableFiles: content.availableFiles,\n        });\n      });\n  };\n\n  showLogs = () => {\n    fetch(URI + \"/logs/\" + this.state.requestID).then(function (response) {\n      let a = document.getElementById(\"downloadlink\");\n      a.href = response.url;\n      a.click();\n    });\n  };\n  toggle = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  getFilteredOptions = (event) => {\n    this.setState({\n      afterFilteredSuggestions: this.state.prefixOptions.filter((i) => {\n        return i.toLowerCase().includes(event.target.value.toLowerCase());\n      }),\n      userInput: event.target.value,\n    });\n  };\n\n  selectedPrefix = (event) => {\n    this.setState({\n      afterFilteredSuggestions: [],\n      namespace: this.state.contexts[event.target.value],\n      userInput: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  handleNamespaceChange = (event) => {\n    this.setState({\n      namespace: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  addNewPrefixes = (e) => {\n    this.setState({\n      addNewPrefixes: this.state.addNewPrefixes.concat(this.state.userInput),\n    });\n    this.state.prefixes[this.state.userInput] = this.state.namespace;\n  };\n\n  saveResults = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleResultModal = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleRequestCompleteModal = () => {\n    this.setState({\n      requestCompleteModal: !this.state.requestCompleteModal,\n    });\n  };\n\n  uploadFiles = () => {\n    let files = this.state.selectedFiles;\n\n    const data = new FormData()\n    for(var x = 0; x < files.length; x++) {\n       data.append('file', files[x])\n    }\n\n    return data;\n  };\n\n  onSelectedFiles = (event) => {\n    this.setState({\n     selectedFiles: event.target.files,\n    })\n  };\n\n  onSelectedFile = (event) => {\n    let file = event.target.files[0];\n\n    let fileReader = new FileReader();\n    fileReader.onload = (fileLoadedEvent) => {\n        let textFromFileLoaded = fileLoadedEvent.target.result;\n        this.ttlToUI(textFromFileLoaded);\n    };\n\n    fileReader.readAsText(file, \"UTF-8\");\n  }\n\n  uploadTtl = (event) => {\n    this.hiddenFileInput.current.click();\n  }\n\n  ttlToUI = (textFromFileLoaded) => {\n    const parser = new N3.Parser();\n    let fullFileContent = parser.parse(textFromFileLoaded);\n    let nodesInstances = [];\n    parser.parse(textFromFileLoaded, (error, quad, prefixes) => {\n      if(quad){\n        // console.log(quad);\n        // add nodes to canvas\n        if(quad.predicate.id.includes(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\")){\n          let node = quad.object.id.split(\"https://w3id.org/deer/\")[1];//\"SparqlModelReader\";\n          // console.log(node);\n          let mainPath;\n          if(node.includes(\"Reader\")){\n            mainPath = \"Reader\";\n          }\n          if(node.includes(\"Writer\")){\n            mainPath = \"Writer\";\n          }\n          if(node.includes(\"Operator\")){\n            mainPath = \"Operator\";\n          }\n          let nodeWithSpecificType = litegraph.createNode(mainPath+\"/\"+node);\n          nodesInstances.push({name: quad.subject.id, instance: nodeWithSpecificType});\n          // nodeReader.pos = [100,400];\n          this.state.graph.add(nodeWithSpecificType);\n          // connecting nodes\n          // console.log(fullFileContent);\n          let inputPorts = fullFileContent.filter(q => quad.subject.id === q.subject.id && q.predicate.id.includes(\"hasInput\")).map(i => i.object.id);\n          if(inputPorts.length){\n            // handling blank nodes like: inputPorts[0] = ':n3-109'\n            if(inputPorts[inputPorts.length-1].includes(\"_:\")){\n              while(!inputPorts.includes(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil\")){\n                let realName = fullFileContent.filter(q => q.subject.id === inputPorts[inputPorts.length-1]).map(i => i.object.id);\n                inputPorts = realName;\n              } \n            }\n            // console.log(nodesInstances, inputPorts);\n            let connectedNode = nodesInstances.filter(i => i.name === inputPorts[0]);\n            // console.log(connectedNode);\n            if(connectedNode.length){\n              connectedNode[0].instance.connect(0, nodeWithSpecificType, 0);\n            }\n          }\n          // todo: add their properties\n        }\n      }\n    });\n  }\n\n  render() {\n    const options = _.map(this.state.prefixOptions, (opt, index) => ({\n      key: opt,\n      text: opt,\n      value: opt,\n    }));\n\n    return (\n      <div className=\"content\">\n        <Modal isOpen={this.state.visible} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>\n            Incorrect Configuration\n          </ModalHeader>\n          <ModalBody>\n            Please input all the required fields and connections.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.requestCompleteModal}\n          toggle={this.toggleRequestCompleteModal}\n        >\n          <ModalHeader toggle={this.toggleRequestCompleteModal}>\n            Status\n          </ModalHeader>\n          <ModalBody>\n            The results are ready. You can download them by clicking 'Show\n            Results'.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.showResultModal}\n          toggle={this.toggleResultModal}\n        >\n          <ModalHeader toggle={this.toggleResultModal}>Results</ModalHeader>\n          <ModalBody>\n            <Table>\n              <thead>\n                <tr>\n                  <th>File</th>\n                  <th>Download</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.availableFiles.map((file, index) => (\n                  <tr key={index}>\n                    <td>{file}</td>\n                    <td>\n                      <Button onClick={() => this.downloadResults(index)}>\n                        <i\n                          className=\"fa fa-download\"\n                          style={{ color: `white` }}\n                        />{\" \"}\n                        Download\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </ModalBody>\n        </Modal>\n        <Row>\n          <Col lg=\"9\" md=\"9\" sm=\"9\">\n            <Card className=\"card-stats\">\n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Prefixes</CardTitle>\n              </div>\n              <CardBody>\n                <Row>\n                  <Col md=\"12\" xs=\"12\">\n                    <Form>\n                      <Row>\n                        <Col md=\"4\">\n                          <Fragment>\n                            <FormGroup className=\"dropdown\">\n                              <label>Label</label>\n                              <Input\n                                placeholder=\"Label\"\n                                type=\"text\"\n                                value={this.state.userInput}\n                                onChange={this.getFilteredOptions}\n                              ></Input>\n                              <Dropdown\n                                className=\"dropdown-content\"\n                                toggle={this.toggleDropdown}\n                              >\n                                {this.state.afterFilteredSuggestions.map(\n                                  (suggestions, key) => (\n                                    <DropdownItem\n                                      className=\"dropdown-item\"\n                                      value={suggestions}\n                                      onClick={this.selectedPrefix}\n                                    >\n                                      {suggestions}\n                                    </DropdownItem>\n                                  )\n                                )}\n                              </Dropdown>\n                            </FormGroup>\n                          </Fragment>\n                        </Col>\n                        <Col md=\"4\">\n                          <FormGroup>\n                            <label>Namespace</label>\n                            <Input\n                              placeholder=\"Namespace\"\n                              type=\"text\"\n                              value={this.state.namespace}\n                              onChange={this.handleNamespaceChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            disabled={this.state.isDisabled}\n                            className=\"btn-round prefixBtn\"\n                            color=\"primary\"\n                            onClick={this.addNewPrefixes}\n                          >\n                            Add prefix\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {this.state.addNewPrefixes.map((addPrefix) => (\n                    <Badge variant=\"light\"> {addPrefix}</Badge>\n                  ))}\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col lg=\"3\" md=\"3\" sm=\"3\">\n            <Card className=\"card-stats\">\n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Attach files</CardTitle>\n              </div>\n              <CardBody>\n                {/* <div class=\"form-group\">\n                  <input\n                    type=\"file\"\n                    class=\"form-control-file\"\n                    id=\"exampleFormControlFile1\"\n                  ></input>\n                </div> */}\n                <Row>\n                  <Col md=\"8\">\n                    <Input className=\"file inputFile\" multiple type=\"file\" name=\"file\" id=\"exampleFile\" onChange={this.onSelectedFiles}/>\n                  </Col>\n                </Row>\n              </CardBody>\n              <hr />\n              <CardFooter></CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"9\">\n            <Card> \n              <div style={{ marginLeft: `10px` }}>    \n                <div className=\"numbers\" style={{ float: 'left' }}>\n                  <CardTitle tag=\"p\">Graph</CardTitle>\n                </div>\n                <input style={{display:'none'}} ref={this.hiddenFileInput} type=\"file\" onChange={this.onSelectedFile}/>\n                <Button onClick={this.uploadTtl} style={{ marginRight: `10px`, float: 'right', marginBottom: '0px' }}>\n                      <i className=\"fa fa-upload\" style={{ color: `white` }} /> Import\n                      Configuration\n                </Button>\n              </div>\n              <CardBody>\n                <div id=\"parentCanvas\" className=\"litegraph litegraph-editor\">\n                  <canvas id=\"mycanvas\" height=\"600\" width=\"1000\"></canvas>{\" \"}\n                </div>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {/* <a\n                    download=\"config.ttl\"\n                    id=\"downloadlink\"\n                    //style={{ display: \"none\" }}\n                    ref=\"file\"\n                  > */}\n                  <Button onClick={this.runConfig}>\n                    <i className=\"fa fa-cog\" style={{ color: `white` }} /> Run\n                    Configuration\n                  </Button>\n                  {/* </a> */}\n                  {this.state.showConfigButton ? (\n                    <Button\n                      onClick={this.saveResults}\n                      style={{ marginLeft: `10px` }}\n                    >\n                      <i\n                        className=\"fa fa-sticky-note\"\n                        style={{ color: `white` }}\n                      />{\" \"}\n                      Show results\n                    </Button>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.state.showLogButton ? (\n                    <a\n                      target=\"_blank\"\n                      id=\"downloadlink\"\n                      //style={{ display: \"none\" }}\n                      ref=\"file\"\n                    >\n                      <Button\n                        onClick={this.showLogs}\n                        style={{ marginLeft: `10px` }}\n                      >\n                        <i className=\"fa fa-cog\" style={{ color: `white` }} />{\" \"}\n                        Logs\n                      </Button>\n                    </a>\n                  ) : (\n                    \"\"\n                  )}\n                  <Button onClick={this.downloadTtl} style={{ marginLeft: `10px` }}>\n                    <i className=\"fa fa-download\" style={{ color: `white` }} /> Export\n                    Configuration\n                  </Button>\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          {/* <Modal isOpen={this.state.isModalOpen} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>Display Config</ModalHeader>\n            <ModalBody></ModalBody>\n          </Modal> */}\n\n          <Col md=\"3\">\n            {this.state.panelData.filter(p => p.showPanel === true).map((p) =>(\n            <Panel key={p.nodePath+p.numNodeType} panelData={p} updateParentPanelData={this.updateParentPanelData} sortBySelectorValue={this.sortBySelectorValue} />))} \n          </Col>\n\n        </Row>\n        {/* <Row>\n            <Col md=\"4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h5\">Email Statistics</CardTitle>\n                  <p className=\"card-category\">Last Campaign Performance</p>\n                </CardHeader>\n                <CardBody>\n                  <Pie\n                    data={dashboardEmailStatisticsChart.data}\n                    options={dashboardEmailStatisticsChart.options}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"legend\">\n                    <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                    <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                    <i className=\"fa fa-circle text-gray\" /> Unopened\n                  </div>\n                  <hr />\n                  <div className=\"stats\">\n                    <i className=\"fa fa-calendar\" /> Number of emails sent\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md=\"8\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h5\">NASDAQ: AAPL</CardTitle>\n                  <p className=\"card-category\">Line Chart with Points</p>\n                </CardHeader>\n                <CardBody>\n                  <Line\n                    data={dashboardNASDAQChart.data}\n                    options={dashboardNASDAQChart.options}\n                    width={400}\n                    height={100}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"chart-legend\">\n                    <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                  </div>\n                  <hr />\n                  <div className=\"card-stats\">\n                    <i className=\"fa fa-check\" /> Data information certified\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row> */}\n      </div>\n    );\n  }\n}\n\nlitegraph.registered_node_types = {};\nlitegraph.searchbox_extras = {};\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport DemoNavbar from \"components/Navbars/DemoNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport routes from \"routes.js\";\nimport Admin from \"./Admin.css\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    };\n    this.mainPanel = React.createRef();\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  };\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          <DemoNavbar {...this.props} />\n          <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  path={prop.layout + prop.path}\n                  component={prop.component}\n                  key={key}\n                />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.jsx\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard,\n    layout: \"/admin\"\n  }\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n  Button,\n} from \"reactstrap\";\n\nimport DemoNavbar from \"./DemoNavbar.css\";\nimport routes from \"routes.js\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\",\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"dark\",\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n  getBrand() {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\",\n      });\n    } else {\n      this.setState({\n        color: \"transparent\",\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\"></div>\n            <NavbarBrand href=\"/\">\n              <img\n                className=\"logo-height\"\n                alt=\"...\"\n                src={require(\"assets/img/deer-logo.svg\")}\n              />\n              <span className=\"logo-title\">DEER Web UI</span>\n            </NavbarBrand>\n          </div>\n          {/* <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler> */}\n          {/* <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          > */}\n          {/* <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form> */}\n          {/* </Collapse> */}\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <nav className=\"footer-nav\">\n              <ul>\n                <li>\n                  <a href=\"https://www.creative-tim.com\" target=\"_blank\">\n                    {/* TODO: */}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://blog.creative-tim.com\" target=\"_blank\"></a>\n                </li>\n                <li>\n                  <a\n                    href=\"https://www.creative-tim.com/license\"\n                    target=\"_blank\"\n                  ></a>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"credits ml-auto\">\n              {/* <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with{\" \"}\n                <i className=\"fa fa-heart heart\" /> by Creative Tim\n              </div> */}\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss?v=1.1.0\";\nimport \"assets/demo/demo.css\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Redirect to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
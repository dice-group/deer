{"version":3,"sources":["assets/img/deer-logo.svg","components/FactoryNode.jsx","components/Panel.jsx","views/Dashboard.jsx","routes.js","components/Navbars/DemoNavbar.jsx","components/Footer/Footer.jsx","layouts/Admin.jsx","index.js"],"names":["module","exports","__webpack_require__","p","FactoryNode","React","Component","constructor","props","super","that","this","linkWidget","addWidget","linkName","v","window","open","widgets_start_y","widgets_up","onDrawForeground","ctx","graphcanvas","flags","collapsed","font","fontSize","str0","message","replace","lines","splitStringForCanvas","split","j","length","fillText","str","newStr","charsInStr","includes","myReg","RegExp","strArr","match","i","trim","render","react_default","a","createElement","Panel","changeInput","e","temp","Object","assign","panelData","properties","target","value","updateParentPanelData","numNodeType","changeInputWithRadio","updatedProperties","excludeProps","xoneProperties","filter","undefined","keys","forEach","exp","changeRadio","otherProps","otherpr","Card","className","CardTitle","tag","nodePath","CardBody","map","react","key","FormGroup","Input","placeholder","type","onChange","pr","check","Label","checked","name","N3","require","DataFactory","namedNode","literal","defaultGraph","URI","location","href","litegraph","hostname","port","LiteGraph","registered_node_types","searchbox_extras","Dashboard","routes","path","icon","component","curPanelData","state","id","findIndex","setState","getBaseUrl","exec","callbackFunction","formProperties","resizeWindowFunc","canvas","document","getElementById","parent","width","offsetWidth","height","offsetHeight","graphCanvas","resize","getPropertyFirst","quadsWithXone","quadI","fullContent","quad","subject","object","tempXoneNodeParams","push","predicate","getPropertiesForNode","node","propsWithPropPredicate","propsWithXonePredicate","propsFromXone","basicProps","xone","getPropertyName","prop","betweenDashesArray","getInputPorts","getOutputPorts","getMessage","getUrlForTheNode","initializeNode","propsArrForNode","inputPorts","outputPorts","inputs","outputs","url","filteredProps","filteredProp","nodeClass","addInput","addOutput","onDblClick","showProperies","title","size","color","bgcolor","registerNodeType","nodeType","propertiesCopy","showPanel","find","data","current_node","showOrDisableXoneProperties","xoneProps","console","log","excludingPArray","querySelectorAll","classList","remove","add","getElementsByClassName","innerHTML","showNode","quadOb","nodes","nodesArray","toggleDropdown","show","getInputLink","inputLinkId","link","inputLinkInGraph","graph","links","inputOriginNode","getNodeById","origin_id","inputPortsList","saveConfig","serialize","writer","Writer","prefixes","format","Parser","blankNodePrefix","addQuad","blankNodes","inputPort","blank","list","obj","addBlankNodes","end","error","result","submitConfig","byPredicate","downloadResults","index","fetch","requestID","availableFiles","then","response","blob","URL","createObjectURL","download","click","Blob","file","File","formData","FormData","uploadFiles","append","method","body","json","res","code","visible","requestId","showLogButton","interval","setInterval","getStatusForRequest","content","status","clearInterval","requestCompleteModal","showConfigButton","getResults","showLogs","toggle","getFilteredOptions","event","afterFilteredSuggestions","prefixOptions","toLowerCase","userInput","selectedPrefix","namespace","contexts","isDisabled","handleNamespaceChange","addNewPrefixes","concat","saveResults","showResultModal","toggleResultModal","toggleRequestCompleteModal","files","selectedFiles","x","onSelectedFiles","LGraph","outputLinks","config","isModalOpen","showForm","showComponent","nodeArr","input1","input2","example","foaf","dbpedia","deer","fcage","geo","owl","rdf","rdfs","xsd","Set","quads","componentWillUnmount","removeEventListener","componentDidMount","addEventListener","LGraphCanvas","start","show_info","parser","text","parse","_","opt","Modal","isOpen","ModalHeader","ModalBody","Table","Button","onClick","style","Row","Col","lg","md","sm","xs","Form","Dropdown","suggestions","DropdownItem","disabled","CardFooter","addPrefix","Badge","variant","multiple","marginLeft","ref","components_Panel","layout","Header","dropdownOpen","bind","dropdownToggle","sidebarToggle","createRef","getBrand","brandName","indexOf","openSidebar","documentElement","current","updateColor","innerWidth","componentDidUpdate","history","pathname","Navbar","expand","Container","fluid","NavbarBrand","alt","src","Footer","ps","default","handleActiveClick","activeColor","handleBgClick","backgroundColor","mainPanel","navigator","platform","PerfectScrollbar","destroy","action","scrollTop","scrollingElement","Navbars_DemoNavbar","react_router","components_Footer_Footer","hist","createBrowserHistory","ReactDOM","layouts_Admin","to"],"mappings":"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","file":"static/js/main.2c49eb0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/deer-logo.b55379b3.svg\";","import React, { Fragment } from \"react\";\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nclass FactoryNode extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // this.addInput(\"input\", \"text\");\n    // this.properties = {\n    //   linkName: \"https://google.com\",\n    //   name: \"\",\n    //   outputFile: \"number\",\n    //   outputFormat: 0,\n    // };\n    \n    // this.linkName = \"https://google.com\";\n\n    var that = this;\n\n    this.linkWidget = this.addWidget(\n      \"button\",\n      \"read more\",\n      this.linkName,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        window.open( \n              that.linkName, \"_blank\"); \n      }\n    );\n    this.widgets_start_y = 70;\n    this.widgets_up = false;\n\n    this.onDrawForeground = (ctx, graphcanvas) =>\n    {\n      if(this.flags.collapsed)\n        return;\n      let fontSize = 12;\n      ctx.font = fontSize+\"px Arial\";\n      // console.log(this.message);\n      let str0 = null;\n      if(this.message[0]){\n        str0 = this.message[0].replace(/\"/g,\"\");\n      }\n      str0 = str0 || \"Description of the node ...Continue description of the node ...\";\n      let str1 = this.splitStringForCanvas(str0);\n      var lines = str1.split('\\n');\n      for (var j = 0; j<lines.length; j++)\n        ctx.fillText(lines[j], 10, 55 + (j*fontSize) );\n    }\n    \n  }\n\n  // create folder for utils and move this function there\n  splitStringForCanvas(str){\n    let newStr = \"\";\n    let charsInStr = 27;\n    if(this.props.includes(\"Operator\")){\n      charsInStr = 49;\n    }\n    let myReg = new RegExp(\".{1,\"+charsInStr+\"}\", \"g\");\n    let strArr = str.match(myReg);\n    for(let i=0; i<strArr.length; i++){\n      newStr += strArr[i].trim() + \"\\n\";\n    }\n    return newStr;\n  }\n\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n\nexport default FactoryNode;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n  Button,\n  Card,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\n\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    // };\n  }\n\n  changeInput = (e, p) => {\n    var temp = Object.assign({}, this.props.panelData);\n    temp.properties[p] = e.target.value;\n    this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n  }\n\n  changeInputWithRadio = (e, p) => {\n    // change the edited input\n    this.changeInput(e, p);\n\n    var temp = Object.assign({}, this.props.panelData);\n    let updatedProperties = {};\n    let excludeProps = this.props.panelData.xoneProperties.filter(i => {return i !== undefined && i !== p});\n    // clear all optional except the current one\n    Object.keys(temp.properties).forEach(i => {\n      excludeProps.forEach(exp => {\n        if (exp === i){\n          updatedProperties[i] = \"\";\n        } else {\n          updatedProperties[i] = temp.properties[i];\n        }\n      })     \n    });\n\n    temp.properties = updatedProperties;\n    this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n  \n  }\n\n  changeRadio = (e, p) => {\n    e.target.value = \"type here\";\n    this.changeInputWithRadio(e, p);\n  }\n\n\n  render() {\n    let excludeProps = this.props.panelData.xoneProperties.filter(i => {return i !== undefined});   \n    let otherProps = Object.keys(this.props.panelData.properties).filter(otherpr => !excludeProps.includes(otherpr));\n    return (\n      <div>\n        <Card>\n          <div className=\"numbers\">\n            <CardTitle tag=\"p\">{this.props.panelData.nodePath.split('/')[1]}</CardTitle>\n            <p>{this.props.panelData.nodePath}</p>\n          </div> \n          <CardBody>\n            <p>Properties</p>\n            {otherProps.map((p) => (\n              <Fragment key={p}>\n                <FormGroup>\n                  <label>{p}</label>\n                  <Input\n                    placeholder={p}\n                    type=\"text\"\n                    value={this.props.panelData.properties[p]}\n                    onChange={(e) => this.changeInput(e,p)}\n                  ></Input>\n                </FormGroup>\n              </Fragment>\n            ))}\n            {excludeProps.map((pr) => (<FormGroup check key={pr}>\n                <label>{pr}</label>\n                <Label check>\n                  <Input type=\"radio\" checked={this.props.panelData.properties[pr].length !== 0} onChange={(e) => this.changeRadio(e,pr)} name=\"radio1\" />\n                  <Input\n                      placeholder={pr}\n                      type=\"text\"\n                      value={this.props.panelData.properties[pr]}\n                      onChange={(e) => this.changeInputWithRadio(e,pr)}\n                  ></Input>\n                </Label>\n            </FormGroup>))}\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Panel;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Fragment } from \"react\";\n// react plugin used to create charts\nimport _ from \"lodash\";\nimport \"./Dashboard.css\";\nimport FactoryNode from \"../components/FactoryNode\";\nimport Panel from \"../components/Panel\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  Button,\n  ModalHeader,\n  Modal,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Dropdown,\n  DropdownItem,\n  Badge,\n  Table,\n} from \"reactstrap\";\n\nconst N3 = require(\"n3\");\nconst { DataFactory } = N3;\nconst { namedNode, literal, defaultGraph } = DataFactory;\nconst URI = window.location.href;\n//const URI = \"http://localhost:8080\";\nconst BASE_URI = window.location.hostname + \":\" + window.location.port;\n\nconst litegraph = window.LiteGraph;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph: new litegraph.LGraph(),\n      graphCanvas: null,\n      outputLinks: [],\n      prefixOptions: [],\n      config: ``,\n      isModalOpen: false,\n      namespace: \"\",\n      userInput: \"\",\n      afterFilteredSuggestions: [],\n      addNewPrefixes: [],\n      showForm: false,\n      showComponent: \"\",\n      node: \"\",\n      isDisabled: false,\n      nodeArr: [],\n      file: \"\",\n      visible: false,\n      requestID: \"\",\n      showResultModal: false,\n      requestCompleteModal: false,\n      showConfigButton: false,\n      availableFiles: [],\n      showLogButton: false,\n      formProperties: \"\",\n      input1: \"\",\n      input2: \"\",\n      prefixes: {\n        example: \"urn:example:demo/\",\n        foaf: \"http://xmlns.com/foaf/0.1/\",\n        dbpedia: \"http://dbpedia.org/resource/\",\n        deer: \"https://w3id.org/deer/\",\n        fcage: \"https://w3id.org/fcage/\",\n        geo: \"http://www.w3.org/2003/01/geo/wgs84_pos#\",\n        owl: \"http://www.w3.org/2002/07/owl#\",\n        rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n        rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n        xsd: \"http://www.w3.org/2001/XMLSchema#\",\n      },\n      nodesArray: new Set(),\n      quads: [],\n      tempXoneNodeParams: [],\n      fullContent: null,\n      inputPorts: [],\n      inputLinkId: '',\n      selectedFiles: [],\n      panelData: [\n        // {\n        //   numNodeType: 0,\n        //   nodePath: \"one/two\",\n        //   properties: [\"a\", \"b\"],\n        //   showPanel: \"false\",\n        // }\n      ],\n    };\n  }\n\n  updateParentPanelData = (temp, numNodeType) => {\n    var curPanelData = Object.assign([], this.state.panelData);\n    let id = curPanelData.findIndex(i => numNodeType === i.numNodeType);\n    curPanelData[id] = temp;\n    this.setState({\n      panelData: curPanelData\n    })\n  };\n\n  getBaseUrl = () => {\n    var re = new RegExp(/^.*\\//);\n    return re.exec(window.location.href);\n  };\n\n  callbackFunction = (properties) => {\n    // console.log(properties);\n    this.setState({\n      formProperties: properties,\n    });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeWindowFunc);\n  };\n\n  resizeWindowFunc = () => {\n    let canvas = document.getElementById(\"mycanvas\");\n    let parent = document.getElementById(\"parentCanvas\");\n    canvas.width = parent.offsetWidth;\n    canvas.height = parent.offsetHeight;\n\n    if (this.state.graphCanvas != null) {\n      this.state.graphCanvas.resize();\n    }\n\n  };\n\n  componentDidMount() {\n    this.resizeWindowFunc();\n    window.addEventListener(\"resize\", this.resizeWindowFunc);\n\n    var graphCanvas = new litegraph.LGraphCanvas(\"#mycanvas\", this.state.graph);\n    this.setState({\n        graphCanvas: graphCanvas,\n    });\n    this.state.graph.start();\n   \n    graphCanvas.show_info = false;\n\n    //returns the prefixes\n    fetch(\"http://prefix.cc/context\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        this.setState({\n          contexts: content[\"@context\"],\n          prefixOptions: Object.keys(content[\"@context\"]),\n        });\n      });\n\n    if (this.state.userInput === \"\" || this.state.namespace === \"\") {\n      this.setState({\n        isDisabled: true,\n      });\n    }\n\n    const parser = new N3.Parser();\n    fetch(URI + \"/shapes\")\n      .then(function (response) {\n        return response.text();\n      })\n      .then((content) => {\n        // console.log(content);\n        const p= new N3.Parser();\n        let fullContent = p.parse(content);\n        this.setState({\n          fullContent: fullContent,\n        });\n\n        parser.parse(content, (error, quad, prefixes) => {\n          if(quad){\n            //console.log(quad);\n            this.showNode(quad);\n          }\n          else{\n\n          }\n          //  console.log(\"No node returned.\");\n        });\n        \n      });\n  }\n\n  getPropertyFirst = (quadsWithXone) => {\n    quadsWithXone.forEach(i => {\n        let quadI = this.state.fullContent.filter(quad => quad.subject.id.includes(i.object.id));\n        if(quadI[0] && !quadI[0].object.id.includes(\"_:n\")){\n          let tempXoneNodeParams = this.state.tempXoneNodeParams;\n          tempXoneNodeParams.push(quadI[0].object.id);\n          this.setState({\n            tempXoneNodeParams: tempXoneNodeParams,\n          });\n        }\n        if(!i.object.id.includes('nil') && i.predicate.id.includes('rest')){\n          this.getPropertyFirst(quadI);\n        }\n    });\n  }\n\n  getPropertiesForNode = (node) => {\n    let arr = [];\n\n    this.setState({\n      tempXoneNodeParams: [],\n    });\n\n    let propsWithPropPredicate = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"property\")).map(i => i.object.id);\n    let propsWithXonePredicate = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"xone\")); \n    \n    let propsFromXone = [];\n    propsWithXonePredicate.forEach(pr => {\n      let quadsWithXone = this.state.fullContent.filter(quad => quad.subject.id.includes(pr.object.id));\n      this.getPropertyFirst(quadsWithXone);\n      propsFromXone = this.state.tempXoneNodeParams;\n    });\n\n    let allNodeProps = {'basicProps': propsWithPropPredicate, 'xone': propsFromXone};\n    return allNodeProps;\n  }\n\n  getPropertyName = (prop) => {\n    let betweenDashesArray = prop.split('_');\n    let property = \"\";\n    if(betweenDashesArray.length > 2){\n      property = betweenDashesArray[betweenDashesArray.length-1];\n    } else {\n      property = betweenDashesArray[1];\n    }\n    return property;\n  }\n\n  getInputPorts = (node) => {\n    let inputPorts = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"maxInPorts\")).map(i => i.object.id);\n    return inputPorts;\n  }\n\n  getOutputPorts = (node) => {\n    let outputPorts = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"maxOutPorts\")).map(i => i.object.id);\n    return outputPorts;\n  }\n\n  getMessage = (node) => {\n    let message = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"comment\")).map(i => i.object.id);\n    return message;\n  }\n\n  getUrlForTheNode = (node) => {\n    let message = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"seeAlso\")).map(i => i.object.id);\n    return message;\n  }\n\n  initializeNode = (node) => {   \n    let propsArrForNode = this.getPropertiesForNode(node);\n    let inputPorts = this.getInputPorts(node)[0];\n    let outputPorts = this.getOutputPorts(node)[0];\n    let inputs = inputPorts.match(/\\d+/)[0];\n    let outputs = outputPorts.match(/\\d+/)[0];\n    let message = this.getMessage(node);\n    let url = this.getUrlForTheNode(node);\n    let xoneProperties = null;\n    let that = this;\n\n    let properties = {\n      name: \"\"\n    };\n\n    let filteredProps = propsArrForNode.basicProps.map(filteredProp => {\n      return this.getPropertyName(filteredProp);\n    })\n\n    filteredProps.forEach(pr => {\n      properties[pr] = \"\";\n    });\n\n    // now all fields from xone are added, show only one to the user (with radiobutton)\n    filteredProps = propsArrForNode.xone.map(filteredProp => {\n      return this.getPropertyName(filteredProp);\n    })\n    xoneProperties = filteredProps;\n\n    filteredProps.forEach(pr => {\n      properties[pr] = \"\";\n    });\n\n    delete properties.undefined;\n  \n    // add to graph\n    if(node.includes(\"Operator\") ){\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          for(var i = 0; i < inputs; i++){\n            this.addInput(\"input\", \"text\");\n          }\n          for(var j = 0; j < outputs; j++){\n            this.addOutput(\"output\", \"text\");\n          }\n          \n          this.message = message;\n          this.linkName = url;\n\n          this.onDblClick = (e) => {\n            that.showProperies(\"Operator/\", e, node, properties, xoneProperties);\n          }\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [320, 100];\n      nodeClass.color = \"#664d00\";\n      nodeClass.bgcolor = \"#8c6a00\";\n      litegraph.registerNodeType(\"Operator/\"+node, nodeClass);\n      \n    } else \n    if(node.includes(\"Reader\")){\n      // console.log(typeof properties);\n      // console.log(Object.create(properties));\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          this.addOutput(\"output\", \"text\");\n          this.message = message;\n          this.linkName = url;\n\n          this.onDblClick = (e) => {\n            that.showProperies(\"Reader/\", e, node, properties, xoneProperties);\n          }\n\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [180, 100];\n      nodeClass.color = \"#223322\";\n      nodeClass.bgcolor = \"#335533\";\n      litegraph.registerNodeType(\"Reader/\"+node, nodeClass);\n    } else {\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          this.addInput(\"input\", \"text\");\n          this.message = message;\n          this.linkName = url;\n\n          this.onDblClick = (e) => {\n            that.showProperies(\"Writer/\", e, node, properties, xoneProperties);\n          }\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [180, 100];\n      nodeClass.color = \"#223322\";\n      nodeClass.bgcolor = \"#335533\";\n      litegraph.registerNodeType(\"Writer/\"+node, nodeClass);\n    }\n  }\n\n  showProperies = (nodeType, e, node, properties, xoneProperties) => {\n    let propertiesCopy = Object.assign({}, properties);\n    // initialize panel data\n    let panelData = Object.assign([], this.state.panelData);\n    // hide all panels\n    panelData = panelData.map(p => {\n      let temp = Object.assign({}, p);\n      temp.showPanel = false;\n      return temp;\n    });\n    // if this panel was just added\n    let exists = this.state.panelData.find(p => { return p.numNodeType === e.target.data.current_node.id && p.nodePath === nodeType+node});\n    if(!exists){\n      panelData.push({\n          numNodeType: e.target.data.current_node.id,\n          nodePath: nodeType+node,\n          properties: propertiesCopy,\n          xoneProperties: xoneProperties,\n          showPanel: true,\n      });\n      this.setState({\n        panelData: panelData,\n      });\n    }  \n    else {\n      // show current one\n      let idForChange = this.state.panelData.findIndex(p => { return p.nodePath === nodeType+node && p.numNodeType === e.target.data.current_node.id});\n      panelData[idForChange].showPanel = true;\n      this.setState({\n        panelData: panelData,\n      });\n    }\n  }\n\n  showOrDisableXoneProperties = (props, p, xoneProps) => {\n\n    console.log(xoneProps);\n    if(xoneProps.includes(p)){\n      let excludingPArray = xoneProps.filter(i => i !== p);\n\n      //enable all\n      xoneProps.forEach(i => {\n        document.querySelectorAll('[data-property='+i+']')[0].classList.remove('disabledDiv');\n      });\n\n\n      // when we change one prop then we disable and clear others (excludingPArray)\n      excludingPArray.forEach(i => {\n        document.querySelectorAll('[data-property='+i+']')[0].classList.add('disabledDiv');\n        document.querySelectorAll('[data-property='+i+']')[0].getElementsByClassName(\"property_value\")[0].innerHTML=\"\";\n        delete props[i];\n      });\n    }\n  }\n\n  showNode = (quadOb) => {\n    // save possible node names in array\n    if(quadOb.predicate.id.includes(\"targetClass\")){\n      let node = quadOb.object.id.split(\"https://w3id.org/deer/\")[1];\n      // console.log(quadOb.object.id);\n      let nodes = this.state.nodesArray;\n      if(node){\n        nodes.add(node);\n        this.initializeNode(node);\n      }\n\n      this.setState({\n        nodesArray: nodes,\n      });\n      \n    }\n  };\n\n  toggleDropdown = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  };\n\n  // getOutputLinks = (node) => {\n  //   for (let link in node.outputs) {\n  //     if (node.outputs[link].links) {\n  //       for (let nodeLink in node.outputs[link].links) {\n  //         var link_id = node.outputs[link].links[nodeLink];\n  //         var linkInGraph = this.state.graph.links[link_id];\n  //         if (linkInGraph) {\n  //           var target_node = this.state.graph.getNodeById(\n  //             linkInGraph.target_id\n  //           );\n  //           return target_node;\n  //         }\n  //       }\n  //     }\n  //   }\n  // };\n\n  getInputLink = (node) => {\n    // if (node.type === \"Operator/LinkingEnrichmentOperator\") {\n    //   var inputLinkInGraph1 = this.state.graph.links[node.inputs[0].link];\n    //   var inputLinkInGraph2 = this.state.graph.links[node.inputs[1].link];\n    //   if (inputLinkInGraph1) {\n    //     var inputOriginNode1 = this.state.graph.getNodeById(\n    //       inputLinkInGraph1.origin_id\n    //     ).properties.name;\n    //   }\n    //   if (inputLinkInGraph2) {\n    //     var inputOriginNode2 = this.state.graph.getNodeById(\n    //       inputLinkInGraph2.origin_id\n    //     ).properties.name;\n    //   }\n    //   console.log(inputOriginNode1);\n\n    //   return {\n    //     first: inputOriginNode1,\n    //     second: inputOriginNode2,\n    //   };\n    // } else {\n      for (var i=0; i < node.inputs.length; i++) {\n         console.log(\"i = \"+i);\n\n        // console.log(node.inputs[i]);\n        // console.log(node.inputs[i].link);\n        // if (node.inputs[i].link) {\n           var inputLinkId = node.inputs[i].link;\n           console.log(inputLinkId);\n           var inputLinkInGraph = this.state.graph.links[inputLinkId];\n          if (inputLinkInGraph) {\n            var inputOriginNode = this.state.graph.getNodeById(\n              inputLinkInGraph.origin_id\n            );\n            let inputPortsList = this.state.inputPorts;\n              inputPortsList.push(inputOriginNode);\n              this.setState({\n                inputPorts: inputPortsList\n              })\n           \n          }\n      // }\n       // return [inputOriginNode, inputLinkId];\n      }\n      \n      //return this.state.inputPorts;\n\n    // }\n  };\n\n  saveConfig = () => {\n\n    var data = this.state.graph.serialize();\n    //use N3\n    const myQuad = DataFactory.quad(\n      namedNode(\"https://ruben.verborgh.org/profile/#me\"),\n      namedNode(\"http://xmlns.com/foaf/0.1/givenName\"),\n      literal(\"Ruben\", \"en\"),\n      defaultGraph()\n    );\n\n    var writer = new N3.Writer(\n      {\n        prefixes: this.state.prefixes,\n      },\n      { format: \"N-Triples\" }\n    );\n\n    var parser = new N3.Parser({ format: \"N3\", blankNodePrefix: \"\" });\n    data.nodes.map((node, key) => {\n\n      node.properties = this.state.panelData.filter(i => i.numNodeType === node.id && i.nodePath === node.type)[0].properties;\n\n      writer.addQuad(\n        namedNode(\"urn:example:demo/\" + node.properties.name),\n        namedNode(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\"), //predicate\n        namedNode(\"https://w3id.org/deer/\" + node.type.split(\"/\")[1]) //object\n      );\n\n      //if it has an input link, check for them and add to an array\n      if (node.inputs) {\n          for (var i=0; i < node.inputs.length; i++) {\n            if (node.inputs[i].link) {\n              var inputLinkId = node.inputs[i].link;\n              console.log(inputLinkId);\n              var inputLinkInGraph = this.state.graph.links[inputLinkId];\n             if (inputLinkInGraph) {\n               var inputOriginNode = this.state.graph.getNodeById(\n                 inputLinkInGraph.origin_id\n               );\n               let inputPortsList = this.state.inputPorts;\n                 inputPortsList.push(inputOriginNode);\n                 this.setState({\n                   inputPorts: inputPortsList,\n                   inputLinkId: inputLinkId\n                 })\n              \n             }\n         }\n         }\n          console.log(this.state.inputPorts);\n          //adding the quad for each inputLinks here\n          let blankNodes = this.state.inputPorts.map((inputPort, key) => {\n            return writer.blank([{\n              predicate: namedNode(\"https://w3id.org/fcage/\" + \"fromNode\"),\n              object:    namedNode(\"urn:example:demo/\" + inputPort.properties.name),\n            },{\n              predicate: namedNode(\"https://w3id.org/fcage/\" + \"fromPort\"),\n              object:    literal(key),\n            }])\n          })\n\n          \n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"https://w3id.org/fcage/\" + \"hasInput\"),\n            writer.list(blankNodes)        \n          );\n          \n\n          this.setState({\n            inputPorts: [],\n            inputLinkId: ''\n          })\n          // writer.addQuad(\n          //   namedNode(\"urn:example:demo/\" + node.properties.name),\n          //   namedNode(\"https://w3id.org/fcage/\" + \"hasInput\"),\n          //   writer.blank([{\n          //     predicate: namedNode(\"urn:example:demo/\" + \"fromNode\"),\n          //     object:    namedNode(\"https://w3id.org/fcage/\" + originInputNode.properties.name),\n          //   },{\n          //     predicate: namedNode(\"https://w3id.org/fcage/\" + \"fromPort\"),\n          //     object:    literal(this.getInputLink(node)[1]),\n          //   }])\n           \n          // ); \n        // }\n      }\n\n      console.log(node);\n\n      let obj = node.properties;\n      // quads with blank nodes\n      if (\"operation\" in obj){\n        let blankNodes = this.addBlankNodes(\"operation\", obj);\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + obj.name),\n          namedNode(\"https://w3id.org/deer/operation\"),\n          writer.blank(blankNodes)\n        );\n      } else if (\"selector\" in obj){\n        let blankNodes = this.addBlankNodes(\"selector\", obj);\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + obj.name),\n          namedNode(\"https://w3id.org/deer/selector\"),\n          writer.blank(blankNodes)\n        );\n      }\n      else{ // simple quads\n        for (var prop in obj) {\n          if (prop !== \"name\" && obj[prop].length){\n            if (obj[prop].includes('http')){\n              writer.addQuad(\n                namedNode(\"urn:example:demo/\" + node.properties.name),\n                namedNode(\"https://w3id.org/deer/\" + prop),\n                namedNode(obj[prop])\n              );\n            }\n            else {\n              writer.addQuad(\n                namedNode(\"urn:example:demo/\" + node.properties.name),\n                namedNode(\"https://w3id.org/deer/\" + prop),\n                literal(obj[prop])\n              );\n            }\n          }\n        }\n      }\n\n\n    });\n    writer.end((error, result) => {\n      console.log(result);\n      this.submitConfig(result);\n      result = \"\";\n    });\n  };\n\n  addBlankNodes = (byPredicate, obj) => {\n    let blankNodes = [];\n    for (var prop in obj) {\n      if (prop !== \"name\" && prop !== byPredicate && obj[prop].length){\n        blankNodes.push({\n          predicate: namedNode(\n            \"https://w3id.org/deer/\"+prop\n          ),\n          object: namedNode(obj[prop])\n        });\n      }\n    }\n    return blankNodes;\n  }\n\n  //Download the results\n  downloadResults = (index) => {\n    fetch(\n      URI +\n        \"/result/\" +\n        this.state.requestID +\n        \"/\" +\n        this.state.availableFiles[index]\n    ).then((response) => {\n      response.blob().then((blob) => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.availableFiles[index];\n        a.click();\n      });\n    });\n  };\n\n  submitConfig = (result) => {\n    var data = new Blob([result], { type: \"text/ttl\" });\n    var file = new File([data], \"config.ttl\");\n\n    var formData = new FormData();\n    formData = this.uploadFiles();\n    formData.append(\"config\", file);\n    fetch(URI + \"/submit\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        if (res.error && res.error.code === -1) {\n          this.setState({\n            visible: true,\n          });\n        } else if (res.requestId) {\n          this.setState({\n            requestID: res.requestId,\n            showLogButton: true,\n          });\n          this.interval = setInterval(this.getStatusForRequest, 1000);\n        }\n      });\n  };\n\n  getStatusForRequest = () => {\n    fetch(URI + \"/status/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        if (content.status.code === 2) {\n          clearInterval(this.interval);\n          this.setState({\n            requestCompleteModal: true,\n            showConfigButton: true,\n          });\n          this.getResults();\n        }\n      });\n  };\n\n  getResults = () => {\n    fetch(URI + \"/results/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        console.log(content.availableFiles);\n        this.setState({\n          availableFiles: content.availableFiles,\n        });\n      });\n  };\n\n  showLogs = () => {\n    fetch(URI + \"/logs/\" + this.state.requestID).then(function (response) {\n      let a = document.getElementById(\"downloadlink\");\n      a.href = response.url;\n      a.click();\n    });\n  };\n  toggle = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  getFilteredOptions = (event) => {\n    this.setState({\n      afterFilteredSuggestions: this.state.prefixOptions.filter((i) => {\n        return i.toLowerCase().includes(event.target.value.toLowerCase());\n      }),\n      userInput: event.target.value,\n    });\n  };\n\n  selectedPrefix = (event) => {\n    this.setState({\n      afterFilteredSuggestions: [],\n      namespace: this.state.contexts[event.target.value],\n      userInput: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  handleNamespaceChange = (event) => {\n    this.setState({\n      namespace: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  addNewPrefixes = (e) => {\n    this.setState({\n      addNewPrefixes: this.state.addNewPrefixes.concat(this.state.userInput),\n    });\n    this.state.prefixes[this.state.userInput] = this.state.namespace;\n  };\n\n  saveResults = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleResultModal = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleRequestCompleteModal = () => {\n    this.setState({\n      requestCompleteModal: !this.state.requestCompleteModal,\n    });\n  };\n\n  uploadFiles = () => {\n    let files = this.state.selectedFiles;\n\n    const data = new FormData()\n    for(var x = 0; x < files.length; x++) {\n       data.append('file', files[x])\n    }\n\n    return data;\n  };\n\n  onSelectedFiles = (event) => {\n    this.setState({\n     selectedFiles: event.target.files,\n    })\n  };\n\n  render() {\n    const options = _.map(this.state.prefixOptions, (opt, index) => ({\n      key: opt,\n      text: opt,\n      value: opt,\n    }));\n\n    return (\n      <div className=\"content\">\n        <Modal isOpen={this.state.visible} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>\n            Incorrect Configuration\n          </ModalHeader>\n          <ModalBody>\n            Please input all the required fields and connections.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.requestCompleteModal}\n          toggle={this.toggleRequestCompleteModal}\n        >\n          <ModalHeader toggle={this.toggleRequestCompleteModal}>\n            Status\n          </ModalHeader>\n          <ModalBody>\n            The results are ready. You can download them by clicking 'Show\n            Results'.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.showResultModal}\n          toggle={this.toggleResultModal}\n        >\n          <ModalHeader toggle={this.toggleResultModal}>Results</ModalHeader>\n          <ModalBody>\n            <Table>\n              <thead>\n                <tr>\n                  <th>File</th>\n                  <th>Download</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.availableFiles.map((file, index) => (\n                  <tr key={index}>\n                    <td>{file}</td>\n                    <td>\n                      <Button onClick={() => this.downloadResults(index)}>\n                        <i\n                          className=\"fa fa-download\"\n                          style={{ color: `white` }}\n                        />{\" \"}\n                        Download\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </ModalBody>\n        </Modal>\n        <Row>\n          <Col lg=\"9\" md=\"9\" sm=\"9\">\n            <Card className=\"card-stats\">\n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Prefixes</CardTitle>\n              </div>\n              <CardBody>\n                <Row>\n                  <Col md=\"12\" xs=\"12\">\n                    <Form>\n                      <Row>\n                        <Col md=\"4\">\n                          <Fragment>\n                            <FormGroup className=\"dropdown\">\n                              <label>Label</label>\n                              <Input\n                                placeholder=\"Label\"\n                                type=\"text\"\n                                value={this.state.userInput}\n                                onChange={this.getFilteredOptions}\n                              ></Input>\n                              <Dropdown\n                                className=\"dropdown-content\"\n                                toggle={this.toggleDropdown}\n                              >\n                                {this.state.afterFilteredSuggestions.map(\n                                  (suggestions, key) => (\n                                    <DropdownItem\n                                      className=\"dropdown-item\"\n                                      value={suggestions}\n                                      onClick={this.selectedPrefix}\n                                    >\n                                      {suggestions}\n                                    </DropdownItem>\n                                  )\n                                )}\n                              </Dropdown>\n                            </FormGroup>\n                          </Fragment>\n                        </Col>\n                        <Col md=\"4\">\n                          <FormGroup>\n                            <label>Namespace</label>\n                            <Input\n                              placeholder=\"Namespace\"\n                              type=\"text\"\n                              value={this.state.namespace}\n                              onChange={this.handleNamespaceChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            disabled={this.state.isDisabled}\n                            className=\"btn-round prefixBtn\"\n                            color=\"primary\"\n                            onClick={this.addNewPrefixes}\n                          >\n                            Add prefix\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {this.state.addNewPrefixes.map((addPrefix) => (\n                    <Badge variant=\"light\"> {addPrefix}</Badge>\n                  ))}\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col lg=\"3\" md=\"3\" sm=\"3\">\n            <Card className=\"card-stats\">\n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Attach files</CardTitle>\n              </div>\n              <CardBody>\n                {/* <div class=\"form-group\">\n                  <input\n                    type=\"file\"\n                    class=\"form-control-file\"\n                    id=\"exampleFormControlFile1\"\n                  ></input>\n                </div> */}\n                <Row>\n                  <Col md=\"8\">\n                    <Input className=\"file inputFile\" multiple type=\"file\" name=\"file\" id=\"exampleFile\" onChange={this.onSelectedFiles}/>\n                  </Col>\n                </Row>\n              </CardBody>\n              <hr />\n              <CardFooter></CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"9\">\n            <Card>     \n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Graph</CardTitle>\n              </div> \n              <CardBody>\n                <div id=\"parentCanvas\" className=\"litegraph litegraph-editor\">\n                  <canvas id=\"mycanvas\" height=\"600\" width=\"1000\"></canvas>{\" \"}\n                </div>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {/* <a\n                    download=\"config.ttl\"\n                    id=\"downloadlink\"\n                    //style={{ display: \"none\" }}\n                    ref=\"file\"\n                  > */}\n                  <Button onClick={this.saveConfig}>\n                    <i className=\"fa fa-cog\" style={{ color: `white` }} /> Run\n                    Configuration\n                  </Button>\n                  {/* </a> */}\n                  {this.state.showConfigButton ? (\n                    <Button\n                      onClick={this.saveResults}\n                      style={{ marginLeft: `10px` }}\n                    >\n                      <i\n                        className=\"fa fa-sticky-note\"\n                        style={{ color: `white` }}\n                      />{\" \"}\n                      Show results\n                    </Button>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.state.showLogButton ? (\n                    <a\n                      target=\"_blank\"\n                      id=\"downloadlink\"\n                      //style={{ display: \"none\" }}\n                      ref=\"file\"\n                    >\n                      <Button\n                        onClick={this.showLogs}\n                        style={{ marginLeft: `10px` }}\n                      >\n                        <i className=\"fa fa-cog\" style={{ color: `white` }} />{\" \"}\n                        Logs\n                      </Button>\n                    </a>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          {/* <Modal isOpen={this.state.isModalOpen} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>Display Config</ModalHeader>\n            <ModalBody></ModalBody>\n          </Modal> */}\n\n          <Col md=\"3\">\n            {this.state.panelData.filter(p => p.showPanel === true).map((p) =>(\n            <Panel key={p.nodePath+p.numNodeType} panelData={p} updateParentPanelData={this.updateParentPanelData} />))} \n          </Col>\n\n        </Row>\n        {/* <Row>\n            <Col md=\"4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h5\">Email Statistics</CardTitle>\n                  <p className=\"card-category\">Last Campaign Performance</p>\n                </CardHeader>\n                <CardBody>\n                  <Pie\n                    data={dashboardEmailStatisticsChart.data}\n                    options={dashboardEmailStatisticsChart.options}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"legend\">\n                    <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                    <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                    <i className=\"fa fa-circle text-gray\" /> Unopened\n                  </div>\n                  <hr />\n                  <div className=\"stats\">\n                    <i className=\"fa fa-calendar\" /> Number of emails sent\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md=\"8\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h5\">NASDAQ: AAPL</CardTitle>\n                  <p className=\"card-category\">Line Chart with Points</p>\n                </CardHeader>\n                <CardBody>\n                  <Line\n                    data={dashboardNASDAQChart.data}\n                    options={dashboardNASDAQChart.options}\n                    width={400}\n                    height={100}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"chart-legend\">\n                    <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                  </div>\n                  <hr />\n                  <div className=\"card-stats\">\n                    <i className=\"fa fa-check\" /> Data information certified\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row> */}\n      </div>\n    );\n  }\n}\n\nlitegraph.registered_node_types = {};\nlitegraph.searchbox_extras = {};\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.jsx\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard,\n    layout: \"/admin\"\n  }\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n  Button,\n} from \"reactstrap\";\n\nimport DemoNavbar from \"./DemoNavbar.css\";\nimport routes from \"routes.js\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\",\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"dark\",\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n  getBrand() {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\",\n      });\n    } else {\n      this.setState({\n        color: \"transparent\",\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\"></div>\n            <NavbarBrand href=\"/\">\n              <img\n                className=\"logo-height\"\n                alt=\"...\"\n                src={require(\"assets/img/deer-logo.svg\")}\n              />\n              <span className=\"logo-title\">DEER Web UI</span>\n            </NavbarBrand>\n          </div>\n          {/* <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler> */}\n          {/* <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          > */}\n          {/* <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form> */}\n          {/* </Collapse> */}\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <nav className=\"footer-nav\">\n              <ul>\n                <li>\n                  <a href=\"https://www.creative-tim.com\" target=\"_blank\">\n                    {/* TODO: */}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://blog.creative-tim.com\" target=\"_blank\"></a>\n                </li>\n                <li>\n                  <a\n                    href=\"https://www.creative-tim.com/license\"\n                    target=\"_blank\"\n                  ></a>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"credits ml-auto\">\n              {/* <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with{\" \"}\n                <i className=\"fa fa-heart heart\" /> by Creative Tim\n              </div> */}\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport DemoNavbar from \"components/Navbars/DemoNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport routes from \"routes.js\";\nimport Admin from \"./Admin.css\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    };\n    this.mainPanel = React.createRef();\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  };\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          <DemoNavbar {...this.props} />\n          <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  path={prop.layout + prop.path}\n                  component={prop.component}\n                  key={key}\n                />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss?v=1.1.0\";\nimport \"assets/demo/demo.css\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Redirect to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
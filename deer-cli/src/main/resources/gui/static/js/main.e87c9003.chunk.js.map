{"version":3,"sources":["assets/img/deer-logo.svg","components/FactoryNode.jsx","views/Dashboard.jsx","routes.js","components/Navbars/DemoNavbar.jsx","components/Footer/Footer.jsx","layouts/Admin.jsx","index.js"],"names":["module","exports","__webpack_require__","p","FactoryNode","React","Component","constructor","props","super","that","this","linkWidget","addWidget","linkName","v","window","open","widgets_start_y","widgets_up","onDrawForeground","ctx","graphcanvas","flags","collapsed","font","fontSize","str0","message","replace","lines","splitStringForCanvas","split","j","length","fillText","str","newStr","charsInStr","includes","myReg","RegExp","strArr","match","i","trim","render","react_default","a","createElement","N3","require","DataFactory","namedNode","literal","defaultGraph","URI","location","href","litegraph","hostname","port","LiteGraph","registered_node_types","searchbox_extras","Dashboard","routes","path","name","icon","component","getBaseUrl","exec","callbackFunction","properties","console","log","setState","formProperties","resizeWindowFunc","canvas","document","getElementById","parent","width","offsetWidth","height","offsetHeight","state","graphCanvas","resize","getPropertyFirst","quadsWithXone","forEach","quadI","fullContent","filter","quad","subject","id","object","tempXoneNodeParams","push","predicate","getPropertiesForNode","node","propsWithPropPredicate","map","propsWithXonePredicate","propsFromXone","pr","basicProps","xone","getPropertyName","prop","betweenDashesArray","getInputPorts","getOutputPorts","getMessage","getUrlForTheNode","initializeNode","propsArrForNode","inputPorts","outputPorts","inputs","outputs","url","filteredProps","filteredProp","nodeClass","addInput","addOutput","Object","create","title","size","color","bgcolor","registerNodeType","showNode","quadOb","nodes","nodesArray","add","toggleDropdown","show","getInputLink","inputLinkId","link","inputLinkInGraph","graph","links","inputOriginNode","getNodeById","origin_id","inputPortsList","saveConfig","data","serialize","writer","Writer","prefixes","format","Parser","blankNodePrefix","key","addQuad","type","blankNodes","inputPort","blank","list","fromUri","fromPath","fromEndpoint","sparqlDescribeOf","useSparqlDescribeOf","useSparqlConstruct","outputFile","outputFormat","selector","resource","sparqlConstructQuery","lookUpPrefix","dereferencingProperty","importProperty","fusionAction","mergeOtherStatements","sourceSubjectAuthority","targetSubjectAuthority","sourcePredicate","targetPredicate","selectPredicate","distancePredicate","specFile","linksPart","selectMode","linkSpecification","linkingPredicate","threshold","literalProperty","neType","foxUrl","distancePredimportPropertyicate","sparqlUpdateQuery","end","error","result","submitConfig","downloadResults","index","fetch","requestID","availableFiles","then","response","blob","URL","createObjectURL","download","click","Blob","file","File","formData","FormData","append","method","body","json","res","code","visible","requestId","showLogButton","interval","setInterval","getStatusForRequest","content","status","clearInterval","requestCompleteModal","showConfigButton","getResults","showLogs","toggle","getFilteredOptions","event","afterFilteredSuggestions","prefixOptions","toLowerCase","target","value","userInput","selectedPrefix","namespace","contexts","isDisabled","handleNamespaceChange","addNewPrefixes","e","concat","saveResults","showResultModal","toggleResultModal","toggleRequestCompleteModal","uploadFiles","LGraph","outputLinks","config","isModalOpen","showForm","showComponent","nodeArr","input1","input2","example","foaf","dbpedia","deer","fcage","geo","owl","rdf","rdfs","xsd","Set","quads","componentWillUnmount","removeEventListener","componentDidMount","addEventListener","LGraphCanvas","start","show_info","keys","parser","text","parse","_","opt","className","Modal","isOpen","ModalHeader","ModalBody","Table","Button","onClick","style","Row","Col","lg","md","sm","Card","CardTitle","tag","CardBody","xs","Form","react","FormGroup","Input","placeholder","onChange","Dropdown","suggestions","DropdownItem","disabled","CardFooter","addPrefix","Badge","variant","data-show-preview","marginLeft","ref","layout","Header","dropdownOpen","bind","dropdownToggle","sidebarToggle","createRef","getBrand","brandName","indexOf","openSidebar","documentElement","classList","current","updateColor","innerWidth","componentDidUpdate","history","pathname","Navbar","expand","Container","fluid","NavbarBrand","alt","src","Footer","ps","default","handleActiveClick","activeColor","handleBgClick","backgroundColor","mainPanel","navigator","platform","PerfectScrollbar","destroy","action","scrollTop","scrollingElement","Navbars_DemoNavbar","react_router","components_Footer_Footer","hist","createBrowserHistory","ReactDOM","layouts_Admin","to"],"mappings":"0OAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2PCyFzBC,MAzEf,cAA0BC,IAAMC,UAC9BC,YAAYC,GACVC,MAAMD,GAYN,IAAIE,EAAOC,KAEXA,KAAKC,WAAaD,KAAKE,UACrB,SACA,YACAF,KAAKG,SACL,SAAUC,GACHA,GAGLC,OAAOC,KACDP,EAAKI,SAAU,YAGzBH,KAAKO,gBAAkB,GACvBP,KAAKQ,YAAa,EAElBR,KAAKS,iBAAmB,EAACC,EAAKC,KAE5B,IAAGX,KAAKY,MAAMC,UAAd,CAGAH,EAAII,KAAOC,aAEX,IAAIC,EAAO,KACRhB,KAAKiB,QAAQ,KACdD,EAAOhB,KAAKiB,QAAQ,GAAGC,QAAQ,KAAK,KAEtCF,EAAOA,GAAQ,kEAGf,IAFA,IACIG,EADOnB,KAAKoB,qBAAqBJ,GACpBK,MAAM,MACdC,EAAI,EAAGA,EAAEH,EAAMI,OAAQD,IAC9BZ,EAAIc,SAASL,EAAMG,GAAI,GAAI,GAXd,GAWoBA,MAMvCF,qBAAqBK,GACnB,IAAIC,EAAS,GACTC,EAAa,GACd3B,KAAKH,MAAM+B,SAAS,cACrBD,EAAa,IAIf,IAFA,IAAIE,EAAQ,IAAIC,OAAO,OAAOH,EAAW,IAAK,KAC1CI,EAASN,EAAIO,MAAMH,GACfI,EAAE,EAAGA,EAAEF,EAAOR,OAAQU,IAC5BP,GAAUK,EAAOE,GAAGC,OAAS,KAE/B,OAAOR,EAGTS,SACE,OACEC,EAAAC,EAAAC,cAAA,oKCtCAC,EAAKC,EAAQ,IACXC,EAAgBF,EAAhBE,YACAC,EAAqCD,EAArCC,UAAWC,EAA0BF,EAA1BE,QAASC,EAAiBH,EAAjBG,aACtBC,EAAMxC,OAAOyC,SAASC,KAItBC,GAFW3C,OAAOyC,SAASG,SAAiB5C,OAAOyC,SAASI,KAEhD7C,OAAO8C,WA8wCzBH,EAAUI,sBAAwB,GAClCJ,EAAUK,iBAAmB,GAEdC,ICzyCAC,EATF,CACX,CACEC,KAAM,aACNC,KAAM,YACNC,KAAM,kBACNC,UD8BJ,cAAwBjE,IAAMC,UAC5BC,YAAYC,GACVC,MAAMD,GADWG,KAkDnB4D,WAAa,KACF,IAAI9B,OAAO,SACV+B,KAAKxD,OAAOyC,SAASC,OApDd/C,KAuDnB8D,iBAAoBC,KAClBC,QAAQC,IAAIF,GACZ/D,KAAKkE,SAAS,CACZC,eAAgBJ,MA1DD/D,KAkEnBoE,iBAAmB,MACjB,IAAIC,EAASC,SAASC,eAAe,YACjCC,EAASF,SAASC,eAAe,gBACrCF,EAAOI,MAAQD,EAAOE,YACtBL,EAAOM,OAASH,EAAOI,aAEO,MAA1B5E,KAAK6E,MAAMC,aACb9E,KAAK6E,MAAMC,YAAYC,WAzER/E,KAuInBgF,iBAAoBC,KAClBA,EAAcC,QAAQjD,IAClB,IAAIkD,EAAQnF,KAAK6E,MAAMO,YAAYC,OAAOC,GAAQA,EAAKC,QAAQC,GAAG5D,SAASK,EAAEwD,OAAOD,KACpF,GAAGL,EAAM,KAAOA,EAAM,GAAGM,OAAOD,GAAG5D,SAAS,OAAO,CACjD,IAAI8D,EAAqB1F,KAAK6E,MAAMa,mBACpCA,EAAmBC,KAAKR,EAAM,GAAGM,OAAOD,IACxCxF,KAAKkE,SAAS,CACZwB,mBAAoBA,KAGpBzD,EAAEwD,OAAOD,GAAG5D,SAAS,QAAUK,EAAE2D,UAAUJ,GAAG5D,SAAS,SACzD5B,KAAKgF,iBAAiBG,OAlJXnF,KAuJnB6F,qBAAwBC,KAGtB9F,KAAKkE,SAAS,CACZwB,mBAAoB,KAGtB,IAAIK,EAAyB/F,KAAK6E,MAAMO,YAAYC,OAAOC,GAAQA,EAAKC,QAAQC,GAAG5D,SAASkE,IAASR,EAAKM,UAAUJ,GAAG5D,SAAS,aAAaoE,IAAI/D,GAAKA,EAAEwD,OAAOD,IAC3JS,EAAyBjG,KAAK6E,MAAMO,YAAYC,OAAOC,GAAQA,EAAKC,QAAQC,GAAG5D,SAASkE,IAASR,EAAKM,UAAUJ,GAAG5D,SAAS,SAE5HsE,EAAgB,GAQpB,OAPAD,EAAuBf,QAAQiB,IAC7B,IAAIlB,EAAgBjF,KAAK6E,MAAMO,YAAYC,OAAOC,GAAQA,EAAKC,QAAQC,GAAG5D,SAASuE,EAAGV,OAAOD,KAC7FxF,KAAKgF,iBAAiBC,GACtBiB,EAAgBlG,KAAK6E,MAAMa,qBAGV,CAACU,WAAcL,EAAwBM,KAAQH,KAxKjDlG,KA4KnBsG,gBAAmBC,KACjB,IAAIC,EAAqBD,EAAKlF,MAAM,KAOpC,OALGmF,EAAmBjF,OAAS,EAClBiF,EAAmBA,EAAmBjF,OAAO,GAE7CiF,EAAmB,KAlLfxG,KAuLnByG,cAAiBX,IACE9F,KAAK6E,MAAMO,YAAYC,OAAOC,GAAQA,EAAKC,QAAQC,GAAG5D,SAASkE,IAASR,EAAKM,UAAUJ,GAAG5D,SAAS,eAAeoE,IAAI/D,GAAKA,EAAEwD,OAAOD,KAxLpIxF,KA4LnB0G,eAAkBZ,IACE9F,KAAK6E,MAAMO,YAAYC,OAAOC,GAAQA,EAAKC,QAAQC,GAAG5D,SAASkE,IAASR,EAAKM,UAAUJ,GAAG5D,SAAS,gBAAgBoE,IAAI/D,GAAKA,EAAEwD,OAAOD,KA7LtIxF,KAiMnB2G,WAAcb,IACE9F,KAAK6E,MAAMO,YAAYC,OAAOC,GAAQA,EAAKC,QAAQC,GAAG5D,SAASkE,IAASR,EAAKM,UAAUJ,GAAG5D,SAAS,YAAYoE,IAAI/D,GAAKA,EAAEwD,OAAOD,KAlM9HxF,KAsMnB4G,iBAAoBd,IACJ9F,KAAK6E,MAAMO,YAAYC,OAAOC,GAAQA,EAAKC,QAAQC,GAAG5D,SAASkE,IAASR,EAAKM,UAAUJ,GAAG5D,SAAS,YAAYoE,IAAI/D,GAAKA,EAAEwD,OAAOD,KAvM9HxF,KA2MnB6G,eAAkBf,KAChB,IAAIgB,EAAkB9G,KAAK6F,qBAAqBC,GAC5CiB,EAAa/G,KAAKyG,cAAcX,GAAM,GACtCkB,EAAchH,KAAK0G,eAAeZ,GAAM,GACxCmB,EAASF,EAAW/E,MAAM,OAAO,GACjCkF,EAAUF,EAAYhF,MAAM,OAAO,GACnCf,EAAUjB,KAAK2G,WAAWb,GAC1BqB,EAAMnH,KAAK4G,iBAAiBd,GAE5B/B,EAAa,CACfN,KAAM,aAGJ2D,EAAgBN,EAAgBV,WAAWJ,IAAIqB,GAC1CrH,KAAKsG,gBAAgBe,IAiB9B,GAdAD,EAAclC,QAAQiB,IACpBpC,EAAWoC,GAAM,eAInBiB,EAAgBN,EAAgBT,KAAKL,IAAIqB,GAChCrH,KAAKsG,gBAAgBe,KAGhBnC,QAAQiB,IACpBpC,EAAWoC,GAAM,cAIhBL,EAAKlE,SAAS,YAAa,CAC5B,MAAM0F,UAAkB7H,EACtBG,YAAYC,GACVC,MAAMD,GACN,IAAI,IAAIoC,EAAI,EAAGA,EAAIgF,EAAQhF,IACzBjC,KAAKuH,SAAS,QAAS,QAEzB,IAAI,IAAIjG,EAAI,EAAGA,EAAI4F,EAAS5F,IAC1BtB,KAAKwH,UAAU,SAAU,QAG3BxH,KAAK+D,WAAa0D,OAAOC,OAAO3D,GAChC/D,KAAKiB,QAAUA,EACfjB,KAAKG,SAAWgH,GAGpBG,EAAUK,MAAQ7B,EAClBwB,EAAUM,KAAO,CAAC,IAAK,KACvBN,EAAUO,MAAQ,UAClBP,EAAUQ,QAAU,UACpB9E,EAAU+E,iBAAiB,YAAYjC,EAAMwB,QAG/C,GAAGxB,EAAKlE,SAAS,UAAU,CAGzB,MAAM0F,UAAkB7H,EACtBG,YAAYC,GACVC,MAAMD,GACNG,KAAKwH,UAAU,SAAU,QACzBxH,KAAK+D,WAAa0D,OAAOC,OAAO3D,GAChC/D,KAAKiB,QAAUA,EACfjB,KAAKG,SAAWgH,GAGpBG,EAAUK,MAAQ7B,EAClBwB,EAAUM,KAAO,CAAC,IAAK,KACvBN,EAAUO,MAAQ,UAClBP,EAAUQ,QAAU,UACpB9E,EAAU+E,iBAAiB,UAAUjC,EAAMwB,OACtC,CACL,MAAMA,UAAkB7H,EACtBG,YAAYC,GACVC,MAAMD,GACNG,KAAKuH,SAAS,QAAS,QACvBvH,KAAK+D,WAAa0D,OAAOC,OAAO3D,GAChC/D,KAAKiB,QAAUA,EACfjB,KAAKG,SAAWgH,GAGpBG,EAAUK,MAAQ7B,EAClBwB,EAAUM,KAAO,CAAC,IAAK,KACvBN,EAAUO,MAAQ,UAClBP,EAAUQ,QAAU,UACpB9E,EAAU+E,iBAAiB,UAAUjC,EAAMwB,MAhS5BtH,KAoSnBgI,SAAYC,KAEV,GAAGA,EAAOrC,UAAUJ,GAAG5D,SAAS,eAAe,CAC7C,IAAIkE,EAAOmC,EAAOxC,OAAOD,GAAGnE,MAAM,yBAAyB,GACvD6G,EAAQlI,KAAK6E,MAAMsD,WACpBrC,IACDoC,EAAME,IAAItC,GACV9F,KAAK6G,eAAef,IAGtB9F,KAAKkE,SAAS,CACZiE,WAAYD,OA/SClI,KAqTnBqI,eAAiB,MACfrI,KAAKkE,SAAS,CACZoE,MAAOtI,KAAK6E,MAAMyD,SAvTHtI,KA4UnBuI,aAAgBzC,KAqBZ,IAAK,IAAI7D,EAAE,EAAGA,EAAI6D,EAAKmB,OAAO1F,OAAQU,IAAK,CACxC+B,QAAQC,IAAI,OAAOhC,GAKjB,IAAIuG,EAAc1C,EAAKmB,OAAOhF,GAAGwG,KACjCzE,QAAQC,IAAIuE,GACZ,IAAIE,EAAmB1I,KAAK6E,MAAM8D,MAAMC,MAAMJ,GAC/C,GAAIE,EAAkB,CACpB,IAAIG,EAAkB7I,KAAK6E,MAAM8D,MAAMG,YACrCJ,EAAiBK,WAEfC,EAAiBhJ,KAAK6E,MAAMkC,WAC9BiC,EAAerD,KAAKkD,GACpB7I,KAAKkE,SAAS,CACZ6C,WAAYiC,QAjXPhJ,KA8XnBiJ,WAAa,MACX,IAAIC,EAAOlJ,KAAK6E,MAAM8D,MAAMQ,YASxBC,GAPW3G,EAAY6C,KACzB5C,EAAU,0CACVA,EAAU,uCACVC,EAAQ,QAAS,MACjBC,KAGW,IAAIL,EAAG8G,OAClB,CACEC,SAAUtJ,KAAK6E,MAAMyE,UAEvB,CAAEC,OAAQ,eAGC,IAAIhH,EAAGiH,OAAO,CAAED,OAAQ,KAAME,gBAAiB,KAC5DP,EAAKhB,MAAMlC,IAAI,CAACF,EAAM4D,KAQpB,GAPAN,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,mDACVA,EAAU,wBAA0BoD,EAAK8D,KAAKvI,MAAM,KAAK,KAIvDyE,EAAKmB,OAAQ,CACb,IAAK,IAAIhF,EAAE,EAAGA,EAAI6D,EAAKmB,OAAO1F,OAAQU,IACpC,GAAI6D,EAAKmB,OAAOhF,GAAGwG,KAAM,CACvB,IAAID,EAAc1C,EAAKmB,OAAOhF,GAAGwG,KACjCzE,QAAQC,IAAIuE,GACZ,IAAIE,EAAmB1I,KAAK6E,MAAM8D,MAAMC,MAAMJ,GAC/C,GAAIE,EAAkB,CACpB,IAAIG,EAAkB7I,KAAK6E,MAAM8D,MAAMG,YACrCJ,EAAiBK,WAEfC,EAAiBhJ,KAAK6E,MAAMkC,WAC9BiC,EAAerD,KAAKkD,GACpB7I,KAAKkE,SAAS,CACZ6C,WAAYiC,EACZR,YAAaA,KAMtBxE,QAAQC,IAAIjE,KAAK6E,MAAMkC,YAEvB,IAAI8C,EAAa7J,KAAK6E,MAAMkC,WAAWf,IAAI,CAAC8D,EAAWJ,IAC9CN,EAAOW,MAAM,CAAC,CACnBnE,UAAWlD,EAAU,kCACrB+C,OAAW/C,EAAU,oBAAsBoH,EAAU/F,WAAWN,OAChE,CACAmC,UAAWlD,EAAU,kCACrB+C,OAAW9C,EAAQ+G,OAKvBN,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,kCACV0G,EAAOY,KAAKH,IAId7J,KAAKkE,SAAS,CACZ6C,WAAY,GACZyB,YAAa,KAkBD,2BAAd1C,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAC6B,2BAAxCnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAE/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMd,WAAWN,KAC7CqC,EAAK/B,WAAWkG,QAAUjK,KAAK6E,MAAMV,eAAe8F,QACpDnE,EAAK/B,WAAWmG,SAAWlK,KAAK6E,MAAMV,eAAe+F,UAEnDpE,EAAK/B,WAAWkG,SAClBb,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,gCACVC,EAAQmD,EAAK/B,WAAWkG,UAGxBnE,EAAK/B,WAAWmG,UAClBd,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,iCACVC,EAAQmD,EAAK/B,WAAWmG,YAMZ,6BAAdpE,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAC6B,6BAAxCnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAE/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMV,eAAeV,KACjDqC,EAAK/B,WAAWoG,aAAenK,KAAK6E,MAAMV,eAAegG,aACzDrE,EAAK/B,WAAWqG,iBAAmBpK,KAAK6E,MAAMV,eAAekG,oBAC7DvE,EAAK/B,WAAWuG,mBAAqBtK,KAAK6E,MAAMV,eAAemG,oBAE7DxE,EAAK/B,WAAWoG,cAClBf,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,qCACVA,EAAUoD,EAAK/B,WAAWoG,eAG1BrE,EAAK/B,WAAWqG,kBAClBhB,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,4CACVA,EAAUoD,EAAK/B,WAAWqG,mBAI1BtE,EAAK/B,WAAWuG,oBAClBlB,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,2CACVC,EAAQmD,EAAK/B,WAAWuG,sBAMZ,2BAAdxE,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAC6B,2BAAxCnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAE/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMV,eAAeV,KACjDqC,EAAK/B,WAAWwG,WAAavK,KAAK6E,MAAMV,eAAeoG,WACvDzE,EAAK/B,WAAWyG,aAAexK,KAAK6E,MAAMV,eAAeqG,cAEvD1E,EAAK/B,WAAWwG,YAAczE,EAAK/B,WAAWyG,eAChDpB,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,mCACVC,EAAQmD,EAAK/B,WAAWwG,aAG1BnB,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,qCACVC,EAAQmD,EAAK/B,WAAWyG,iBAKZ,sCAAd1E,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAET,sCADFnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAG/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMV,eAAeV,KACjDqC,EAAK/B,WAAW0G,SAAWzK,KAAK6E,MAAMV,eAAesG,SACrD3E,EAAK/B,WAAW2G,SAAW1K,KAAK6E,MAAMV,eAAeuG,SACrD5E,EAAK/B,WAAW4G,qBAAuB3K,KAAK6E,MAAMV,eAAewG,sBAE/D7E,EAAK/B,WAAW0G,SAClBrB,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,iCACV0G,EAAOW,MAAM,CACX,CACEnE,UAAWlD,EACT,wBAA0BoD,EAAK/B,WAAW0G,UAE5ChF,OAAQ/C,EAAUoD,EAAK/B,WAAW2G,cAI/B5E,EAAK/B,WAAW4G,sBACzBvB,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,6CACVC,EAAQmD,EAAK/B,WAAW4G,wBAKZ,6CAAd7E,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAET,6CADFnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAG/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMd,WAAWN,KAC7CqC,EAAK/B,WAAW6G,aAAe5K,KAAK6E,MAAMV,eAAeyG,aACzD9E,EAAK/B,WAAW8G,sBAAwB7K,KAAK6E,MAAMV,eAAe0G,sBAClE/E,EAAK/B,WAAW+G,eAAiB9K,KAAK6E,MAAMV,eAAe2G,gBAE7D1B,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,kCACV0G,EAAOW,MAAM,CACX,CACEnE,UAAWlD,EAAU,iCACrB+C,OAAQ9C,EAAQmD,EAAK/B,WAAW6G,eAElC,CACEhF,UAAWlD,EACT,0CAEF+C,OAAQ9C,EAAQmD,EAAK/B,WAAW8G,wBAElC,CACEjF,UAAWlD,EAAU,mCACrB+C,OAAQ9C,EAAQmD,EAAK/B,WAAW+G,qBAOtB,yCAAdhF,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAET,yCADFnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAG/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMd,WAAWN,KAC7CqC,EAAK/B,WAAWgH,aAAe/K,KAAK6E,MAAMV,eAAe4G,aACzDjF,EAAK/B,WAAWiH,qBAAuBhL,KAAK6E,MAAMV,eAAe6G,sBAEnE5B,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,qCACVC,EAAQmD,EAAK/B,WAAWgH,eAG1B3B,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,6CACVC,EAAQmD,EAAK/B,WAAWiH,wBAKV,qDAAdlF,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAET,qDADFnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAG/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMd,WAAWN,KAC7CqC,EAAK/B,WAAWkH,uBAAyBjL,KAAK6E,MAAMV,eAAe8G,uBACnEnF,EAAK/B,WAAWmH,uBAAyBlL,KAAK6E,MAAMV,eAAe+G,wBAErE9B,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,kCACV0G,EAAOW,MAAM,CACX,CACEnE,UAAWlD,EACT,+CAEF+C,OAAQ/C,EAAUoD,EAAK/B,WAAWkH,yBAEpC,CACErF,UAAWlD,EACT,+CAEF+C,OAAQ/C,EAAUoD,EAAK/B,WAAWmH,6BAOxB,qDAAdpF,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAET,qDADFnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAG/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMd,WAAWN,KAC7CqC,EAAK/B,WAAWoH,gBAAkBnL,KAAK6E,MAAMV,eAAegH,gBAC5DrF,EAAK/B,WAAWqH,gBAAkBpL,KAAK6E,MAAMV,eAAeiH,iBAE9DhC,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,kCACV0G,EAAOW,MAAM,CACX,CACEnE,UAAWlD,EAAU,wCACrB+C,OAAQ9C,EAAQmD,EAAK/B,WAAWoH,kBAElC,CACEvF,UAAWlD,EAAU,wCACrB+C,OAAQ9C,EAAQmD,EAAK/B,WAAWqH,sBAOtB,2CAAdtF,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAET,2CADFnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAG/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMd,WAAWN,KAC7CqC,EAAK/B,WAAWsH,gBAAkBrL,KAAK6E,MAAMV,eAAekH,gBAC5DvF,EAAK/B,WAAWuH,kBAAoBtL,KAAK6E,MAAMV,eAAemH,mBAEhElC,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,wCACVA,EAAUoD,EAAK/B,WAAWsH,kBAE5BjC,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,0CACVA,EAAUoD,EAAK/B,WAAWuH,qBAIZ,uCAAdxF,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAET,uCADFnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAG/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMV,eAAeV,KACjDqC,EAAK/B,WAAWwH,SAAWvL,KAAK6E,MAAMV,eAAeoH,SACrDzF,EAAK/B,WAAWyH,UAAYxL,KAAK6E,MAAMV,eAAeqH,UACtD1F,EAAK/B,WAAW0H,WAAazL,KAAK6E,MAAMV,eAAesH,WACvD3F,EAAK/B,WAAW2H,kBAAoB1L,KAAK6E,MAAMV,eAAeuH,kBAC9D5F,EAAK/B,WAAW4H,iBAAmB3L,KAAK6E,MAAMV,eAAewH,iBAC7D7F,EAAK/B,WAAW6H,UAAY5L,KAAK6E,MAAMV,eAAeyH,WAExDxC,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,iCACVC,EAAQmD,EAAK/B,WAAWwH,WAE1BnC,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,kCACVC,EAAQmD,EAAK/B,WAAWyH,YAE1BpC,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,mCACVC,EAAQmD,EAAK/B,WAAW0H,aAEtB3F,EAAK/B,WAAW2H,mBAClBtC,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,0CACVC,EAAQmD,EAAK/B,WAAW2H,oBAGxB5F,EAAK/B,WAAW4H,kBAClBvC,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,yCACVC,EAAQmD,EAAK/B,WAAW4H,mBAGxB7F,EAAK/B,WAAW6H,WAClBxC,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,kCACVC,EAAQmD,EAAK/B,WAAW6H,aAMZ,mCAAd9F,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAET,mCADFnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAG/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMd,WAAWN,KAC7CqC,EAAK/B,WAAW8H,gBAAkB7L,KAAK6E,MAAMV,eAAe0H,gBAC5D/F,EAAK/B,WAAW+G,eAAiB9K,KAAK6E,MAAMV,eAAe2G,eAC3DhF,EAAK/B,WAAW+H,OAAS9L,KAAK6E,MAAMV,eAAe2H,OACnDhG,EAAK/B,WAAWgI,OAAS/L,KAAK6E,MAAMV,eAAe4H,QAGrD3C,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,wCACVA,EAAUoD,EAAK/B,WAAW8H,kBAE5BzC,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,uCACVA,EAAUoD,EAAK/B,WAAWiI,kCAE5B5C,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,+BACVA,EAAUoD,EAAK/B,WAAWgI,SAE5B3C,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,+BACVC,EAAQmD,EAAK/B,WAAW+H,UAKV,4CAAdhG,EAAK8D,OAEL5J,KAAK6E,MAAMV,gBAET,mCADFnE,KAAK6E,MAAMV,eAAe2B,KAAK8D,OAG/B9D,EAAK/B,WAAWN,KAAOzD,KAAK6E,MAAMd,WAAWN,KAC7CqC,EAAK/B,WAAWkI,kBAAoBjM,KAAK6E,MAAMV,eAAe8H,mBAGhE7C,EAAOO,QACLjH,EAAU,oBAAsBoD,EAAK/B,WAAWN,MAChDf,EAAU,0CACVC,EAAQmD,EAAK/B,WAAWkI,uBAI9B7C,EAAO8C,IAAI,CAACC,EAAOC,KACjBpI,QAAQC,IAAImI,GACZpM,KAAKqM,aAAaD,GAClBA,EAAS,OAj0BMpM,KAs0BnBsM,gBAAmBC,KACjBC,MACE3J,EACE,WACA7C,KAAK6E,MAAM4H,UACX,IACAzM,KAAK6E,MAAM6H,eAAeH,IAC5BI,KAAMC,IACNA,EAASC,OAAOF,KAAME,IACpB,IAAI1F,EAAM9G,OAAOyM,IAAIC,gBAAgBF,GACjCxK,EAAIiC,SAAShC,cAAc,KAC/BD,EAAEU,KAAOoE,EACT9E,EAAE2K,SAAWhN,KAAK6E,MAAM6H,eAAeH,GACvClK,EAAE4K,cAn1BWjN,KAw1BnBqM,aAAgBD,KACd,IAAIlD,EAAO,IAAIgE,KAAK,CAACd,GAAS,CAAExC,KAAM,aAClCuD,EAAO,IAAIC,KAAK,CAAClE,GAAO,cAExBmE,EAAW,IAAIC,SACnBD,EAASE,OAAO,SAAUJ,GAC1BX,MAAM3J,EAAM,UAAW,CACrB2K,OAAQ,OACRC,KAAMJ,IAELV,KAAMC,GAAaA,EAASc,QAC5Bf,KAAMgB,IACDA,EAAIxB,QAA6B,IAApBwB,EAAIxB,MAAMyB,KACzB5N,KAAKkE,SAAS,CACZ2J,SAAS,IAEFF,EAAIG,YACb9N,KAAKkE,SAAS,CACZuI,UAAWkB,EAAIG,UACfC,eAAe,IAEjB/N,KAAKgO,SAAWC,YAAYjO,KAAKkO,oBAAqB,UA72B3ClO,KAk3BnBkO,oBAAsB,MACpB1B,MAAM3J,EAAM,WAAa7C,KAAK6E,MAAM4H,WACjCE,KAAK,SAAUC,GACd,OAAOA,EAASc,SAEjBf,KAAMwB,IACuB,IAAxBA,EAAQC,OAAOR,OACjBS,cAAcrO,KAAKgO,UACnBhO,KAAKkE,SAAS,CACZoK,sBAAsB,EACtBC,kBAAkB,IAEpBvO,KAAKwO,kBA93BMxO,KAm4BnBwO,WAAa,MACXhC,MAAM3J,EAAM,YAAc7C,KAAK6E,MAAM4H,WAClCE,KAAK,SAAUC,GACd,OAAOA,EAASc,SAEjBf,KAAMwB,IACLnK,QAAQC,IAAIkK,EAAQzB,gBACpB1M,KAAKkE,SAAS,CACZwI,eAAgByB,EAAQzB,qBA34Bb1M,KAg5BnByO,SAAW,MACTjC,MAAM3J,EAAM,SAAW7C,KAAK6E,MAAM4H,WAAWE,KAAK,SAAUC,GAC1D,IAAIvK,EAAIiC,SAASC,eAAe,gBAChClC,EAAEU,KAAO6J,EAASzF,IAClB9E,EAAE4K,YAp5BajN,KAu5BnB0O,OAAS,MACP1O,KAAKkE,SAAS,CACZ2J,SAAU7N,KAAK6E,MAAMgJ,YAz5BN7N,KA65BnB2O,mBAAsBC,KACpB5O,KAAKkE,SAAS,CACZ2K,yBAA0B7O,KAAK6E,MAAMiK,cAAczJ,OAAQpD,GAClDA,EAAE8M,cAAcnN,SAASgN,EAAMI,OAAOC,MAAMF,gBAErDG,UAAWN,EAAMI,OAAOC,UAl6BTjP,KAs6BnBmP,eAAkBP,KAChB5O,KAAKkE,SAAS,CACZ2K,yBAA0B,GAC1BO,UAAWpP,KAAK6E,MAAMwK,SAAST,EAAMI,OAAOC,OAC5CC,UAAWN,EAAMI,OAAOC,MACxBK,YAAY,MA36BGtP,KA+6BnBuP,sBAAyBX,KACvB5O,KAAKkE,SAAS,CACZkL,UAAWR,EAAMI,OAAOC,MACxBK,YAAY,MAl7BGtP,KAs7BnBwP,eAAkBC,KAChBzP,KAAKkE,SAAS,CACZsL,eAAgBxP,KAAK6E,MAAM2K,eAAeE,OAAO1P,KAAK6E,MAAMqK,aAE9DlP,KAAK6E,MAAMyE,SAAStJ,KAAK6E,MAAMqK,WAAalP,KAAK6E,MAAMuK,YA17BtCpP,KA67BnB2P,YAAc,MACZ3P,KAAKkE,SAAS,CACZ0L,iBAAkB5P,KAAK6E,MAAM+K,oBA/7Bd5P,KAm8BnB6P,kBAAoB,MAClB7P,KAAKkE,SAAS,CACZ0L,iBAAkB5P,KAAK6E,MAAM+K,oBAr8Bd5P,KAy8BnB8P,2BAA6B,MAC3B9P,KAAKkE,SAAS,CACZoK,sBAAuBtO,KAAK6E,MAAMyJ,yBA38BnBtO,KA+8BnB+P,YAAc,SA78BZ/P,KAAK6E,MAAQ,CACX8D,MAAO,IAAI3F,EAAUgN,OACrBlL,YAAa,KACbmL,YAAa,GACbnB,cAAe,GACfoB,OAAM,GACNC,aAAa,EACbf,UAAW,GACXF,UAAW,GACXL,yBAA0B,GAC1BW,eAAgB,GAChBY,UAAU,EACVC,cAAe,GACfvK,KAAM,GACNwJ,YAAY,EACZgB,QAAS,GACTnD,KAAM,GACNU,SAAS,EACTpB,UAAW,GACXmD,iBAAiB,EACjBtB,sBAAsB,EACtBC,kBAAkB,EAClB7B,eAAgB,GAChBqB,eAAe,EACf5J,eAAgB,GAChBoM,OAAQ,GACRC,OAAQ,GACRlH,SAAU,CACRmH,QAAS,oBACTC,KAAM,6BACNC,QAAS,+BACTC,KAAM,wBACNC,MAAO,yBACPC,IAAK,2CACLC,IAAK,iCACLC,IAAK,8CACLC,KAAM,wCACNC,IAAK,qCAEP/I,WAAY,IAAIgJ,IAChBC,MAAO,GACP1L,mBAAoB,GACpBN,YAAa,KACb2B,WAAY,GACZyB,YAAa,IAgBjB6I,uBACEhR,OAAOiR,oBAAoB,SAAUtR,KAAKoE,kBAe5CmN,oBACEvR,KAAKoE,mBACL/D,OAAOmR,iBAAiB,SAAUxR,KAAKoE,kBAEvC,IAAIU,EAAc,IAAI9B,EAAUyO,aAAa,YAAazR,KAAK6E,MAAM8D,OACrE3I,KAAKkE,SAAS,CACVY,YAAaA,IAEjB9E,KAAK6E,MAAM8D,MAAM+I,QAEjB5M,EAAY6M,WAAY,EAGxBnF,MAAM,6BACHG,KAAK,SAAUC,GACd,OAAOA,EAASc,SAEjBf,KAAMwB,IACLnO,KAAKkE,SAAS,CACZmL,SAAUlB,EAAQ,YAClBW,cAAerH,OAAOmK,KAAKzD,EAAQ,iBAIZ,KAAzBnO,KAAK6E,MAAMqK,WAA6C,KAAzBlP,KAAK6E,MAAMuK,WAC5CpP,KAAKkE,SAAS,CACZoL,YAAY,IAIhB,IAAMuC,EAAS,IAAItP,EAAGiH,OACtBgD,MAAM3J,EAAM,WACT8J,KAAK,SAAUC,GACd,OAAOA,EAASkF,SAEjBnF,KAAMwB,IAEL,IACI/I,GADK,IAAI7C,EAAGiH,QACIuI,MAAM5D,GAC1BnO,KAAKkE,SAAS,CACZkB,YAAaA,IAGfyM,EAAOE,MAAM5D,EAAS,CAAChC,EAAO7G,EAAMgE,KAC/BhE,GAEDtF,KAAKgI,SAAS1C,OAq1BxBnD,SAOE,OANgB6P,IAAEhM,IAAIhG,KAAK6E,MAAMiK,cAAe,CAACmD,EAAK1F,KAAN,CAC9C7C,IAAKuI,EACLH,KAAMG,EACNhD,MAAOgD,KAIP7P,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,WACb9P,EAAAC,EAAAC,cAAC6P,EAAA,EAAD,CAAOC,OAAQpS,KAAK6E,MAAMgJ,QAASa,OAAQ1O,KAAK0O,QAC9CtM,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,CAAa3D,OAAQ1O,KAAK0O,QAA1B,2BAGAtM,EAAAC,EAAAC,cAACgQ,EAAA,EAAD,+DAKFlQ,EAAAC,EAAAC,cAAC6P,EAAA,EAAD,CACEC,OAAQpS,KAAK6E,MAAMyJ,qBACnBI,OAAQ1O,KAAK8P,4BAEb1N,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,CAAa3D,OAAQ1O,KAAK8P,4BAA1B,UAGA1N,EAAAC,EAAAC,cAACgQ,EAAA,EAAD,kFAMFlQ,EAAAC,EAAAC,cAAC6P,EAAA,EAAD,CACEC,OAAQpS,KAAK6E,MAAM+K,gBACnBlB,OAAQ1O,KAAK6P,mBAEbzN,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,CAAa3D,OAAQ1O,KAAK6P,mBAA1B,WACAzN,EAAAC,EAAAC,cAACgQ,EAAA,EAAD,KACElQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,KACEnQ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,wBAGJF,EAAAC,EAAAC,cAAA,aACGtC,KAAK6E,MAAM6H,eAAe1G,IAAI,CAACmH,EAAMZ,IACpCnK,EAAAC,EAAAC,cAAA,MAAIoH,IAAK6C,GACPnK,EAAAC,EAAAC,cAAA,UAAK6K,GACL/K,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAQC,QAAS,IAAMzS,KAAKsM,gBAAgBC,IAC1CnK,EAAAC,EAAAC,cAAA,KACE4P,UAAU,iBACVQ,MAAO,CAAE7K,MAAK,WACb,IAJL,mBAcdzF,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,KACEvQ,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpB3Q,EAAAC,EAAAC,cAAC0Q,EAAA,EAAD,CAAMd,UAAU,cACd9P,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,WACb9P,EAAAC,EAAAC,cAAC2Q,EAAA,EAAD,CAAWC,IAAI,KAAf,aAEF9Q,EAAAC,EAAAC,cAAC6Q,EAAA,EAAD,KACE/Q,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,KACEvQ,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAKE,GAAG,KAAKM,GAAG,MACdhR,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,KACEjR,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,KACEvQ,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAKE,GAAG,KACN1Q,EAAAC,EAAAC,cAACgR,EAAA,SAAD,KACElR,EAAAC,EAAAC,cAACiR,EAAA,EAAD,CAAWrB,UAAU,YACnB9P,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CACEC,YAAY,QACZ7J,KAAK,OACLqF,MAAOjP,KAAK6E,MAAMqK,UAClBwE,SAAU1T,KAAK2O,qBAEjBvM,EAAAC,EAAAC,cAACqR,EAAA,EAAD,CACEzB,UAAU,mBACVxD,OAAQ1O,KAAKqI,gBAEZrI,KAAK6E,MAAMgK,yBAAyB7I,IACnC,CAAC4N,EAAalK,IACZtH,EAAAC,EAAAC,cAACuR,EAAA,EAAD,CACE3B,UAAU,gBACVjD,MAAO2E,EACPnB,QAASzS,KAAKmP,gBAEbyE,QAQfxR,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAKE,GAAG,KACN1Q,EAAAC,EAAAC,cAACiR,EAAA,EAAD,KACEnR,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CACEC,YAAY,YACZ7J,KAAK,OACLqF,MAAOjP,KAAK6E,MAAMuK,UAClBsE,SAAU1T,KAAKuP,0BAIrBnN,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAKE,GAAG,KACN1Q,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACEsB,SAAU9T,KAAK6E,MAAMyK,WACrB4C,UAAU,sBACVrK,MAAM,UACN4K,QAASzS,KAAKwP,gBAJhB,oBAcZpN,EAAAC,EAAAC,cAACyR,EAAA,EAAD,KACE3R,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,SACZlS,KAAK6E,MAAM2K,eAAexJ,IAAKgO,GAC9B5R,EAAAC,EAAAC,cAAC2R,EAAA,EAAD,CAAOC,QAAQ,SAAf,IAAyBF,QAMnC5R,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpB3Q,EAAAC,EAAAC,cAAC0Q,EAAA,EAAD,CAAMd,UAAU,cACd9P,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,WACb9P,EAAAC,EAAAC,cAAC2Q,EAAA,EAAD,CAAWC,IAAI,KAAf,iBAEF9Q,EAAAC,EAAAC,cAAC6Q,EAAA,EAAD,KAQE/Q,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,KACEvQ,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAKE,GAAG,KACL,IACD1Q,EAAAC,EAAAC,cAAA,SACEkD,GAAG,WACH/B,KAAK,WACLmG,KAAK,OACLsI,UAAU,iBACViC,oBAAkB,WAGtB/R,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAKE,GAAG,KACL,IACD1Q,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACEN,UAAU,sBACVrK,MAAM,UACN4K,QAASzS,KAAK+P,aAHhB,aAUN3N,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyR,EAAA,EAAD,SAIN3R,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,KACEvQ,EAAAC,EAAAC,cAACsQ,EAAA,EAAD,CAAKE,GAAG,KACN1Q,EAAAC,EAAAC,cAAC0Q,EAAA,EAAD,KACE5Q,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,WACb9P,EAAAC,EAAAC,cAAC2Q,EAAA,EAAD,CAAWC,IAAI,KAAf,UAEF9Q,EAAAC,EAAAC,cAAC6Q,EAAA,EAAD,KACE/Q,EAAAC,EAAAC,cAAA,OAAKkD,GAAG,eAAe0M,UAAU,8BAC/B9P,EAAAC,EAAAC,cAAA,UAAQkD,GAAG,WAAWb,OAAO,MAAMF,MAAM,SAAiB,MAG9DrC,EAAAC,EAAAC,cAACyR,EAAA,EAAD,KACE3R,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,SAOb9P,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAQC,QAASzS,KAAKiJ,YACpB7G,EAAAC,EAAAC,cAAA,KAAG4P,UAAU,YAAYQ,MAAO,CAAE7K,MAAK,WADzC,sBAKC7H,KAAK6E,MAAM0J,iBACVnM,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACEC,QAASzS,KAAK2P,YACd+C,MAAO,CAAE0B,WAAU,SAEnBhS,EAAAC,EAAAC,cAAA,KACE4P,UAAU,oBACVQ,MAAO,CAAE7K,MAAK,WACb,IAPL,gBAWA,GAED7H,KAAK6E,MAAMkJ,cACV3L,EAAAC,EAAAC,cAAA,KACE0M,OAAO,SACPxJ,GAAG,eAEH6O,IAAI,QAEJjS,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACEC,QAASzS,KAAKyO,SACdiE,MAAO,CAAE0B,WAAU,SAEnBhS,EAAAC,EAAAC,cAAA,KAAG4P,UAAU,YAAYQ,MAAO,CAAE7K,MAAK,WAAgB,IAJzD,SASF,WC1tChByM,OAAQ,WCoIGC,MA9Hf,cAAqB7U,IAAMC,UACzBC,YAAYC,GACVC,MAAMD,GACNG,KAAK6E,MAAQ,CACXuN,QAAQ,EACRoC,cAAc,EACd3M,MAAO,eAET7H,KAAK0O,OAAS1O,KAAK0O,OAAO+F,KAAKzU,MAC/BA,KAAK0U,eAAiB1U,KAAK0U,eAAeD,KAAKzU,MAC/CA,KAAK2U,cAAgBjV,IAAMkV,YAE7BlG,SACM1O,KAAK6E,MAAMuN,OACbpS,KAAKkE,SAAS,CACZ2D,MAAO,gBAGT7H,KAAKkE,SAAS,CACZ2D,MAAO,SAGX7H,KAAKkE,SAAS,CACZkO,QAASpS,KAAK6E,MAAMuN,SAGxBsC,eAAejF,GACbzP,KAAKkE,SAAS,CACZsQ,cAAexU,KAAK6E,MAAM2P,eAG9BK,WACE,IAAIC,EAAY,gBAOhB,OANAvR,EAAOyC,IAAI,CAACO,EAAMmD,MAC+C,IAA3DrJ,OAAOyC,SAASC,KAAKgS,QAAQxO,EAAK+N,OAAS/N,EAAK/C,QAClDsR,EAAYvO,EAAK9C,MAEZ,OAEFqR,EAETE,cACE1Q,SAAS2Q,gBAAgBC,UAAUxG,OAAO,YAC1C1O,KAAK2U,cAAcQ,QAAQD,UAAUxG,OAAO,WAG9C0G,cACM/U,OAAOgV,WAAa,KAAOrV,KAAK6E,MAAMuN,OACxCpS,KAAKkE,SAAS,CACZ2D,MAAO,SAGT7H,KAAKkE,SAAS,CACZ2D,MAAO,gBAIb0J,oBACElR,OAAOmR,iBAAiB,SAAUxR,KAAKoV,YAAYX,KAAKzU,OAE1DsV,mBAAmB7F,GAEfpP,OAAOgV,WAAa,KACpB5F,EAAE8F,QAAQzS,SAAS0S,WAAa/F,EAAE3M,SAAS0S,WACiB,IAA5DlR,SAAS2Q,gBAAgB/C,UAAU6C,QAAQ,cAE3CzQ,SAAS2Q,gBAAgBC,UAAUxG,OAAO,YAC1C1O,KAAK2U,cAAcQ,QAAQD,UAAUxG,OAAO,YAGhDvM,SACE,OAEEC,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CACE5N,OACgE,IAA9D7H,KAAKH,MAAMiD,SAAS0S,SAAST,QAAQ,oBACjC,OACA/U,KAAK6E,MAAMgD,MAEjB6N,OAAO,KACPxD,WACgE,IAA9DlS,KAAKH,MAAMiD,SAAS0S,SAAST,QAAQ,oBACjC,4BACA,8BACsB,gBAArB/U,KAAK6E,MAAMgD,MAA0B,sBAAwB,KAGpEzF,EAAAC,EAAAC,cAACqT,EAAA,EAAD,CAAWC,OAAK,GACdxT,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,kBACb9P,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,kBACf9P,EAAAC,EAAAC,cAACuT,EAAA,EAAD,CAAa9S,KAAK,KAChBX,EAAAC,EAAAC,cAAA,OACE4P,UAAU,cACV4D,IAAI,MACJC,IAAKvT,EAAQ,MAEfJ,EAAAC,EAAAC,cAAA,QAAM4P,UAAU,cAAhB,qBC5DC8D,ICxCXC,EDwCWD,EA5Cf,cAAqBtW,IAAMC,UACzBwC,SACE,OACEC,EAAAC,EAAAC,cAAA,UACE4P,UAAW,UAAYlS,KAAKH,MAAMqW,QAAU,kBAAoB,KAEhE9T,EAAAC,EAAAC,cAACqT,EAAA,EAAD,CAAWC,QAAO5V,KAAKH,MAAM+V,OAC3BxT,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,KACEvQ,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,cACb9P,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGS,KAAK,+BAA+BiM,OAAO,YAIhD5M,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGS,KAAK,gCAAgCiM,OAAO,YAEjD5M,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACES,KAAK,uCACLiM,OAAO,cAKf5M,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,+BCoCZ5O,MAxDf,cAAwB5D,IAAMC,UAC5BC,YAAYC,GACVC,MAAMD,GADWG,KA0BnBmW,kBAAqBtO,KACnB7H,KAAKkE,SAAS,CAAEkS,YAAavO,MA3BZ7H,KA6BnBqW,cAAiBxO,KACf7H,KAAKkE,SAAS,CAAEoS,gBAAiBzO,MA5BjC7H,KAAK6E,MAAQ,CACXyR,gBAAiB,QACjBF,YAAa,QAEfpW,KAAKuW,UAAY7W,IAAMkV,YAEzBrD,oBACMiF,UAAUC,SAAS1B,QAAQ,QAAU,IACvCkB,EAAK,IAAIS,IAAiB1W,KAAKuW,UAAUpB,SACzC7Q,SAASmJ,KAAKyH,UAAUxG,OAAO,yBAGnC2C,uBACMmF,UAAUC,SAAS1B,QAAQ,QAAU,IACvCkB,EAAGU,UACHrS,SAASmJ,KAAKyH,UAAUxG,OAAO,yBAGnC4G,mBAAmB7F,GACQ,SAArBA,EAAE8F,QAAQqB,SACZ5W,KAAKuW,UAAUpB,QAAQ0B,UAAY,EACnCvS,SAASwS,iBAAiBD,UAAY,GAS1C1U,SACE,OACEC,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,WACb9P,EAAAC,EAAAC,cAAA,OAAK4P,UAAU,aAAamC,IAAKrU,KAAKuW,WACpCnU,EAAAC,EAAAC,cAACyU,EAAe/W,KAAKH,OACrBuC,EAAAC,EAAAC,cAAC0U,EAAA,EAAD,KACGzT,EAAOyC,IAAI,CAACO,EAAMmD,IAEftH,EAAAC,EAAAC,cAAC0U,EAAA,EAAD,CACExT,KAAM+C,EAAK+N,OAAS/N,EAAK/C,KACzBG,UAAW4C,EAAK5C,UAChB+F,IAAKA,MAKbtH,EAAAC,EAAAC,cAAC2U,EAAD,CAAQrB,OAAK,QChDjBsB,EAAOC,cAEbC,IAASjV,OACPC,EAAAC,EAAAC,cAAC0U,EAAA,EAAD,CAAQzB,QAAS2B,GACf9U,EAAAC,EAAAC,cAAC0U,EAAA,EAAD,KACE5U,EAAAC,EAAAC,cAAC0U,EAAA,EAAD,CAAOxT,KAAK,SAASrB,OAAQtC,GAASuC,EAAAC,EAAAC,cAAC+U,EAAgBxX,KACvDuC,EAAAC,EAAAC,cAAC0U,EAAA,EAAD,CAAUM,GAAG,uBAGjBhT,SAASC,eAAe","file":"static/js/main.e87c9003.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/deer-logo.b55379b3.svg\";","import React, { Fragment } from \"react\";\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nclass FactoryNode extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // this.addInput(\"input\", \"text\");\n    // this.properties = {\n    //   linkName: \"https://google.com\",\n    //   name: \"\",\n    //   outputFile: \"number\",\n    //   outputFormat: 0,\n    // };\n    \n    // this.linkName = \"https://google.com\";\n\n    var that = this;\n\n    this.linkWidget = this.addWidget(\n      \"button\",\n      \"read more\",\n      this.linkName,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        window.open( \n              that.linkName, \"_blank\"); \n      }\n    );\n    this.widgets_start_y = 70;\n    this.widgets_up = false;\n\n    this.onDrawForeground = (ctx, graphcanvas) =>\n    {\n      if(this.flags.collapsed)\n        return;\n      let fontSize = 12;\n      ctx.font = fontSize+\"px Arial\";\n      // console.log(this.message);\n      let str0 = null;\n      if(this.message[0]){\n        str0 = this.message[0].replace(/\"/g,\"\");\n      }\n      str0 = str0 || \"Description of the node ...Continue description of the node ...\";\n      let str1 = this.splitStringForCanvas(str0);\n      var lines = str1.split('\\n');\n      for (var j = 0; j<lines.length; j++)\n        ctx.fillText(lines[j], 10, 55 + (j*fontSize) );\n    }\n    \n  }\n\n  // create folder for utils and move this function there\n  splitStringForCanvas(str){\n    let newStr = \"\";\n    let charsInStr = 27;\n    if(this.props.includes(\"Operator\")){\n      charsInStr = 49;\n    }\n    let myReg = new RegExp(\".{1,\"+charsInStr+\"}\", \"g\");\n    let strArr = str.match(myReg);\n    for(let i=0; i<strArr.length; i++){\n      newStr += strArr[i].trim() + \"\\n\";\n    }\n    return newStr;\n  }\n\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n\nexport default FactoryNode;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Fragment } from \"react\";\n// react plugin used to create charts\nimport _ from \"lodash\";\nimport \"./Dashboard.css\";\nimport FactoryNode from \"../components/FactoryNode\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  Button,\n  ModalHeader,\n  Modal,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Dropdown,\n  DropdownItem,\n  Badge,\n  Table,\n} from \"reactstrap\";\n\nconst N3 = require(\"n3\");\nconst { DataFactory } = N3;\nconst { namedNode, literal, defaultGraph } = DataFactory;\nconst URI = window.location.href;\n// const URI = \"http://localhost:8080\";\nconst BASE_URI = window.location.hostname + \":\" + window.location.port;\n\nconst litegraph = window.LiteGraph;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph: new litegraph.LGraph(),\n      graphCanvas: null,\n      outputLinks: [],\n      prefixOptions: [],\n      config: ``,\n      isModalOpen: false,\n      namespace: \"\",\n      userInput: \"\",\n      afterFilteredSuggestions: [],\n      addNewPrefixes: [],\n      showForm: false,\n      showComponent: \"\",\n      node: \"\",\n      isDisabled: false,\n      nodeArr: [],\n      file: \"\",\n      visible: false,\n      requestID: \"\",\n      showResultModal: false,\n      requestCompleteModal: false,\n      showConfigButton: false,\n      availableFiles: [],\n      showLogButton: false,\n      formProperties: \"\",\n      input1: \"\",\n      input2: \"\",\n      prefixes: {\n        example: \"urn:example:demo/\",\n        foaf: \"http://xmlns.com/foaf/0.1/\",\n        dbpedia: \"http://dbpedia.org/resource/\",\n        deer: \"http://w3id.org/deer/\",\n        fcage: \"http://w3id.org/fcage/\",\n        geo: \"http://www.w3.org/2003/01/geo/wgs84_pos#\",\n        owl: \"http://www.w3.org/2002/07/owl#\",\n        rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n        rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n        xsd: \"http://www.w3.org/2001/XMLSchema#\",\n      },\n      nodesArray: new Set(),\n      quads: [],\n      tempXoneNodeParams: [],\n      fullContent: null,\n      inputPorts: [],\n      inputLinkId: ''\n    };\n  }\n\n  getBaseUrl = () => {\n    var re = new RegExp(/^.*\\//);\n    return re.exec(window.location.href);\n  };\n\n  callbackFunction = (properties) => {\n    console.log(properties);\n    this.setState({\n      formProperties: properties,\n    });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeWindowFunc);\n  };\n\n  resizeWindowFunc = () => {\n    let canvas = document.getElementById(\"mycanvas\");\n    let parent = document.getElementById(\"parentCanvas\");\n    canvas.width = parent.offsetWidth;\n    canvas.height = parent.offsetHeight;\n\n    if (this.state.graphCanvas != null) {\n      this.state.graphCanvas.resize();\n    }\n\n  };\n\n  componentDidMount() {\n    this.resizeWindowFunc();\n    window.addEventListener(\"resize\", this.resizeWindowFunc);\n\n    var graphCanvas = new litegraph.LGraphCanvas(\"#mycanvas\", this.state.graph);\n    this.setState({\n        graphCanvas: graphCanvas,\n    });\n    this.state.graph.start();\n   \n    graphCanvas.show_info = false;\n\n    //returns the prefixes\n    fetch(\"https://prefix.cc/context\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        this.setState({\n          contexts: content[\"@context\"],\n          prefixOptions: Object.keys(content[\"@context\"]),\n        });\n      });\n\n    if (this.state.userInput === \"\" || this.state.namespace === \"\") {\n      this.setState({\n        isDisabled: true,\n      });\n    }\n\n    const parser = new N3.Parser();\n    fetch(URI + \"/shapes\")\n      .then(function (response) {\n        return response.text();\n      })\n      .then((content) => {\n        // console.log(content);\n        const p= new N3.Parser();\n        let fullContent = p.parse(content);\n        this.setState({\n          fullContent: fullContent,\n        });\n\n        parser.parse(content, (error, quad, prefixes) => {\n          if(quad){\n            //console.log(quad);\n            this.showNode(quad);\n          }\n          else{\n\n          }\n          //  console.log(\"No node returned.\");\n        });\n        \n      });\n  }\n\n  getPropertyFirst = (quadsWithXone) => {\n    quadsWithXone.forEach(i => {\n        let quadI = this.state.fullContent.filter(quad => quad.subject.id.includes(i.object.id));\n        if(quadI[0] && !quadI[0].object.id.includes(\"_:n\")){\n          let tempXoneNodeParams = this.state.tempXoneNodeParams;\n          tempXoneNodeParams.push(quadI[0].object.id);\n          this.setState({\n            tempXoneNodeParams: tempXoneNodeParams,\n          });\n        }\n        if(!i.object.id.includes('nil') && i.predicate.id.includes('rest')){\n          this.getPropertyFirst(quadI);\n        }\n    });\n  }\n\n  getPropertiesForNode = (node) => {\n    let arr = [];\n\n    this.setState({\n      tempXoneNodeParams: [],\n    });\n\n    let propsWithPropPredicate = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"property\")).map(i => i.object.id);\n    let propsWithXonePredicate = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"xone\")); \n    \n    let propsFromXone = [];\n    propsWithXonePredicate.forEach(pr => {\n      let quadsWithXone = this.state.fullContent.filter(quad => quad.subject.id.includes(pr.object.id));\n      this.getPropertyFirst(quadsWithXone);\n      propsFromXone = this.state.tempXoneNodeParams;\n    });\n\n    let allNodeProps = {'basicProps': propsWithPropPredicate, 'xone': propsFromXone};\n    return allNodeProps;\n  }\n\n  getPropertyName = (prop) => {\n    let betweenDashesArray = prop.split('_');\n    let property = \"\";\n    if(betweenDashesArray.length > 2){\n      property = betweenDashesArray[betweenDashesArray.length-1];\n    } else {\n      property = betweenDashesArray[1];\n    }\n    return property;\n  }\n\n  getInputPorts = (node) => {\n    let inputPorts = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"maxInPorts\")).map(i => i.object.id);\n    return inputPorts;\n  }\n\n  getOutputPorts = (node) => {\n    let outputPorts = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"maxOutPorts\")).map(i => i.object.id);\n    return outputPorts;\n  }\n\n  getMessage = (node) => {\n    let message = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"comment\")).map(i => i.object.id);\n    return message;\n  }\n\n  getUrlForTheNode = (node) => {\n    let message = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"seeAlso\")).map(i => i.object.id);\n    return message;\n  }\n\n  initializeNode = (node) => {   \n    let propsArrForNode = this.getPropertiesForNode(node);\n    let inputPorts = this.getInputPorts(node)[0];\n    let outputPorts = this.getOutputPorts(node)[0];\n    let inputs = inputPorts.match(/\\d+/)[0];\n    let outputs = outputPorts.match(/\\d+/)[0];\n    let message = this.getMessage(node);\n    let url = this.getUrlForTheNode(node);\n\n    let properties = {\n      name: \"some text\"\n    };\n\n    let filteredProps = propsArrForNode.basicProps.map(filteredProp => {\n      return this.getPropertyName(filteredProp);\n    })\n\n    filteredProps.forEach(pr => {\n      properties[pr] = \"some text\";\n    });\n\n    // todo: now all fields from xone are added, show only one to the user (add radiobutton)\n    filteredProps = propsArrForNode.xone.map(filteredProp => {\n      return this.getPropertyName(filteredProp);\n    })\n\n    filteredProps.forEach(pr => {\n      properties[pr] = \"some text\";\n    });\n  \n    // add to graph\n    if(node.includes(\"Operator\") ){\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          for(var i = 0; i < inputs; i++){\n            this.addInput(\"input\", \"text\");\n          }\n          for(var j = 0; j < outputs; j++){\n            this.addOutput(\"output\", \"text\");\n          }\n          \n          this.properties = Object.create(properties);\n          this.message = message;\n          this.linkName = url;\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [320, 100];\n      nodeClass.color = \"#664d00\";\n      nodeClass.bgcolor = \"#8c6a00\";\n      litegraph.registerNodeType(\"Operator/\"+node, nodeClass);\n      \n    } else \n    if(node.includes(\"Reader\")){\n      // console.log(typeof properties);\n      // console.log(Object.create(properties));\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          this.addOutput(\"output\", \"text\");\n          this.properties = Object.create(properties); \n          this.message = message;\n          this.linkName = url;\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [180, 100];\n      nodeClass.color = \"#223322\";\n      nodeClass.bgcolor = \"#335533\";\n      litegraph.registerNodeType(\"Reader/\"+node, nodeClass);\n    } else {\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          this.addInput(\"input\", \"text\");\n          this.properties = Object.create(properties);\n          this.message = message;\n          this.linkName = url;\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [180, 100];\n      nodeClass.color = \"#223322\";\n      nodeClass.bgcolor = \"#335533\";\n      litegraph.registerNodeType(\"Writer/\"+node, nodeClass);\n    }\n  }\n\n  showNode = (quadOb) => {\n    // save possible node names in array\n    if(quadOb.predicate.id.includes(\"targetClass\")){\n      let node = quadOb.object.id.split(\"http://w3id.org/deer/\")[1];\n      let nodes = this.state.nodesArray;\n      if(node){\n        nodes.add(node);\n        this.initializeNode(node);\n      }\n\n      this.setState({\n        nodesArray: nodes,\n      });\n      \n    }\n  };\n\n  toggleDropdown = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  };\n\n  // getOutputLinks = (node) => {\n  //   for (let link in node.outputs) {\n  //     if (node.outputs[link].links) {\n  //       for (let nodeLink in node.outputs[link].links) {\n  //         var link_id = node.outputs[link].links[nodeLink];\n  //         var linkInGraph = this.state.graph.links[link_id];\n  //         if (linkInGraph) {\n  //           var target_node = this.state.graph.getNodeById(\n  //             linkInGraph.target_id\n  //           );\n  //           return target_node;\n  //         }\n  //       }\n  //     }\n  //   }\n  // };\n\n  getInputLink = (node) => {\n    // if (node.type === \"Operator/LinkingEnrichmentOperator\") {\n    //   var inputLinkInGraph1 = this.state.graph.links[node.inputs[0].link];\n    //   var inputLinkInGraph2 = this.state.graph.links[node.inputs[1].link];\n    //   if (inputLinkInGraph1) {\n    //     var inputOriginNode1 = this.state.graph.getNodeById(\n    //       inputLinkInGraph1.origin_id\n    //     ).properties.name;\n    //   }\n    //   if (inputLinkInGraph2) {\n    //     var inputOriginNode2 = this.state.graph.getNodeById(\n    //       inputLinkInGraph2.origin_id\n    //     ).properties.name;\n    //   }\n    //   console.log(inputOriginNode1);\n\n    //   return {\n    //     first: inputOriginNode1,\n    //     second: inputOriginNode2,\n    //   };\n    // } else {\n      for (var i=0; i < node.inputs.length; i++) {\n         console.log(\"i = \"+i);\n\n        // console.log(node.inputs[i]);\n        // console.log(node.inputs[i].link);\n        // if (node.inputs[i].link) {\n           var inputLinkId = node.inputs[i].link;\n           console.log(inputLinkId);\n           var inputLinkInGraph = this.state.graph.links[inputLinkId];\n          if (inputLinkInGraph) {\n            var inputOriginNode = this.state.graph.getNodeById(\n              inputLinkInGraph.origin_id\n            );\n            let inputPortsList = this.state.inputPorts;\n              inputPortsList.push(inputOriginNode);\n              this.setState({\n                inputPorts: inputPortsList\n              })\n           \n          }\n      // }\n       // return [inputOriginNode, inputLinkId];\n      }\n      \n      //return this.state.inputPorts;\n\n    // }\n  };\n\n  saveConfig = () => {\n    var data = this.state.graph.serialize();\n    //use N3\n    const myQuad = DataFactory.quad(\n      namedNode(\"https://ruben.verborgh.org/profile/#me\"),\n      namedNode(\"http://xmlns.com/foaf/0.1/givenName\"),\n      literal(\"Ruben\", \"en\"),\n      defaultGraph()\n    );\n\n    var writer = new N3.Writer(\n      {\n        prefixes: this.state.prefixes,\n      },\n      { format: \"N-Triples\" }\n    );\n\n    var parser = new N3.Parser({ format: \"N3\", blankNodePrefix: \"\" });\n    data.nodes.map((node, key) => {\n      writer.addQuad(\n        namedNode(\"urn:example:demo/\" + node.properties.name),\n        namedNode(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\"), //predicate\n        namedNode(\"http://w3id.org/deer/\" + node.type.split(\"/\")[1]) //object\n      );\n\n      //if it has an input link, check for them and add to an array\n      if (node.inputs) {\n          for (var i=0; i < node.inputs.length; i++) {\n            if (node.inputs[i].link) {\n              var inputLinkId = node.inputs[i].link;\n              console.log(inputLinkId);\n              var inputLinkInGraph = this.state.graph.links[inputLinkId];\n             if (inputLinkInGraph) {\n               var inputOriginNode = this.state.graph.getNodeById(\n                 inputLinkInGraph.origin_id\n               );\n               let inputPortsList = this.state.inputPorts;\n                 inputPortsList.push(inputOriginNode);\n                 this.setState({\n                   inputPorts: inputPortsList,\n                   inputLinkId: inputLinkId\n                 })\n              \n             }\n         }\n         }\n          console.log(this.state.inputPorts);\n          //adding the quad for each inputLinks here\n          let blankNodes = this.state.inputPorts.map((inputPort, key) => {\n            return writer.blank([{\n              predicate: namedNode(\"http://w3id.org/fcage/\" + \"fromNode\"),\n              object:    namedNode(\"urn:example:demo/\" + inputPort.properties.name),\n            },{\n              predicate: namedNode(\"http://w3id.org/fcage/\" + \"fromPort\"),\n              object:    literal(key),\n            }])\n          })\n\n          \n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/fcage/\" + \"hasInput\"),\n            writer.list(blankNodes)        \n          );\n          \n\n          this.setState({\n            inputPorts: [],\n            inputLinkId: ''\n          })\n          // writer.addQuad(\n          //   namedNode(\"urn:example:demo/\" + node.properties.name),\n          //   namedNode(\"http://w3id.org/fcage/\" + \"hasInput\"),\n          //   writer.blank([{\n          //     predicate: namedNode(\"urn:example:demo/\" + \"fromNode\"),\n          //     object:    namedNode(\"http://w3id.org/fcage/\" + originInputNode.properties.name),\n          //   },{\n          //     predicate: namedNode(\"http://w3id.org/fcage/\" + \"fromPort\"),\n          //     object:    literal(this.getInputLink(node)[1]),\n          //   }])\n           \n          // ); \n        // }\n      }\n\n      //File Model Reader\n      if (node.type === \"Reader/FileModelReader\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type === \"Reader/FileModelReader\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.fromUri = this.state.formProperties.fromUri;\n          node.properties.fromPath = this.state.formProperties.fromPath;\n        }\n        if (node.properties.fromUri) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"fromUri\"),\n            literal(node.properties.fromUri)\n          );\n        }\n        if (node.properties.fromPath) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"fromPath\"),\n            literal(node.properties.fromPath)\n          );\n        }\n      }\n\n      //Sparql Model Reader\n      if (node.type === \"Reader/SparqlModelReader\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type === \"Reader/SparqlModelReader\"\n        ) {\n          node.properties.name = this.state.formProperties.name;\n          node.properties.fromEndpoint = this.state.formProperties.fromEndpoint;\n          node.properties.sparqlDescribeOf = this.state.formProperties.useSparqlDescribeOf;\n          node.properties.useSparqlConstruct = this.state.formProperties.useSparqlConstruct;\n        }\n        if (node.properties.fromEndpoint) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"fromEndpoint\"),\n            namedNode(node.properties.fromEndpoint)\n          );\n        }\n        if (node.properties.sparqlDescribeOf) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"useSparqlDescribeOf\"),\n            namedNode(node.properties.sparqlDescribeOf)\n          );\n        }\n\n        if (node.properties.useSparqlConstruct) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"useSparqlConstruct\"),\n            literal(node.properties.useSparqlConstruct)\n          );\n        }\n      }\n\n      //File Model Writer\n      if (node.type === \"Writer/FileModelWriter\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type === \"Writer/FileModelWriter\"\n        ) {\n          node.properties.name = this.state.formProperties.name;\n          node.properties.outputFile = this.state.formProperties.outputFile;\n          node.properties.outputFormat = this.state.formProperties.outputFormat;\n        }\n        if (node.properties.outputFile && node.properties.outputFormat) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"outputFile\"),\n            literal(node.properties.outputFile)\n          );\n\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"outputFormat\"),\n            literal(node.properties.outputFormat)\n          );\n        }\n      }\n      //Filter Enrichment Operator\n      if (node.type === \"Operator/FilterEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/FilterEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.formProperties.name;\n          node.properties.selector = this.state.formProperties.selector;\n          node.properties.resource = this.state.formProperties.resource;\n          node.properties.sparqlConstructQuery = this.state.formProperties.sparqlConstructQuery;\n        }\n        if (node.properties.selector) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"selector\"), //predicate\n            writer.blank([\n              {\n                predicate: namedNode(\n                  \"http://w3id.org/deer/\" + node.properties.selector\n                ),\n                object: namedNode(node.properties.resource),\n              },\n            ])\n          );\n        } else if (node.properties.sparqlConstructQuery) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"sparqlConstructQuery\"),\n            literal(node.properties.sparqlConstructQuery)\n          );\n        }\n      }\n      //Dereferencing enrichment Operator\n      if (node.type === \"Operator/DereferencingEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/DereferencingEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.lookUpPrefix = this.state.formProperties.lookUpPrefix;\n          node.properties.dereferencingProperty = this.state.formProperties.dereferencingProperty;\n          node.properties.importProperty = this.state.formProperties.importProperty;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/operation\"),\n          writer.blank([\n            {\n              predicate: namedNode(\"urn:example:demo/\" + \"lookUpPrefix\"),\n              object: literal(node.properties.lookUpPrefix),\n            },\n            {\n              predicate: namedNode(\n                \"urn:example:demo/\" + \"dereferencingProperty\"\n              ),\n              object: literal(node.properties.dereferencingProperty),\n            },\n            {\n              predicate: namedNode(\"urn:example:demo/\" + \"importProperty\"),\n              object: literal(node.properties.importProperty),\n            },\n          ])\n        );\n      }\n\n      //GeoFusion Enrichment Operator\n      if (node.type === \"Operator/GeoFusionEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/GeoFusionEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.fusionAction = this.state.formProperties.fusionAction;\n          node.properties.mergeOtherStatements = this.state.formProperties.mergeOtherStatements;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/fusionAction\"),\n          literal(node.properties.fusionAction)\n        );\n\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/mergeOtherStatements\"),\n          literal(node.properties.mergeOtherStatements)\n        );\n      }\n\n      //Authority Conformation Enrichment Operator\n      if (node.type === \"Operator/AuthorityConformationEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/AuthorityConformationEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.sourceSubjectAuthority = this.state.formProperties.sourceSubjectAuthority;\n          node.properties.targetSubjectAuthority = this.state.formProperties.targetSubjectAuthority;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/operation\"),\n          writer.blank([\n            {\n              predicate: namedNode(\n                \"http://w3id.org/deer/sourceSubjectAuthority\"\n              ),\n              object: namedNode(node.properties.sourceSubjectAuthority),\n            },\n            {\n              predicate: namedNode(\n                \"http://w3id.org/deer/targetSubjectAuthority\"\n              ),\n              object: namedNode(node.properties.targetSubjectAuthority),\n            },\n          ])\n        );\n      }\n\n      //Predicate Conformation Enrichment Operator\n      if (node.type === \"Operator/PredicateConformationEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/PredicateConformationEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.sourcePredicate = this.state.formProperties.sourcePredicate;\n          node.properties.targetPredicate = this.state.formProperties.targetPredicate;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/operation\"),\n          writer.blank([\n            {\n              predicate: namedNode(\"http://w3id.org/deer/sourcePredicate\"),\n              object: literal(node.properties.sourcePredicate),\n            },\n            {\n              predicate: namedNode(\"http://w3id.org/deer/targetPredicate\"),\n              object: literal(node.properties.targetPredicate),\n            },\n          ])\n        );\n      }\n\n      //GeoDistance Enrichment Operator\n      if (node.type === \"Operator/GeoDistanceEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/GeoDistanceEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.selectPredicate = this.state.formProperties.selectPredicate;\n          node.properties.distancePredicate = this.state.formProperties.distancePredicate;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"selectPredicate\"),\n          namedNode(node.properties.selectPredicate)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"distancePredicate\"),\n          namedNode(node.properties.distancePredicate)\n        );\n      }\n\n      if (node.type === \"Operator/LinkingEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/LinkingEnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.formProperties.name;\n          node.properties.specFile = this.state.formProperties.specFile;\n          node.properties.linksPart = this.state.formProperties.linksPart;\n          node.properties.selectMode = this.state.formProperties.selectMode;\n          node.properties.linkSpecification = this.state.formProperties.linkSpecification;\n          node.properties.linkingPredicate = this.state.formProperties.linkingPredicate;\n          node.properties.threshold = this.state.formProperties.threshold;\n        }\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"specFile\"),\n          literal(node.properties.specFile)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"linksPart\"),\n          literal(node.properties.linksPart)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"selectMode\"),\n          literal(node.properties.selectMode)\n        );\n        if (node.properties.linkSpecification) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"linkSpecification\"),\n            literal(node.properties.linkSpecification)\n          );\n        }\n        if (node.properties.linkingPredicate) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"linkingPredicate\"),\n            literal(node.properties.linkingPredicate)\n          );\n        }\n        if (node.properties.threshold) {\n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"http://w3id.org/deer/\" + \"threshold\"),\n            literal(node.properties.threshold)\n          );\n        }\n      }\n\n      //NER Enrichment Operator\n      if (node.type === \"Operator/NEREnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/NEREnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.literalProperty = this.state.formProperties.literalProperty;\n          node.properties.importProperty = this.state.formProperties.importProperty;\n          node.properties.neType = this.state.formProperties.neType;\n          node.properties.foxUrl = this.state.formProperties.foxUrl;\n        }\n\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"literalProperty\"),\n          namedNode(node.properties.literalProperty)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"importProperty\"),\n          namedNode(node.properties.distancePredimportPropertyicate)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"foxUrl\"),\n          namedNode(node.properties.foxUrl)\n        );\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"neType\"),\n          literal(node.properties.neType)\n        );\n      }\n\n      //Sparql Update Enrichment Operator\n      if (node.type === \"Operator/SparqlUpdateEnrichmentOperator\") {\n        if (\n          this.state.formProperties &&\n          this.state.formProperties.node.type ===\n            \"Operator/NEREnrichmentOperator\"\n        ) {\n          node.properties.name = this.state.properties.name;\n          node.properties.sparqlUpdateQuery = this.state.formProperties.sparqlUpdateQuery;\n        }\n\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + node.properties.name),\n          namedNode(\"http://w3id.org/deer/\" + \"sparqlUpdateQuery\"),\n          literal(node.properties.sparqlUpdateQuery)\n        );\n      }\n    });\n    writer.end((error, result) => {\n      console.log(result);\n      this.submitConfig(result);\n      result = \"\";\n    });\n  };\n\n  //Download the results\n  downloadResults = (index) => {\n    fetch(\n      URI +\n        \"/result/\" +\n        this.state.requestID +\n        \"/\" +\n        this.state.availableFiles[index]\n    ).then((response) => {\n      response.blob().then((blob) => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.availableFiles[index];\n        a.click();\n      });\n    });\n  };\n\n  submitConfig = (result) => {\n    var data = new Blob([result], { type: \"text/ttl\" });\n    var file = new File([data], \"config.ttl\");\n\n    var formData = new FormData();\n    formData.append(\"config\", file);\n    fetch(URI + \"/submit\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        if (res.error && res.error.code === -1) {\n          this.setState({\n            visible: true,\n          });\n        } else if (res.requestId) {\n          this.setState({\n            requestID: res.requestId,\n            showLogButton: true,\n          });\n          this.interval = setInterval(this.getStatusForRequest, 1000);\n        }\n      });\n  };\n\n  getStatusForRequest = () => {\n    fetch(URI + \"/status/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        if (content.status.code === 2) {\n          clearInterval(this.interval);\n          this.setState({\n            requestCompleteModal: true,\n            showConfigButton: true,\n          });\n          this.getResults();\n        }\n      });\n  };\n\n  getResults = () => {\n    fetch(URI + \"/results/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        console.log(content.availableFiles);\n        this.setState({\n          availableFiles: content.availableFiles,\n        });\n      });\n  };\n\n  showLogs = () => {\n    fetch(URI + \"/logs/\" + this.state.requestID).then(function (response) {\n      let a = document.getElementById(\"downloadlink\");\n      a.href = response.url;\n      a.click();\n    });\n  };\n  toggle = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  getFilteredOptions = (event) => {\n    this.setState({\n      afterFilteredSuggestions: this.state.prefixOptions.filter((i) => {\n        return i.toLowerCase().includes(event.target.value.toLowerCase());\n      }),\n      userInput: event.target.value,\n    });\n  };\n\n  selectedPrefix = (event) => {\n    this.setState({\n      afterFilteredSuggestions: [],\n      namespace: this.state.contexts[event.target.value],\n      userInput: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  handleNamespaceChange = (event) => {\n    this.setState({\n      namespace: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  addNewPrefixes = (e) => {\n    this.setState({\n      addNewPrefixes: this.state.addNewPrefixes.concat(this.state.userInput),\n    });\n    this.state.prefixes[this.state.userInput] = this.state.namespace;\n  };\n\n  saveResults = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleResultModal = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleRequestCompleteModal = () => {\n    this.setState({\n      requestCompleteModal: !this.state.requestCompleteModal,\n    });\n  };\n\n  uploadFiles = () => {};\n\n  render() {\n    const options = _.map(this.state.prefixOptions, (opt, index) => ({\n      key: opt,\n      text: opt,\n      value: opt,\n    }));\n\n    return (\n      <div className=\"content\">\n        <Modal isOpen={this.state.visible} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>\n            Incorrect Configuration\n          </ModalHeader>\n          <ModalBody>\n            Please input all the required fields and connections.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.requestCompleteModal}\n          toggle={this.toggleRequestCompleteModal}\n        >\n          <ModalHeader toggle={this.toggleRequestCompleteModal}>\n            Status\n          </ModalHeader>\n          <ModalBody>\n            The results are ready. You can download them by clicking 'Show\n            Results'.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.showResultModal}\n          toggle={this.toggleResultModal}\n        >\n          <ModalHeader toggle={this.toggleResultModal}>Results</ModalHeader>\n          <ModalBody>\n            <Table>\n              <thead>\n                <tr>\n                  <th>File</th>\n                  <th>Download</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.availableFiles.map((file, index) => (\n                  <tr key={index}>\n                    <td>{file}</td>\n                    <td>\n                      <Button onClick={() => this.downloadResults(index)}>\n                        <i\n                          className=\"fa fa-download\"\n                          style={{ color: `white` }}\n                        />{\" \"}\n                        Download\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </ModalBody>\n        </Modal>\n        <Row>\n          <Col lg=\"9\" md=\"9\" sm=\"9\">\n            <Card className=\"card-stats\">\n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Prefixes</CardTitle>\n              </div>\n              <CardBody>\n                <Row>\n                  <Col md=\"12\" xs=\"12\">\n                    <Form>\n                      <Row>\n                        <Col md=\"4\">\n                          <Fragment>\n                            <FormGroup className=\"dropdown\">\n                              <label>Label</label>\n                              <Input\n                                placeholder=\"Label\"\n                                type=\"text\"\n                                value={this.state.userInput}\n                                onChange={this.getFilteredOptions}\n                              ></Input>\n                              <Dropdown\n                                className=\"dropdown-content\"\n                                toggle={this.toggleDropdown}\n                              >\n                                {this.state.afterFilteredSuggestions.map(\n                                  (suggestions, key) => (\n                                    <DropdownItem\n                                      className=\"dropdown-item\"\n                                      value={suggestions}\n                                      onClick={this.selectedPrefix}\n                                    >\n                                      {suggestions}\n                                    </DropdownItem>\n                                  )\n                                )}\n                              </Dropdown>\n                            </FormGroup>\n                          </Fragment>\n                        </Col>\n                        <Col md=\"4\">\n                          <FormGroup>\n                            <label>Namespace</label>\n                            <Input\n                              placeholder=\"Namespace\"\n                              type=\"text\"\n                              value={this.state.namespace}\n                              onChange={this.handleNamespaceChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            disabled={this.state.isDisabled}\n                            className=\"btn-round prefixBtn\"\n                            color=\"primary\"\n                            onClick={this.addNewPrefixes}\n                          >\n                            Add prefix\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {this.state.addNewPrefixes.map((addPrefix) => (\n                    <Badge variant=\"light\"> {addPrefix}</Badge>\n                  ))}\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col lg=\"3\" md=\"3\" sm=\"3\">\n            <Card className=\"card-stats\">\n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Upload Files</CardTitle>\n              </div>\n              <CardBody>\n                {/* <div class=\"form-group\">\n                  <input\n                    type=\"file\"\n                    class=\"form-control-file\"\n                    id=\"exampleFormControlFile1\"\n                  ></input>\n                </div> */}\n                <Row>\n                  <Col md=\"8\">\n                    {\" \"}\n                    <input\n                      id=\"input-b2\"\n                      name=\"input-b2\"\n                      type=\"file\"\n                      className=\"file inputFile\"\n                      data-show-preview=\"false\"\n                    ></input>\n                  </Col>\n                  <Col md=\"3\">\n                    {\" \"}\n                    <Button\n                      className=\"btn-round uploadBtn\"\n                      color=\"primary\"\n                      onClick={this.uploadFiles}\n                    >\n                      Upload\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n              <hr />\n              <CardFooter></CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"9\">\n            <Card>     \n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Graph</CardTitle>\n              </div> \n              <CardBody>\n                <div id=\"parentCanvas\" className=\"litegraph litegraph-editor\">\n                  <canvas id=\"mycanvas\" height=\"600\" width=\"1000\"></canvas>{\" \"}\n                </div>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {/* <a\n                    download=\"config.ttl\"\n                    id=\"downloadlink\"\n                    //style={{ display: \"none\" }}\n                    ref=\"file\"\n                  > */}\n                  <Button onClick={this.saveConfig}>\n                    <i className=\"fa fa-cog\" style={{ color: `white` }} /> Run\n                    Configuration\n                  </Button>\n                  {/* </a> */}\n                  {this.state.showConfigButton ? (\n                    <Button\n                      onClick={this.saveResults}\n                      style={{ marginLeft: `10px` }}\n                    >\n                      <i\n                        className=\"fa fa-sticky-note\"\n                        style={{ color: `white` }}\n                      />{\" \"}\n                      Show results\n                    </Button>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.state.showLogButton ? (\n                    <a\n                      target=\"_blank\"\n                      id=\"downloadlink\"\n                      //style={{ display: \"none\" }}\n                      ref=\"file\"\n                    >\n                      <Button\n                        onClick={this.showLogs}\n                        style={{ marginLeft: `10px` }}\n                      >\n                        <i className=\"fa fa-cog\" style={{ color: `white` }} />{\" \"}\n                        Logs\n                      </Button>\n                    </a>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          {/* <Modal isOpen={this.state.isModalOpen} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>Display Config</ModalHeader>\n            <ModalBody></ModalBody>\n          </Modal> */}\n\n          {/*<Col md=\"3\">\n            {this.state.componentArray.map((comp, key) => {\n              if (this.state.node.title === comp.title) {\n                return comp.form;\n              }\n            })}\n          </Col>*/}\n\n        </Row>\n        {/* <Row>\n            <Col md=\"4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h5\">Email Statistics</CardTitle>\n                  <p className=\"card-category\">Last Campaign Performance</p>\n                </CardHeader>\n                <CardBody>\n                  <Pie\n                    data={dashboardEmailStatisticsChart.data}\n                    options={dashboardEmailStatisticsChart.options}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"legend\">\n                    <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                    <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                    <i className=\"fa fa-circle text-gray\" /> Unopened\n                  </div>\n                  <hr />\n                  <div className=\"stats\">\n                    <i className=\"fa fa-calendar\" /> Number of emails sent\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md=\"8\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h5\">NASDAQ: AAPL</CardTitle>\n                  <p className=\"card-category\">Line Chart with Points</p>\n                </CardHeader>\n                <CardBody>\n                  <Line\n                    data={dashboardNASDAQChart.data}\n                    options={dashboardNASDAQChart.options}\n                    width={400}\n                    height={100}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"chart-legend\">\n                    <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                  </div>\n                  <hr />\n                  <div className=\"card-stats\">\n                    <i className=\"fa fa-check\" /> Data information certified\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row> */}\n      </div>\n    );\n  }\n}\n\nlitegraph.registered_node_types = {};\nlitegraph.searchbox_extras = {};\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.jsx\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard,\n    layout: \"/admin\"\n  }\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n  Button,\n} from \"reactstrap\";\n\nimport DemoNavbar from \"./DemoNavbar.css\";\nimport routes from \"routes.js\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\",\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"dark\",\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n  getBrand() {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\",\n      });\n    } else {\n      this.setState({\n        color: \"transparent\",\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\"></div>\n            <NavbarBrand href=\"/\">\n              <img\n                className=\"logo-height\"\n                alt=\"...\"\n                src={require(\"assets/img/deer-logo.svg\")}\n              />\n              <span className=\"logo-title\">DEER Web UI</span>\n            </NavbarBrand>\n          </div>\n          {/* <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler> */}\n          {/* <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          > */}\n          {/* <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form> */}\n          {/* </Collapse> */}\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <nav className=\"footer-nav\">\n              <ul>\n                <li>\n                  <a href=\"https://www.creative-tim.com\" target=\"_blank\">\n                    {/* TODO: */}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://blog.creative-tim.com\" target=\"_blank\"></a>\n                </li>\n                <li>\n                  <a\n                    href=\"https://www.creative-tim.com/license\"\n                    target=\"_blank\"\n                  ></a>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"credits ml-auto\">\n              {/* <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with{\" \"}\n                <i className=\"fa fa-heart heart\" /> by Creative Tim\n              </div> */}\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport DemoNavbar from \"components/Navbars/DemoNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport routes from \"routes.js\";\nimport Admin from \"./Admin.css\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    };\n    this.mainPanel = React.createRef();\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  };\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          <DemoNavbar {...this.props} />\n          <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  path={prop.layout + prop.path}\n                  component={prop.component}\n                  key={key}\n                />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss?v=1.1.0\";\nimport \"assets/demo/demo.css\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Redirect to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
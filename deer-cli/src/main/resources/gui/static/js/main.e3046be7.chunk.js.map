{"version":3,"sources":["components/FactoryNode.jsx","views/Dashboard.jsx","layouts/Admin.jsx","routes.js","components/Navbars/DemoNavbar.jsx","components/Footer/Footer.jsx","index.js","assets/img/deer-logo.svg"],"names":["FactoryNode","props","_this","Object","classCallCheck","this","_super","call","that","assertThisInitialized","linkWidget","addWidget","linkName","v","window","open","widgets_start_y","widgets_up","onDrawForeground","ctx","graphcanvas","flags","collapsed","font","fontSize","str0","message","replace","lines","splitStringForCanvas","split","j","length","fillText","str","newStr","charsInStr","includes","myReg","RegExp","strArr","match","i","trim","react_default","a","createElement","React","Component","N3","require","DataFactory","namedNode","literal","defaultGraph","URI","location","href","litegraph","hostname","port","LiteGraph","Dashboard","getBaseUrl","exec","callbackFunction","properties","console","log","setState","formProperties","resizeWindowFunc","canvas","document","getElementById","parent","width","offsetWidth","height","offsetHeight","state","graphCanvas","resize","getPropertyFirst","quadsWithXone","forEach","quadI","fullContent","filter","quad","subject","id","object","tempXoneNodeParams","push","predicate","getPropertiesForNode","node","propsWithPropPredicate","map","propsWithXonePredicate","propsFromXone","pr","basicProps","xone","getPropertyName","prop","betweenDashesArray","getInputPorts","getOutputPorts","getMessage","getUrlForTheNode","initializeNode","propsArrForNode","inputPorts","outputPorts","inputs","outputs","url","xoneProperties","name","filteredProps","filteredProp","nodeClass","_FactoryNode","inherits","_super2","createSuper","_this2","addInput","addOutput","create","onPropertyChanged","p","showOrDisableXoneProperties","title","size","color","bgcolor","registerNodeType","_FactoryNode2","_nodeClass","_super3","_this3","_FactoryNode3","_nodeClass2","_super4","_this4","xoneProps","excludingPArray","querySelectorAll","classList","remove","add","getElementsByClassName","innerHTML","showNode","quadOb","nodes","nodesArray","toggleDropdown","show","getInputLink","inputLinkId","link","inputLinkInGraph","graph","links","inputOriginNode","getNodeById","origin_id","inputPortsList","saveConfig","data","serialize","writer","Writer","prefixes","format","Parser","blankNodePrefix","key","addQuad","type","blankNodes","inputPort","blank","list","obj","addBlankNodes","end","error","result","submitConfig","byPredicate","downloadResults","index","fetch","requestID","availableFiles","then","response","blob","URL","createObjectURL","download","click","Blob","file","File","formData","FormData","append","method","body","json","res","code","visible","requestId","showLogButton","interval","setInterval","getStatusForRequest","content","status","clearInterval","requestCompleteModal","showConfigButton","getResults","showLogs","toggle","getFilteredOptions","event","afterFilteredSuggestions","prefixOptions","toLowerCase","target","value","userInput","selectedPrefix","namespace","contexts","isDisabled","handleNamespaceChange","addNewPrefixes","e","concat","saveResults","showResultModal","toggleResultModal","toggleRequestCompleteModal","uploadFiles","LGraph","outputLinks","config","isModalOpen","showForm","showComponent","nodeArr","input1","input2","example","foaf","dbpedia","deer","fcage","geo","owl","rdf","rdfs","xsd","Set","quads","removeEventListener","_this5","addEventListener","LGraphCanvas","start","show_info","keys","parser","text","parse","_this6","_","opt","className","Modal","isOpen","ModalHeader","ModalBody","Table","Button","onClick","style","Row","Col","lg","md","sm","Card","CardTitle","tag","CardBody","xs","Form","react","FormGroup","Input","placeholder","onChange","Dropdown","suggestions","DropdownItem","disabled","CardFooter","addPrefix","Badge","variant","data-show-preview","marginLeft","ref","registered_node_types","searchbox_extras","ps","routes","path","icon","component","layout","Header","dropdownOpen","bind","dropdownToggle","sidebarToggle","createRef","brandName","indexOf","documentElement","current","innerWidth","updateColor","history","pathname","Navbar","expand","Container","fluid","NavbarBrand","alt","src","Footer","default","handleActiveClick","activeColor","handleBgClick","backgroundColor","mainPanel","navigator","platform","PerfectScrollbar","destroy","action","scrollTop","scrollingElement","Navbars_DemoNavbar","react_router","components_Footer_Footer","hist","createBrowserHistory","ReactDOM","render","layouts_Admin","to","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.e3046be7.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nclass FactoryNode extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // this.addInput(\"input\", \"text\");\n    // this.properties = {\n    //   linkName: \"https://google.com\",\n    //   name: \"\",\n    //   outputFile: \"number\",\n    //   outputFormat: 0,\n    // };\n    \n    // this.linkName = \"https://google.com\";\n\n    var that = this;\n\n    this.linkWidget = this.addWidget(\n      \"button\",\n      \"read more\",\n      this.linkName,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        window.open( \n              that.linkName, \"_blank\"); \n      }\n    );\n    this.widgets_start_y = 70;\n    this.widgets_up = false;\n\n    this.onDrawForeground = (ctx, graphcanvas) =>\n    {\n      if(this.flags.collapsed)\n        return;\n      let fontSize = 12;\n      ctx.font = fontSize+\"px Arial\";\n      // console.log(this.message);\n      let str0 = null;\n      if(this.message[0]){\n        str0 = this.message[0].replace(/\"/g,\"\");\n      }\n      str0 = str0 || \"Description of the node ...Continue description of the node ...\";\n      let str1 = this.splitStringForCanvas(str0);\n      var lines = str1.split('\\n');\n      for (var j = 0; j<lines.length; j++)\n        ctx.fillText(lines[j], 10, 55 + (j*fontSize) );\n    }\n    \n  }\n\n  // create folder for utils and move this function there\n  splitStringForCanvas(str){\n    let newStr = \"\";\n    let charsInStr = 27;\n    if(this.props.includes(\"Operator\")){\n      charsInStr = 49;\n    }\n    let myReg = new RegExp(\".{1,\"+charsInStr+\"}\", \"g\");\n    let strArr = str.match(myReg);\n    for(let i=0; i<strArr.length; i++){\n      newStr += strArr[i].trim() + \"\\n\";\n    }\n    return newStr;\n  }\n\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n\nexport default FactoryNode;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Fragment } from \"react\";\n// react plugin used to create charts\nimport _ from \"lodash\";\nimport \"./Dashboard.css\";\nimport FactoryNode from \"../components/FactoryNode\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  Button,\n  ModalHeader,\n  Modal,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Dropdown,\n  DropdownItem,\n  Badge,\n  Table,\n} from \"reactstrap\";\n\nconst N3 = require(\"n3\");\nconst { DataFactory } = N3;\nconst { namedNode, literal, defaultGraph } = DataFactory;\nconst URI = window.location.href;\n//const URI = \"http://localhost:8080\";\nconst BASE_URI = window.location.hostname + \":\" + window.location.port;\n\nconst litegraph = window.LiteGraph;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph: new litegraph.LGraph(),\n      graphCanvas: null,\n      outputLinks: [],\n      prefixOptions: [],\n      config: ``,\n      isModalOpen: false,\n      namespace: \"\",\n      userInput: \"\",\n      afterFilteredSuggestions: [],\n      addNewPrefixes: [],\n      showForm: false,\n      showComponent: \"\",\n      node: \"\",\n      isDisabled: false,\n      nodeArr: [],\n      file: \"\",\n      visible: false,\n      requestID: \"\",\n      showResultModal: false,\n      requestCompleteModal: false,\n      showConfigButton: false,\n      availableFiles: [],\n      showLogButton: false,\n      formProperties: \"\",\n      input1: \"\",\n      input2: \"\",\n      prefixes: {\n        example: \"urn:example:demo/\",\n        foaf: \"http://xmlns.com/foaf/0.1/\",\n        dbpedia: \"http://dbpedia.org/resource/\",\n        deer: \"https://w3id.org/deer/\",\n        fcage: \"https://w3id.org/fcage/\",\n        geo: \"http://www.w3.org/2003/01/geo/wgs84_pos#\",\n        owl: \"http://www.w3.org/2002/07/owl#\",\n        rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n        rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n        xsd: \"http://www.w3.org/2001/XMLSchema#\",\n      },\n      nodesArray: new Set(),\n      quads: [],\n      tempXoneNodeParams: [],\n      fullContent: null,\n      inputPorts: [],\n      inputLinkId: ''\n    };\n  }\n\n  getBaseUrl = () => {\n    var re = new RegExp(/^.*\\//);\n    return re.exec(window.location.href);\n  };\n\n  callbackFunction = (properties) => {\n    console.log(properties);\n    this.setState({\n      formProperties: properties,\n    });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeWindowFunc);\n  };\n\n  resizeWindowFunc = () => {\n    let canvas = document.getElementById(\"mycanvas\");\n    let parent = document.getElementById(\"parentCanvas\");\n    canvas.width = parent.offsetWidth;\n    canvas.height = parent.offsetHeight;\n\n    if (this.state.graphCanvas != null) {\n      this.state.graphCanvas.resize();\n    }\n\n  };\n\n  componentDidMount() {\n    this.resizeWindowFunc();\n    window.addEventListener(\"resize\", this.resizeWindowFunc);\n\n    var graphCanvas = new litegraph.LGraphCanvas(\"#mycanvas\", this.state.graph);\n    this.setState({\n        graphCanvas: graphCanvas,\n    });\n    this.state.graph.start();\n   \n    graphCanvas.show_info = false;\n\n    //returns the prefixes\n    fetch(\"https://prefix.cc/context\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        this.setState({\n          contexts: content[\"@context\"],\n          prefixOptions: Object.keys(content[\"@context\"]),\n        });\n      });\n\n    if (this.state.userInput === \"\" || this.state.namespace === \"\") {\n      this.setState({\n        isDisabled: true,\n      });\n    }\n\n    const parser = new N3.Parser();\n    fetch(URI + \"/shapes\")\n      .then(function (response) {\n        return response.text();\n      })\n      .then((content) => {\n        // console.log(content);\n        const p= new N3.Parser();\n        let fullContent = p.parse(content);\n        this.setState({\n          fullContent: fullContent,\n        });\n\n        parser.parse(content, (error, quad, prefixes) => {\n          if(quad){\n            //console.log(quad);\n            this.showNode(quad);\n          }\n          else{\n\n          }\n          //  console.log(\"No node returned.\");\n        });\n        \n      });\n  }\n\n  getPropertyFirst = (quadsWithXone) => {\n    quadsWithXone.forEach(i => {\n        let quadI = this.state.fullContent.filter(quad => quad.subject.id.includes(i.object.id));\n        if(quadI[0] && !quadI[0].object.id.includes(\"_:n\")){\n          let tempXoneNodeParams = this.state.tempXoneNodeParams;\n          tempXoneNodeParams.push(quadI[0].object.id);\n          this.setState({\n            tempXoneNodeParams: tempXoneNodeParams,\n          });\n        }\n        if(!i.object.id.includes('nil') && i.predicate.id.includes('rest')){\n          this.getPropertyFirst(quadI);\n        }\n    });\n  }\n\n  getPropertiesForNode = (node) => {\n    let arr = [];\n\n    this.setState({\n      tempXoneNodeParams: [],\n    });\n\n    let propsWithPropPredicate = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"property\")).map(i => i.object.id);\n    let propsWithXonePredicate = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"xone\")); \n    \n    let propsFromXone = [];\n    propsWithXonePredicate.forEach(pr => {\n      let quadsWithXone = this.state.fullContent.filter(quad => quad.subject.id.includes(pr.object.id));\n      this.getPropertyFirst(quadsWithXone);\n      propsFromXone = this.state.tempXoneNodeParams;\n    });\n\n    let allNodeProps = {'basicProps': propsWithPropPredicate, 'xone': propsFromXone};\n    return allNodeProps;\n  }\n\n  getPropertyName = (prop) => {\n    let betweenDashesArray = prop.split('_');\n    let property = \"\";\n    if(betweenDashesArray.length > 2){\n      property = betweenDashesArray[betweenDashesArray.length-1];\n    } else {\n      property = betweenDashesArray[1];\n    }\n    return property;\n  }\n\n  getInputPorts = (node) => {\n    let inputPorts = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"maxInPorts\")).map(i => i.object.id);\n    return inputPorts;\n  }\n\n  getOutputPorts = (node) => {\n    let outputPorts = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"maxOutPorts\")).map(i => i.object.id);\n    return outputPorts;\n  }\n\n  getMessage = (node) => {\n    let message = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"comment\")).map(i => i.object.id);\n    return message;\n  }\n\n  getUrlForTheNode = (node) => {\n    let message = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"seeAlso\")).map(i => i.object.id);\n    return message;\n  }\n\n  initializeNode = (node) => {   \n    let propsArrForNode = this.getPropertiesForNode(node);\n    let inputPorts = this.getInputPorts(node)[0];\n    let outputPorts = this.getOutputPorts(node)[0];\n    let inputs = inputPorts.match(/\\d+/)[0];\n    let outputs = outputPorts.match(/\\d+/)[0];\n    let message = this.getMessage(node);\n    let url = this.getUrlForTheNode(node);\n    let xoneProperties = null;\n    let that = this;\n\n    let properties = {\n      name: \"\"\n    };\n\n    let filteredProps = propsArrForNode.basicProps.map(filteredProp => {\n      return this.getPropertyName(filteredProp);\n    })\n\n    filteredProps.forEach(pr => {\n      properties[pr] = \"\";\n    });\n\n    // todo: now all fields from xone are added, show only one to the user (add radiobutton)\n    filteredProps = propsArrForNode.xone.map(filteredProp => {\n      return this.getPropertyName(filteredProp);\n    })\n    xoneProperties = filteredProps;\n\n    filteredProps.forEach(pr => {\n      properties[pr] = \"\";\n    });\n  \n    // add to graph\n    if(node.includes(\"Operator\") ){\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          for(var i = 0; i < inputs; i++){\n            this.addInput(\"input\", \"text\");\n          }\n          for(var j = 0; j < outputs; j++){\n            this.addOutput(\"output\", \"text\");\n          }\n          \n          this.properties = Object.create(properties);\n          this.message = message;\n          this.linkName = url;\n\n          this.onPropertyChanged = (p) => {\n            that.showOrDisableXoneProperties(this.properties, p, xoneProperties);\n          }\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [320, 100];\n      nodeClass.color = \"#664d00\";\n      nodeClass.bgcolor = \"#8c6a00\";\n      litegraph.registerNodeType(\"Operator/\"+node, nodeClass);\n      \n    } else \n    if(node.includes(\"Reader\")){\n      // console.log(typeof properties);\n      // console.log(Object.create(properties));\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          this.addOutput(\"output\", \"text\");\n          this.properties = Object.create(properties); \n          this.message = message;\n          this.linkName = url;\n\n          this.onPropertyChanged = (p) => {\n            that.showOrDisableXoneProperties(this.properties, p, xoneProperties);\n          }\n\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [180, 100];\n      nodeClass.color = \"#223322\";\n      nodeClass.bgcolor = \"#335533\";\n      litegraph.registerNodeType(\"Reader/\"+node, nodeClass);\n    } else {\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          this.addInput(\"input\", \"text\");\n          this.properties = Object.create(properties);\n          this.message = message;\n          this.linkName = url;\n\n          this.onPropertyChanged = (p) => {\n            that.showOrDisableXoneProperties(this.properties, p, xoneProperties);\n          }\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [180, 100];\n      nodeClass.color = \"#223322\";\n      nodeClass.bgcolor = \"#335533\";\n      litegraph.registerNodeType(\"Writer/\"+node, nodeClass);\n    }\n  }\n\n  showOrDisableXoneProperties = (props, p, xoneProps) => {\n\n    console.log(xoneProps);\n    if(xoneProps.includes(p)){\n      let excludingPArray = xoneProps.filter(i => i !== p);\n\n      //enable all\n      xoneProps.forEach(i => {\n        document.querySelectorAll('[data-property='+i+']')[0].classList.remove('disabledDiv');\n      });\n\n\n      // when we change one prop then we disable and clear others (excludingPArray)\n      excludingPArray.forEach(i => {\n        document.querySelectorAll('[data-property='+i+']')[0].classList.add('disabledDiv');\n        document.querySelectorAll('[data-property='+i+']')[0].getElementsByClassName(\"property_value\")[0].innerHTML=\"\";\n        delete props[i];\n      });\n    }\n  }\n\n  showNode = (quadOb) => {\n    // save possible node names in array\n    if(quadOb.predicate.id.includes(\"targetClass\")){\n      let node = quadOb.object.id.split(\"https://w3id.org/deer/\")[1];\n      let nodes = this.state.nodesArray;\n      if(node){\n        nodes.add(node);\n        this.initializeNode(node);\n      }\n\n      this.setState({\n        nodesArray: nodes,\n      });\n      \n    }\n  };\n\n  toggleDropdown = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  };\n\n  // getOutputLinks = (node) => {\n  //   for (let link in node.outputs) {\n  //     if (node.outputs[link].links) {\n  //       for (let nodeLink in node.outputs[link].links) {\n  //         var link_id = node.outputs[link].links[nodeLink];\n  //         var linkInGraph = this.state.graph.links[link_id];\n  //         if (linkInGraph) {\n  //           var target_node = this.state.graph.getNodeById(\n  //             linkInGraph.target_id\n  //           );\n  //           return target_node;\n  //         }\n  //       }\n  //     }\n  //   }\n  // };\n\n  getInputLink = (node) => {\n    // if (node.type === \"Operator/LinkingEnrichmentOperator\") {\n    //   var inputLinkInGraph1 = this.state.graph.links[node.inputs[0].link];\n    //   var inputLinkInGraph2 = this.state.graph.links[node.inputs[1].link];\n    //   if (inputLinkInGraph1) {\n    //     var inputOriginNode1 = this.state.graph.getNodeById(\n    //       inputLinkInGraph1.origin_id\n    //     ).properties.name;\n    //   }\n    //   if (inputLinkInGraph2) {\n    //     var inputOriginNode2 = this.state.graph.getNodeById(\n    //       inputLinkInGraph2.origin_id\n    //     ).properties.name;\n    //   }\n    //   console.log(inputOriginNode1);\n\n    //   return {\n    //     first: inputOriginNode1,\n    //     second: inputOriginNode2,\n    //   };\n    // } else {\n      for (var i=0; i < node.inputs.length; i++) {\n         console.log(\"i = \"+i);\n\n        // console.log(node.inputs[i]);\n        // console.log(node.inputs[i].link);\n        // if (node.inputs[i].link) {\n           var inputLinkId = node.inputs[i].link;\n           console.log(inputLinkId);\n           var inputLinkInGraph = this.state.graph.links[inputLinkId];\n          if (inputLinkInGraph) {\n            var inputOriginNode = this.state.graph.getNodeById(\n              inputLinkInGraph.origin_id\n            );\n            let inputPortsList = this.state.inputPorts;\n              inputPortsList.push(inputOriginNode);\n              this.setState({\n                inputPorts: inputPortsList\n              })\n           \n          }\n      // }\n       // return [inputOriginNode, inputLinkId];\n      }\n      \n      //return this.state.inputPorts;\n\n    // }\n  };\n\n  saveConfig = () => {\n    var data = this.state.graph.serialize();\n    //use N3\n    const myQuad = DataFactory.quad(\n      namedNode(\"https://ruben.verborgh.org/profile/#me\"),\n      namedNode(\"http://xmlns.com/foaf/0.1/givenName\"),\n      literal(\"Ruben\", \"en\"),\n      defaultGraph()\n    );\n\n    var writer = new N3.Writer(\n      {\n        prefixes: this.state.prefixes,\n      },\n      { format: \"N-Triples\" }\n    );\n\n    var parser = new N3.Parser({ format: \"N3\", blankNodePrefix: \"\" });\n    data.nodes.map((node, key) => {\n      writer.addQuad(\n        namedNode(\"urn:example:demo/\" + node.properties.name),\n        namedNode(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\"), //predicate\n        namedNode(\"https://w3id.org/deer/\" + node.type.split(\"/\")[1]) //object\n      );\n\n      //if it has an input link, check for them and add to an array\n      if (node.inputs) {\n          for (var i=0; i < node.inputs.length; i++) {\n            if (node.inputs[i].link) {\n              var inputLinkId = node.inputs[i].link;\n              console.log(inputLinkId);\n              var inputLinkInGraph = this.state.graph.links[inputLinkId];\n             if (inputLinkInGraph) {\n               var inputOriginNode = this.state.graph.getNodeById(\n                 inputLinkInGraph.origin_id\n               );\n               let inputPortsList = this.state.inputPorts;\n                 inputPortsList.push(inputOriginNode);\n                 this.setState({\n                   inputPorts: inputPortsList,\n                   inputLinkId: inputLinkId\n                 })\n              \n             }\n         }\n         }\n          console.log(this.state.inputPorts);\n          //adding the quad for each inputLinks here\n          let blankNodes = this.state.inputPorts.map((inputPort, key) => {\n            return writer.blank([{\n              predicate: namedNode(\"https://w3id.org/fcage/\" + \"fromNode\"),\n              object:    namedNode(\"urn:example:demo/\" + inputPort.properties.name),\n            },{\n              predicate: namedNode(\"https://w3id.org/fcage/\" + \"fromPort\"),\n              object:    literal(key),\n            }])\n          })\n\n          \n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"https://w3id.org/fcage/\" + \"hasInput\"),\n            writer.list(blankNodes)        \n          );\n          \n\n          this.setState({\n            inputPorts: [],\n            inputLinkId: ''\n          })\n          // writer.addQuad(\n          //   namedNode(\"urn:example:demo/\" + node.properties.name),\n          //   namedNode(\"https://w3id.org/fcage/\" + \"hasInput\"),\n          //   writer.blank([{\n          //     predicate: namedNode(\"urn:example:demo/\" + \"fromNode\"),\n          //     object:    namedNode(\"https://w3id.org/fcage/\" + originInputNode.properties.name),\n          //   },{\n          //     predicate: namedNode(\"https://w3id.org/fcage/\" + \"fromPort\"),\n          //     object:    literal(this.getInputLink(node)[1]),\n          //   }])\n           \n          // ); \n        // }\n      }\n\n      console.log(node);\n\n      let obj = node.properties;\n      // quads with blank nodes\n      if (\"operation\" in obj){\n        let blankNodes = this.addBlankNodes(\"operation\", obj);\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + obj.name),\n          namedNode(\"https://w3id.org/deer/operation\"),\n          writer.blank(blankNodes)\n        );\n      } else if (\"selector\" in obj){\n        let blankNodes = this.addBlankNodes(\"selector\", obj);\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + obj.name),\n          namedNode(\"https://w3id.org/deer/selector\"),\n          writer.blank(blankNodes)\n        );\n      }\n      else{ // simple quads\n        for (var prop in obj) {\n          if (prop !== \"name\" && obj[prop].length){\n            if (obj[prop].includes('http')){\n              writer.addQuad(\n                namedNode(\"urn:example:demo/\" + node.properties.name),\n                namedNode(\"https://w3id.org/deer/\" + prop),\n                namedNode(obj[prop])\n              );\n            }\n            else {\n              writer.addQuad(\n                namedNode(\"urn:example:demo/\" + node.properties.name),\n                namedNode(\"https://w3id.org/deer/\" + prop),\n                literal(obj[prop])\n              );\n            }\n          }\n        }\n      }\n\n\n    });\n    writer.end((error, result) => {\n      console.log(result);\n      this.submitConfig(result);\n      result = \"\";\n    });\n  };\n\n  addBlankNodes = (byPredicate, obj) => {\n    let blankNodes = [];\n    for (var prop in obj) {\n      if (prop !== \"name\" && prop !== byPredicate && obj[prop].length){\n        blankNodes.push({\n          predicate: namedNode(\n            \"https://w3id.org/deer/\"+prop\n          ),\n          object: namedNode(obj[prop])\n        });\n      }\n    }\n    return blankNodes;\n  }\n\n  //Download the results\n  downloadResults = (index) => {\n    fetch(\n      URI +\n        \"/result/\" +\n        this.state.requestID +\n        \"/\" +\n        this.state.availableFiles[index]\n    ).then((response) => {\n      response.blob().then((blob) => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.availableFiles[index];\n        a.click();\n      });\n    });\n  };\n\n  submitConfig = (result) => {\n    var data = new Blob([result], { type: \"text/ttl\" });\n    var file = new File([data], \"config.ttl\");\n\n    var formData = new FormData();\n    formData.append(\"config\", file);\n    fetch(URI + \"/submit\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        if (res.error && res.error.code === -1) {\n          this.setState({\n            visible: true,\n          });\n        } else if (res.requestId) {\n          this.setState({\n            requestID: res.requestId,\n            showLogButton: true,\n          });\n          this.interval = setInterval(this.getStatusForRequest, 1000);\n        }\n      });\n  };\n\n  getStatusForRequest = () => {\n    fetch(URI + \"/status/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        if (content.status.code === 2) {\n          clearInterval(this.interval);\n          this.setState({\n            requestCompleteModal: true,\n            showConfigButton: true,\n          });\n          this.getResults();\n        }\n      });\n  };\n\n  getResults = () => {\n    fetch(URI + \"/results/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        console.log(content.availableFiles);\n        this.setState({\n          availableFiles: content.availableFiles,\n        });\n      });\n  };\n\n  showLogs = () => {\n    fetch(URI + \"/logs/\" + this.state.requestID).then(function (response) {\n      let a = document.getElementById(\"downloadlink\");\n      a.href = response.url;\n      a.click();\n    });\n  };\n  toggle = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  getFilteredOptions = (event) => {\n    this.setState({\n      afterFilteredSuggestions: this.state.prefixOptions.filter((i) => {\n        return i.toLowerCase().includes(event.target.value.toLowerCase());\n      }),\n      userInput: event.target.value,\n    });\n  };\n\n  selectedPrefix = (event) => {\n    this.setState({\n      afterFilteredSuggestions: [],\n      namespace: this.state.contexts[event.target.value],\n      userInput: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  handleNamespaceChange = (event) => {\n    this.setState({\n      namespace: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  addNewPrefixes = (e) => {\n    this.setState({\n      addNewPrefixes: this.state.addNewPrefixes.concat(this.state.userInput),\n    });\n    this.state.prefixes[this.state.userInput] = this.state.namespace;\n  };\n\n  saveResults = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleResultModal = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleRequestCompleteModal = () => {\n    this.setState({\n      requestCompleteModal: !this.state.requestCompleteModal,\n    });\n  };\n\n  uploadFiles = () => {};\n\n  render() {\n    const options = _.map(this.state.prefixOptions, (opt, index) => ({\n      key: opt,\n      text: opt,\n      value: opt,\n    }));\n\n    return (\n      <div className=\"content\">\n        <Modal isOpen={this.state.visible} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>\n            Incorrect Configuration\n          </ModalHeader>\n          <ModalBody>\n            Please input all the required fields and connections.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.requestCompleteModal}\n          toggle={this.toggleRequestCompleteModal}\n        >\n          <ModalHeader toggle={this.toggleRequestCompleteModal}>\n            Status\n          </ModalHeader>\n          <ModalBody>\n            The results are ready. You can download them by clicking 'Show\n            Results'.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.showResultModal}\n          toggle={this.toggleResultModal}\n        >\n          <ModalHeader toggle={this.toggleResultModal}>Results</ModalHeader>\n          <ModalBody>\n            <Table>\n              <thead>\n                <tr>\n                  <th>File</th>\n                  <th>Download</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.availableFiles.map((file, index) => (\n                  <tr key={index}>\n                    <td>{file}</td>\n                    <td>\n                      <Button onClick={() => this.downloadResults(index)}>\n                        <i\n                          className=\"fa fa-download\"\n                          style={{ color: `white` }}\n                        />{\" \"}\n                        Download\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </ModalBody>\n        </Modal>\n        <Row>\n          <Col lg=\"9\" md=\"9\" sm=\"9\">\n            <Card className=\"card-stats\">\n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Prefixes</CardTitle>\n              </div>\n              <CardBody>\n                <Row>\n                  <Col md=\"12\" xs=\"12\">\n                    <Form>\n                      <Row>\n                        <Col md=\"4\">\n                          <Fragment>\n                            <FormGroup className=\"dropdown\">\n                              <label>Label</label>\n                              <Input\n                                placeholder=\"Label\"\n                                type=\"text\"\n                                value={this.state.userInput}\n                                onChange={this.getFilteredOptions}\n                              ></Input>\n                              <Dropdown\n                                className=\"dropdown-content\"\n                                toggle={this.toggleDropdown}\n                              >\n                                {this.state.afterFilteredSuggestions.map(\n                                  (suggestions, key) => (\n                                    <DropdownItem\n                                      className=\"dropdown-item\"\n                                      value={suggestions}\n                                      onClick={this.selectedPrefix}\n                                    >\n                                      {suggestions}\n                                    </DropdownItem>\n                                  )\n                                )}\n                              </Dropdown>\n                            </FormGroup>\n                          </Fragment>\n                        </Col>\n                        <Col md=\"4\">\n                          <FormGroup>\n                            <label>Namespace</label>\n                            <Input\n                              placeholder=\"Namespace\"\n                              type=\"text\"\n                              value={this.state.namespace}\n                              onChange={this.handleNamespaceChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            disabled={this.state.isDisabled}\n                            className=\"btn-round prefixBtn\"\n                            color=\"primary\"\n                            onClick={this.addNewPrefixes}\n                          >\n                            Add prefix\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {this.state.addNewPrefixes.map((addPrefix) => (\n                    <Badge variant=\"light\"> {addPrefix}</Badge>\n                  ))}\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col lg=\"3\" md=\"3\" sm=\"3\">\n            <Card className=\"card-stats\">\n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Upload Files</CardTitle>\n              </div>\n              <CardBody>\n                {/* <div class=\"form-group\">\n                  <input\n                    type=\"file\"\n                    class=\"form-control-file\"\n                    id=\"exampleFormControlFile1\"\n                  ></input>\n                </div> */}\n                <Row>\n                  <Col md=\"8\">\n                    {\" \"}\n                    <input\n                      id=\"input-b2\"\n                      name=\"input-b2\"\n                      type=\"file\"\n                      className=\"file inputFile\"\n                      data-show-preview=\"false\"\n                    ></input>\n                  </Col>\n                  <Col md=\"3\">\n                    {\" \"}\n                    <Button\n                      className=\"btn-round uploadBtn\"\n                      color=\"primary\"\n                      onClick={this.uploadFiles}\n                    >\n                      Upload\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n              <hr />\n              <CardFooter></CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"9\">\n            <Card>     \n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Graph</CardTitle>\n              </div> \n              <CardBody>\n                <div id=\"parentCanvas\" className=\"litegraph litegraph-editor\">\n                  <canvas id=\"mycanvas\" height=\"600\" width=\"1000\"></canvas>{\" \"}\n                </div>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {/* <a\n                    download=\"config.ttl\"\n                    id=\"downloadlink\"\n                    //style={{ display: \"none\" }}\n                    ref=\"file\"\n                  > */}\n                  <Button onClick={this.saveConfig}>\n                    <i className=\"fa fa-cog\" style={{ color: `white` }} /> Run\n                    Configuration\n                  </Button>\n                  {/* </a> */}\n                  {this.state.showConfigButton ? (\n                    <Button\n                      onClick={this.saveResults}\n                      style={{ marginLeft: `10px` }}\n                    >\n                      <i\n                        className=\"fa fa-sticky-note\"\n                        style={{ color: `white` }}\n                      />{\" \"}\n                      Show results\n                    </Button>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.state.showLogButton ? (\n                    <a\n                      target=\"_blank\"\n                      id=\"downloadlink\"\n                      //style={{ display: \"none\" }}\n                      ref=\"file\"\n                    >\n                      <Button\n                        onClick={this.showLogs}\n                        style={{ marginLeft: `10px` }}\n                      >\n                        <i className=\"fa fa-cog\" style={{ color: `white` }} />{\" \"}\n                        Logs\n                      </Button>\n                    </a>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          {/* <Modal isOpen={this.state.isModalOpen} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>Display Config</ModalHeader>\n            <ModalBody></ModalBody>\n          </Modal> */}\n\n          {/*<Col md=\"3\">\n            {this.state.componentArray.map((comp, key) => {\n              if (this.state.node.title === comp.title) {\n                return comp.form;\n              }\n            })}\n          </Col>*/}\n\n        </Row>\n        {/* <Row>\n            <Col md=\"4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h5\">Email Statistics</CardTitle>\n                  <p className=\"card-category\">Last Campaign Performance</p>\n                </CardHeader>\n                <CardBody>\n                  <Pie\n                    data={dashboardEmailStatisticsChart.data}\n                    options={dashboardEmailStatisticsChart.options}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"legend\">\n                    <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                    <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                    <i className=\"fa fa-circle text-gray\" /> Unopened\n                  </div>\n                  <hr />\n                  <div className=\"stats\">\n                    <i className=\"fa fa-calendar\" /> Number of emails sent\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md=\"8\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h5\">NASDAQ: AAPL</CardTitle>\n                  <p className=\"card-category\">Line Chart with Points</p>\n                </CardHeader>\n                <CardBody>\n                  <Line\n                    data={dashboardNASDAQChart.data}\n                    options={dashboardNASDAQChart.options}\n                    width={400}\n                    height={100}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"chart-legend\">\n                    <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                  </div>\n                  <hr />\n                  <div className=\"card-stats\">\n                    <i className=\"fa fa-check\" /> Data information certified\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row> */}\n      </div>\n    );\n  }\n}\n\nlitegraph.registered_node_types = {};\nlitegraph.searchbox_extras = {};\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport DemoNavbar from \"components/Navbars/DemoNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport routes from \"routes.js\";\nimport Admin from \"./Admin.css\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    };\n    this.mainPanel = React.createRef();\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  };\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          <DemoNavbar {...this.props} />\n          <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  path={prop.layout + prop.path}\n                  component={prop.component}\n                  key={key}\n                />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.jsx\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard,\n    layout: \"/admin\"\n  }\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n  Button,\n} from \"reactstrap\";\n\nimport DemoNavbar from \"./DemoNavbar.css\";\nimport routes from \"routes.js\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\",\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"dark\",\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n  getBrand() {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\",\n      });\n    } else {\n      this.setState({\n        color: \"transparent\",\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\"></div>\n            <NavbarBrand href=\"/\">\n              <img\n                className=\"logo-height\"\n                alt=\"...\"\n                src={require(\"assets/img/deer-logo.svg\")}\n              />\n              <span className=\"logo-title\">DEER Web UI</span>\n            </NavbarBrand>\n          </div>\n          {/* <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler> */}\n          {/* <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          > */}\n          {/* <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form> */}\n          {/* </Collapse> */}\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <nav className=\"footer-nav\">\n              <ul>\n                <li>\n                  <a href=\"https://www.creative-tim.com\" target=\"_blank\">\n                    {/* TODO: */}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://blog.creative-tim.com\" target=\"_blank\"></a>\n                </li>\n                <li>\n                  <a\n                    href=\"https://www.creative-tim.com/license\"\n                    target=\"_blank\"\n                  ></a>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"credits ml-auto\">\n              {/* <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with{\" \"}\n                <i className=\"fa fa-heart heart\" /> by Creative Tim\n              </div> */}\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss?v=1.1.0\";\nimport \"assets/demo/demo.css\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Redirect to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/deer-logo.b55379b3.svg\";"],"sourceRoot":""}
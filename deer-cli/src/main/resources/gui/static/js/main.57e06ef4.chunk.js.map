{"version":3,"sources":["assets/img/deer-logo.svg","components/FactoryNode.jsx","components/Panel.jsx","views/Dashboard.jsx","routes.js","components/Navbars/DemoNavbar.jsx","components/Footer/Footer.jsx","layouts/Admin.jsx","index.js"],"names":["module","exports","__webpack_require__","p","FactoryNode","React","Component","constructor","props","super","that","this","linkWidget","addWidget","linkName","v","window","open","widgets_start_y","widgets_up","onDrawForeground","ctx","graphcanvas","flags","collapsed","font","fontSize","str0","message","replace","lines","splitStringForCanvas","split","j","length","fillText","str","newStr","charsInStr","includes","myReg","RegExp","strArr","match","i","trim","render","react_default","a","createElement","Panel","_this","changeInput","e","temp","Object","assign","panelData","properties","target","value","updateParentPanelData","numNodeType","changeInputWithRadio","updatedProperties","excludeProps","xoneProperties","filter","undefined","keys","forEach","exp","changeRadio","setState","showSelectorProps","propsSelector","map","nodeSelectorProp","addOneMorePropertyBundle","pArr","isMaxCount","maxCount","_loop","nums","lastNum","Math","max","push","alert","state","otherProps","otherpr","propsSelectorSorted","predPropPair","matchedProps","num","Card","className","CardTitle","tag","nodePath","CardBody","react","key","FormGroup","Input","placeholder","type","onChange","pr","check","Label","checked","name","s","index","Button","onClick","color","N3","require","DataFactory","namedNode","literal","defaultGraph","URI","location","href","litegraph","hostname","port","LiteGraph","registered_node_types","searchbox_extras","Dashboard","routes","path","icon","component","curPanelData","id","findIndex","getBaseUrl","exec","callbackFunction","formProperties","resizeWindowFunc","canvas","document","getElementById","parent","width","offsetWidth","height","offsetHeight","graphCanvas","resize","getPropertyFirst","quadsWithXone","quadI","fullContent","quad","subject","object","tempXoneNodeParams","predicate","getPropertiesForNode","node","propsWithPropPredicate","propsUnderSelectorNode","propsUnderSelectorNodeWithMaxCount","nodeName","propName","getPropertyName","propsWithXonePredicate","propsFromXone","basicProps","xone","prop","betweenDashesArray","getInputPorts","getOutputPorts","getMessage","getUrlForTheNode","initializeNode","propsArrForNode","inputPorts","outputPorts","inputs","outputs","url","filteredProps","filteredProp","x","nodeClass","addInput","addOutput","onDblClick","showProperies","title","size","bgcolor","registerNodeType","nodeType","propertiesCopy","showPanel","find","data","current_node","showNode","quadOb","nodes","nodesArray","add","toggleDropdown","show","getInputLink","console","log","inputLinkId","link","inputLinkInGraph","graph","links","inputOriginNode","getNodeById","origin_id","inputPortsList","saveConfig","serialize","writer","Writer","prefixes","format","Parser","blankNodePrefix","addQuad","blankNodes","inputPort","blank","list","obj","addBlankNodes","end","error","result","submitConfig","byPredicate","downloadResults","fetch","requestID","availableFiles","then","response","blob","URL","createObjectURL","download","click","Blob","file","File","formData","FormData","uploadFiles","append","method","body","json","res","code","visible","requestId","showLogButton","interval","setInterval","getStatusForRequest","content","status","clearInterval","requestCompleteModal","showConfigButton","getResults","showLogs","toggle","getFilteredOptions","event","afterFilteredSuggestions","prefixOptions","toLowerCase","userInput","selectedPrefix","namespace","contexts","isDisabled","handleNamespaceChange","addNewPrefixes","concat","saveResults","showResultModal","toggleResultModal","toggleRequestCompleteModal","files","selectedFiles","onSelectedFiles","LGraph","outputLinks","config","isModalOpen","showForm","showComponent","nodeArr","input1","input2","example","foaf","dbpedia","deer","fcage","geo","owl","rdf","rdfs","xsd","Set","quads","componentWillUnmount","removeEventListener","componentDidMount","addEventListener","LGraphCanvas","start","show_info","parser","text","parse","_","opt","Modal","isOpen","ModalHeader","ModalBody","Table","style","Row","Col","lg","md","sm","xs","Form","Dropdown","suggestions","DropdownItem","disabled","CardFooter","addPrefix","Badge","variant","multiple","marginLeft","ref","components_Panel","layout","Header","dropdownOpen","bind","dropdownToggle","sidebarToggle","createRef","getBrand","brandName","indexOf","openSidebar","documentElement","classList","current","updateColor","innerWidth","componentDidUpdate","history","pathname","Navbar","expand","Container","fluid","NavbarBrand","alt","src","Footer","ps","default","handleActiveClick","activeColor","handleBgClick","backgroundColor","mainPanel","navigator","platform","PerfectScrollbar","destroy","action","scrollTop","scrollingElement","Navbars_DemoNavbar","react_router","components_Footer_Footer","hist","createBrowserHistory","ReactDOM","layouts_Admin","to"],"mappings":"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","file":"static/js/main.57e06ef4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/deer-logo.b55379b3.svg\";","import React, { Fragment } from \"react\";\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CardBody,\n  Card,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\nclass FactoryNode extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // this.addInput(\"input\", \"text\");\n    // this.properties = {\n    //   linkName: \"https://google.com\",\n    //   name: \"\",\n    //   outputFile: \"number\",\n    //   outputFormat: 0,\n    // };\n    \n    // this.linkName = \"https://google.com\";\n\n    var that = this;\n\n    this.linkWidget = this.addWidget(\n      \"button\",\n      \"read more\",\n      this.linkName,\n      function (v) {\n        if (!v) {\n          return;\n        }\n        window.open( \n              that.linkName, \"_blank\"); \n      }\n    );\n    this.widgets_start_y = 70;\n    this.widgets_up = false;\n\n    this.onDrawForeground = (ctx, graphcanvas) =>\n    {\n      if(this.flags.collapsed)\n        return;\n      let fontSize = 12;\n      ctx.font = fontSize+\"px Arial\";\n      // console.log(this.message);\n      let str0 = null;\n      if(this.message[0]){\n        str0 = this.message[0].replace(/\"/g,\"\");\n      }\n      str0 = str0 || \"Description of the node ...Continue description of the node ...\";\n      let str1 = this.splitStringForCanvas(str0);\n      var lines = str1.split('\\n');\n      for (var j = 0; j<lines.length; j++)\n        ctx.fillText(lines[j], 10, 55 + (j*fontSize) );\n    }\n    \n  }\n\n  // create folder for utils and move this function there\n  splitStringForCanvas(str){\n    let newStr = \"\";\n    let charsInStr = 27;\n    if(this.props.includes(\"Operator\")){\n      charsInStr = 49;\n    }\n    let myReg = new RegExp(\".{1,\"+charsInStr+\"}\", \"g\");\n    let strArr = str.match(myReg);\n    for(let i=0; i<strArr.length; i++){\n      newStr += strArr[i].trim() + \"\\n\";\n    }\n    return newStr;\n  }\n\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n\nexport default FactoryNode;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n  Button,\n  Card,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\n\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelectorProps: false,\n    };\n  }\n\n  changeInput = (e, p) => {\n    var temp = Object.assign({}, this.props.panelData);\n    temp.properties[p] = e.target.value;\n    this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n  }\n\n  changeInputWithRadio = (e, p) => {\n    // change the edited input\n    this.changeInput(e, p);\n\n    var temp = Object.assign({}, this.props.panelData);\n    let updatedProperties = temp.properties;\n    let excludeProps = this.props.panelData.xoneProperties.filter(i => {return i !== undefined && i !== p});\n    // clear all optional except the current one\n    Object.keys(temp.properties).forEach(i => {\n      excludeProps.forEach(exp => {\n        if (exp === i){\n          updatedProperties[i] = \"\";\n        } \n      })     \n    });\n    temp.properties = updatedProperties;\n    this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n  \n  }\n\n  changeRadio = (e, p) => {\n    e.target.value = \"type here\";\n    this.changeInputWithRadio(e, p);\n    if(p === \"selector\"){\n      this.setState({\n        showSelectorProps: true\n      })\n    } else {\n      this.setState({\n        showSelectorProps: false\n      })\n      // clear property inputs when another radio button was checked\n      let temp = Object.assign({}, this.props.panelData);\n      let updatedProperties = temp.properties;\n      let excludeProps = this.props.panelData.xoneProperties.filter(i => {return i !== undefined && i !== p});\n      // clear selectorProps if there is selector in xone and it is not chosen\n      if(excludeProps.includes(\"selector\")){\n        let propsSelector = this.props.panelData.propsSelector.map(i => i.nodeSelectorProp);\n        Object.keys(temp.properties).forEach(i => {\n          propsSelector.forEach(exp => {\n            if (exp === i){\n              updatedProperties[i] = \"\";\n            } \n          })     \n        });\n      }\n      temp.properties = updatedProperties;\n      this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n    }\n  }\n\n  addOneMorePropertyBundle = (pArr) => {\n    let isMaxCount = false;\n    let maxCount = -1;\n    for (let i = 0; i < pArr.length; i++) {\n      let p = pArr[i];\n      p = p.replace(/\\d+/g, '');\n      let propsSelector = this.props.panelData.propsSelector;\n      let temp = Object.assign({}, this.props.panelData);\n      maxCount = propsSelector.filter(i => i.nodeSelectorProp === p)[0].maxCount;\n      let preNums = propsSelector.filter(i => i.nodeSelectorProp.includes(p) && i.nodeSelectorProp.match(/\\d+/g));\n      let nums = preNums.map(i => i.nodeSelectorProp.match(/\\d+/g)[0]);\n      let lastNum = Math.max(...nums) + 1;\n      if (nums.length === 0){\n        lastNum = \"2\";\n      }\n      //check max count and add additionalProp\n      if(maxCount >= lastNum){\n        temp.propsSelector.push({nodeSelectorProp: p+lastNum, maxCount: maxCount});\n        temp.properties[p+lastNum] = \"\";\n        this.props.updateParentPanelData(temp, this.props.panelData.numNodeType);\n      } else {\n        isMaxCount = true;\n      }\n    }\n    if(isMaxCount){\n      alert(\"maxCount: \" + maxCount);\n    }\n  }\n\n\n  render() {\n    let excludeProps = this.props.panelData.xoneProperties.filter(i => {return i !== undefined});\n    let propsSelector = this.props.panelData.propsSelector.map(i => i.nodeSelectorProp);\n    let otherProps = Object.keys(this.props.panelData.properties).filter(otherpr => !excludeProps.includes(otherpr) && !propsSelector.includes(otherpr) && otherpr !== \"operation\");\n    if(excludeProps.includes(\"selector\") && this.state.showSelectorProps === false && this.props.panelData.properties[\"selector\"].length == 0){\n      propsSelector = [];\n    }\n    if(propsSelector.length){\n      const propsSelectorSorted = [];\n      let predPropPair = [];\n      propsSelector.forEach(i => {\n        let num = i.match(/\\d+/g) || 1;\n        let matchedProps;\n        if(num == 1){\n          matchedProps = propsSelector.filter(p => p.match(/\\d+/g) === null);\n        } else {\n          matchedProps = propsSelector.filter(p => p.includes(num));\n        }\n        if(predPropPair[0] !== matchedProps[0]){\n          propsSelectorSorted.push(matchedProps);\n        }\n        predPropPair = matchedProps;\n      })\n      propsSelector = propsSelectorSorted;\n    }\n    return (\n      <div>\n        <Card>\n          <div className=\"numbers\">\n            <CardTitle tag=\"p\" className=\"nodeName\">{this.props.panelData.nodePath.split('/')[1]}</CardTitle>\n            <p className=\"nodePath\">{this.props.panelData.nodePath}</p>\n          </div> \n          <CardBody>\n            <p>Properties</p>\n            {otherProps.map((p) => (\n              <Fragment key={p}>\n                <FormGroup>\n                  <label>{p}</label>\n                  <Input\n                    placeholder={p}\n                    type=\"text\"\n                    value={this.props.panelData.properties[p]}\n                    onChange={(e) => this.changeInput(e,p)}\n                  ></Input>\n                </FormGroup>\n              </Fragment>\n            ))}\n            {excludeProps.map((pr) => (<FormGroup check key={pr}>\n                <label>{pr}</label>\n                <Label check>\n                  <Input type=\"radio\" checked={this.props.panelData.properties[pr].length !== 0} onChange={(e) => this.changeRadio(e,pr)} name=\"radio1\" />\n                  {pr !== \"selector\" ? <Input\n                      placeholder={pr}\n                      type=\"text\"\n                      value={this.props.panelData.properties[pr]}\n                      onChange={(e) => this.changeInputWithRadio(e,pr)}\n                  ></Input> : <div className=\"shiftCheckbox\"></div>}\n                </Label>\n            </FormGroup>))}\n            {propsSelector.map((s, index) => (\n              <div className=\"row panelSelectorRow\" key={index}>\n                <div className=\"col-md-9\">\n                  {s.map((p) => (\n                    <Fragment key={p}>\n                      <FormGroup>\n                        <label>{p}</label>                     \n                        <Input\n                          placeholder={p}\n                          type=\"text\"\n                          value={this.props.panelData.properties[p]}\n                          onChange={(e) => this.changeInput(e,p)}\n                        ></Input>\n                      </FormGroup>\n                    </Fragment>\n                  ))}\n                </div>\n                <div className=\"col-md-3\">\n                  <Button className=\"plusButton\" onClick={() => this.addOneMorePropertyBundle(s)} color=\"primary\">+</Button>\n                </div>\n              </div>\n            ))}\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Panel;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Fragment } from \"react\";\n// react plugin used to create charts\nimport _ from \"lodash\";\nimport \"./Dashboard.css\";\nimport FactoryNode from \"../components/FactoryNode\";\nimport Panel from \"../components/Panel\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  Button,\n  ModalHeader,\n  Modal,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Dropdown,\n  DropdownItem,\n  Badge,\n  Table,\n} from \"reactstrap\";\n\nconst N3 = require(\"n3\");\nconst { DataFactory } = N3;\nconst { namedNode, literal, defaultGraph } = DataFactory;\nconst URI = window.location.href;\n//const URI = \"http://localhost:8080\";\nconst BASE_URI = window.location.hostname + \":\" + window.location.port;\n\nconst litegraph = window.LiteGraph;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graph: new litegraph.LGraph(),\n      graphCanvas: null,\n      outputLinks: [],\n      prefixOptions: [],\n      config: ``,\n      isModalOpen: false,\n      namespace: \"\",\n      userInput: \"\",\n      afterFilteredSuggestions: [],\n      addNewPrefixes: [],\n      showForm: false,\n      showComponent: \"\",\n      node: \"\",\n      isDisabled: false,\n      nodeArr: [],\n      file: \"\",\n      visible: false,\n      requestID: \"\",\n      showResultModal: false,\n      requestCompleteModal: false,\n      showConfigButton: false,\n      availableFiles: [],\n      showLogButton: false,\n      formProperties: \"\",\n      input1: \"\",\n      input2: \"\",\n      prefixes: {\n        example: \"urn:example:demo/\",\n        foaf: \"http://xmlns.com/foaf/0.1/\",\n        dbpedia: \"http://dbpedia.org/resource/\",\n        deer: \"https://w3id.org/deer/\",\n        fcage: \"https://w3id.org/fcage/\",\n        geo: \"http://www.w3.org/2003/01/geo/wgs84_pos#\",\n        owl: \"http://www.w3.org/2002/07/owl#\",\n        rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n        rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n        xsd: \"http://www.w3.org/2001/XMLSchema#\",\n      },\n      nodesArray: new Set(),\n      quads: [],\n      tempXoneNodeParams: [],\n      fullContent: null,\n      inputPorts: [],\n      inputLinkId: '',\n      selectedFiles: [],\n      panelData: [\n        // {\n        //   numNodeType: 0,\n        //   nodePath: \"one/two\",\n        //   properties: [\"a\", \"b\"],\n        //   showPanel: \"false\",\n        // }\n      ],\n    };\n  }\n\n  updateParentPanelData = (temp, numNodeType) => {\n    var curPanelData = Object.assign([], this.state.panelData);\n    let id = curPanelData.findIndex(i => numNodeType === i.numNodeType);\n    curPanelData[id] = temp;\n    this.setState({\n      panelData: curPanelData\n    })\n  };\n\n  getBaseUrl = () => {\n    var re = new RegExp(/^.*\\//);\n    return re.exec(window.location.href);\n  };\n\n  callbackFunction = (properties) => {\n    // console.log(properties);\n    this.setState({\n      formProperties: properties,\n    });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeWindowFunc);\n  };\n\n  resizeWindowFunc = () => {\n    let canvas = document.getElementById(\"mycanvas\");\n    let parent = document.getElementById(\"parentCanvas\");\n    canvas.width = parent.offsetWidth;\n    canvas.height = parent.offsetHeight;\n\n    if (this.state.graphCanvas != null) {\n      this.state.graphCanvas.resize();\n    }\n\n  };\n\n  componentDidMount() {\n    this.resizeWindowFunc();\n    window.addEventListener(\"resize\", this.resizeWindowFunc);\n\n    var graphCanvas = new litegraph.LGraphCanvas(\"#mycanvas\", this.state.graph);\n    this.setState({\n        graphCanvas: graphCanvas,\n    });\n    this.state.graph.start();\n   \n    graphCanvas.show_info = false;\n\n    //returns the prefixes\n    fetch(\"http://prefix.cc/context\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        this.setState({\n          contexts: content[\"@context\"],\n          prefixOptions: Object.keys(content[\"@context\"]),\n        });\n      });\n\n    if (this.state.userInput === \"\" || this.state.namespace === \"\") {\n      this.setState({\n        isDisabled: true,\n      });\n    }\n\n    const parser = new N3.Parser();\n    fetch(URI + \"/shapes\")\n      .then(function (response) {\n        return response.text();\n      })\n      .then((content) => {\n        // console.log(content);\n        const p= new N3.Parser();\n        let fullContent = p.parse(content);\n        this.setState({\n          fullContent: fullContent,\n        });\n\n        parser.parse(content, (error, quad, prefixes) => {\n          if(quad){\n            //console.log(quad);\n            this.showNode(quad);\n          }\n          else{\n\n          }\n          //  console.log(\"No node returned.\");\n        });\n        \n      });\n  }\n\n  getPropertyFirst = (quadsWithXone) => {\n    quadsWithXone.forEach(i => {\n        let quadI = this.state.fullContent.filter(quad => quad.subject.id.includes(i.object.id));\n        if(quadI[0] && !quadI[0].object.id.includes(\"_:n\")){\n          let tempXoneNodeParams = this.state.tempXoneNodeParams;\n          tempXoneNodeParams.push(quadI[0].object.id);\n          this.setState({\n            tempXoneNodeParams: tempXoneNodeParams,\n          });\n        }\n        if(!i.object.id.includes('nil') && i.predicate.id.includes('rest')){\n          this.getPropertyFirst(quadI);\n        }\n    });\n  }\n\n  getPropertiesForNode = (node) => {\n    let arr = [];\n\n    this.setState({\n      tempXoneNodeParams: [],\n    });\n\n    let propsWithPropPredicate = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"property\")).map(i => i.object.id);\n    let propsUnderSelectorNode = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"property\") && quad.object.id.split(\"_\").length-1 == 2).map(i => i.object.id);\n    let propsUnderSelectorNodeWithMaxCount = [];\n    propsUnderSelectorNode.forEach(nodeName => {\n      let num = this.state.fullContent.filter(quad => quad.subject.id.includes(nodeName) && quad.predicate.id.includes(\"maxCount\")).map(i => i.object.id);\n      let maxCount = num[0].split(\"^^\")[0].match(/\\d+/g)[0];\n      let propName = this.getPropertyName(nodeName);\n      propsUnderSelectorNodeWithMaxCount.push({nodeSelectorProp: propName, maxCount: maxCount});\n    });\n    let propsWithXonePredicate = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"xone\")); \n    \n    let propsFromXone = [];\n    propsWithXonePredicate.forEach(pr => {\n      let quadsWithXone = this.state.fullContent.filter(quad => quad.subject.id.includes(pr.object.id));\n      this.getPropertyFirst(quadsWithXone);\n      propsFromXone = this.state.tempXoneNodeParams;\n    });\n\n    let allNodeProps = {'basicProps': propsWithPropPredicate, 'xone': propsFromXone, 'propsSelector': propsUnderSelectorNodeWithMaxCount};\n    return allNodeProps;\n  }\n\n  getPropertyName = (prop) => {\n    let betweenDashesArray = prop.split('_');\n    let property = \"\";\n    if(betweenDashesArray.length > 2){\n      property = betweenDashesArray[betweenDashesArray.length-1];\n    } else {\n      property = betweenDashesArray[1];\n    }\n    return property;\n  }\n\n  getInputPorts = (node) => {\n    let inputPorts = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"maxInPorts\")).map(i => i.object.id);\n    return inputPorts;\n  }\n\n  getOutputPorts = (node) => {\n    let outputPorts = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"maxOutPorts\")).map(i => i.object.id);\n    return outputPorts;\n  }\n\n  getMessage = (node) => {\n    let message = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"comment\")).map(i => i.object.id);\n    return message;\n  }\n\n  getUrlForTheNode = (node) => {\n    let message = this.state.fullContent.filter(quad => quad.subject.id.includes(node) && quad.predicate.id.includes(\"seeAlso\")).map(i => i.object.id);\n    return message;\n  }\n\n  initializeNode = (node) => {   \n    let propsArrForNode = this.getPropertiesForNode(node);\n    let inputPorts = this.getInputPorts(node)[0];\n    let outputPorts = this.getOutputPorts(node)[0];\n    let inputs = inputPorts.match(/\\d+/)[0];\n    let outputs = outputPorts.match(/\\d+/)[0];\n    let message = this.getMessage(node);\n    let url = this.getUrlForTheNode(node);\n    let xoneProperties = null;\n    let propsSelector = propsArrForNode.propsSelector;\n    let that = this;\n\n    let properties = {\n      name: \"\"\n    };\n\n    let filteredProps = propsArrForNode.basicProps.map(filteredProp => {\n      return this.getPropertyName(filteredProp);\n    })\n\n    filteredProps.forEach(pr => {\n      properties[pr] = \"\";\n    });\n\n    // now all fields from xone are added, show only one to the user (with radiobutton)\n    filteredProps = propsArrForNode.xone.filter(x => x.includes(node)).map(filteredProp => {\n      return this.getPropertyName(filteredProp);\n    })\n    xoneProperties = filteredProps;\n\n    filteredProps.forEach(pr => {\n      properties[pr] = \"\";\n    });\n\n    delete properties.undefined;\n  \n    // add to graph\n    if(node.includes(\"Operator\") ){\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          for(var i = 0; i < inputs; i++){\n            this.addInput(\"input\", \"text\");\n          }\n          for(var j = 0; j < outputs; j++){\n            this.addOutput(\"output\", \"text\");\n          }\n          \n          this.message = message;\n          this.linkName = url;\n\n          this.onDblClick = (e) => {\n            that.showProperies(\"Operator/\", e, node, properties, xoneProperties, propsSelector);\n          }\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [320, 100];\n      nodeClass.color = \"#664d00\";\n      nodeClass.bgcolor = \"#8c6a00\";\n      litegraph.registerNodeType(\"Operator/\"+node, nodeClass);\n      \n    } else \n    if(node.includes(\"Reader\")){\n      // console.log(typeof properties);\n      // console.log(Object.create(properties));\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          this.addOutput(\"output\", \"text\");\n          this.message = message;\n          this.linkName = url;\n\n          this.onDblClick = (e) => {\n            that.showProperies(\"Reader/\", e, node, properties, xoneProperties, propsSelector);\n          }\n\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [180, 100];\n      nodeClass.color = \"#223322\";\n      nodeClass.bgcolor = \"#335533\";\n      litegraph.registerNodeType(\"Reader/\"+node, nodeClass);\n    } else {\n      class nodeClass extends FactoryNode{\n        constructor(props) {\n          super(props);\n          this.addInput(\"input\", \"text\");\n          this.message = message;\n          this.linkName = url;\n\n          this.onDblClick = (e) => {\n            that.showProperies(\"Writer/\", e, node, properties, xoneProperties, propsSelector);\n          }\n        }\n      };\n      nodeClass.title = node;\n      nodeClass.size = [180, 100];\n      nodeClass.color = \"#223322\";\n      nodeClass.bgcolor = \"#335533\";\n      litegraph.registerNodeType(\"Writer/\"+node, nodeClass);\n    }\n  }\n\n  showProperies = (nodeType, e, node, properties, xoneProperties, propsSelector) => {\n    let propertiesCopy = Object.assign({}, properties);\n    // initialize panel data\n    let panelData = Object.assign([], this.state.panelData);\n    // hide all panels\n    panelData = panelData.map(p => {\n      let temp = Object.assign({}, p);\n      temp.showPanel = false;\n      return temp;\n    });\n    // if this panel was just added\n    let exists = this.state.panelData.find(p => { return p.numNodeType === e.target.data.current_node.id && p.nodePath === nodeType+node});\n    if(!exists){\n      panelData.push({\n          numNodeType: e.target.data.current_node.id,\n          nodePath: nodeType+node,\n          properties: propertiesCopy,\n          xoneProperties: xoneProperties,\n          showPanel: true,\n          propsSelector: propsSelector,\n      });\n      this.setState({\n        panelData: panelData,\n      });\n    }  \n    else {\n      // show current one\n      let idForChange = this.state.panelData.findIndex(p => { return p.nodePath === nodeType+node && p.numNodeType === e.target.data.current_node.id});\n      panelData[idForChange].showPanel = true;\n      this.setState({\n        panelData: panelData,\n      });\n    }\n  }\n\n  showNode = (quadOb) => {\n    // save possible node names in array\n    if(quadOb.predicate.id.includes(\"targetClass\")){\n      let node = quadOb.object.id.split(\"https://w3id.org/deer/\")[1];\n      // console.log(quadOb.object.id);\n      let nodes = this.state.nodesArray;\n      if(node){\n        nodes.add(node);\n        this.initializeNode(node);\n      }\n\n      this.setState({\n        nodesArray: nodes,\n      });\n      \n    }\n  };\n\n  toggleDropdown = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  };\n\n  // getOutputLinks = (node) => {\n  //   for (let link in node.outputs) {\n  //     if (node.outputs[link].links) {\n  //       for (let nodeLink in node.outputs[link].links) {\n  //         var link_id = node.outputs[link].links[nodeLink];\n  //         var linkInGraph = this.state.graph.links[link_id];\n  //         if (linkInGraph) {\n  //           var target_node = this.state.graph.getNodeById(\n  //             linkInGraph.target_id\n  //           );\n  //           return target_node;\n  //         }\n  //       }\n  //     }\n  //   }\n  // };\n\n  getInputLink = (node) => {\n    // if (node.type === \"Operator/LinkingEnrichmentOperator\") {\n    //   var inputLinkInGraph1 = this.state.graph.links[node.inputs[0].link];\n    //   var inputLinkInGraph2 = this.state.graph.links[node.inputs[1].link];\n    //   if (inputLinkInGraph1) {\n    //     var inputOriginNode1 = this.state.graph.getNodeById(\n    //       inputLinkInGraph1.origin_id\n    //     ).properties.name;\n    //   }\n    //   if (inputLinkInGraph2) {\n    //     var inputOriginNode2 = this.state.graph.getNodeById(\n    //       inputLinkInGraph2.origin_id\n    //     ).properties.name;\n    //   }\n    //   console.log(inputOriginNode1);\n\n    //   return {\n    //     first: inputOriginNode1,\n    //     second: inputOriginNode2,\n    //   };\n    // } else {\n      for (var i=0; i < node.inputs.length; i++) {\n         console.log(\"i = \"+i);\n\n        // console.log(node.inputs[i]);\n        // console.log(node.inputs[i].link);\n        // if (node.inputs[i].link) {\n           var inputLinkId = node.inputs[i].link;\n           console.log(inputLinkId);\n           var inputLinkInGraph = this.state.graph.links[inputLinkId];\n          if (inputLinkInGraph) {\n            var inputOriginNode = this.state.graph.getNodeById(\n              inputLinkInGraph.origin_id\n            );\n            let inputPortsList = this.state.inputPorts;\n              inputPortsList.push(inputOriginNode);\n              this.setState({\n                inputPorts: inputPortsList\n              })\n           \n          }\n      // }\n       // return [inputOriginNode, inputLinkId];\n      }\n      \n      //return this.state.inputPorts;\n\n    // }\n  };\n\n  saveConfig = () => {\n\n    var data = this.state.graph.serialize();\n    //use N3\n    const myQuad = DataFactory.quad(\n      namedNode(\"https://ruben.verborgh.org/profile/#me\"),\n      namedNode(\"http://xmlns.com/foaf/0.1/givenName\"),\n      literal(\"Ruben\", \"en\"),\n      defaultGraph()\n    );\n\n    var writer = new N3.Writer(\n      {\n        prefixes: this.state.prefixes,\n      },\n      { format: \"N-Triples\" }\n    );\n\n    var parser = new N3.Parser({ format: \"N3\", blankNodePrefix: \"\" });\n    data.nodes.map((node, key) => {\n\n      node.properties = this.state.panelData.filter(i => i.numNodeType === node.id && i.nodePath === node.type)[0].properties;\n\n      writer.addQuad(\n        namedNode(\"urn:example:demo/\" + node.properties.name),\n        namedNode(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\"), //predicate\n        namedNode(\"https://w3id.org/deer/\" + node.type.split(\"/\")[1]) //object\n      );\n\n      //if it has an input link, check for them and add to an array\n      if (node.inputs) {\n          for (var i=0; i < node.inputs.length; i++) {\n            if (node.inputs[i].link) {\n              var inputLinkId = node.inputs[i].link;\n              console.log(inputLinkId);\n              var inputLinkInGraph = this.state.graph.links[inputLinkId];\n             if (inputLinkInGraph) {\n               var inputOriginNode = this.state.graph.getNodeById(\n                 inputLinkInGraph.origin_id\n               );\n               let inputPortsList = this.state.inputPorts;\n                 inputPortsList.push(inputOriginNode);\n                 this.setState({\n                   inputPorts: inputPortsList,\n                   inputLinkId: inputLinkId\n                 })\n              \n             }\n         }\n         }\n          // console.log(this.state.inputPorts);\n          //adding the quad for each inputLinks here\n          let blankNodes = this.state.inputPorts.map((inputPort, key) => {\n            inputPort.properties = this.state.panelData.filter(i => i.numNodeType === inputPort.id && i.nodePath === inputPort.type)[0].properties;\n            return writer.blank([{\n              predicate: namedNode(\"https://w3id.org/fcage/\" + \"fromNode\"),\n              object:    namedNode(\"urn:example:demo/\" + inputPort.properties.name),\n            },{\n              predicate: namedNode(\"https://w3id.org/fcage/\" + \"fromPort\"),\n              object:    literal(key),\n            }])\n          })\n\n          \n          writer.addQuad(\n            namedNode(\"urn:example:demo/\" + node.properties.name),\n            namedNode(\"https://w3id.org/fcage/\" + \"hasInput\"),\n            writer.list(blankNodes)        \n          );\n          \n\n          this.setState({\n            inputPorts: [],\n            inputLinkId: ''\n          })\n          // writer.addQuad(\n          //   namedNode(\"urn:example:demo/\" + node.properties.name),\n          //   namedNode(\"https://w3id.org/fcage/\" + \"hasInput\"),\n          //   writer.blank([{\n          //     predicate: namedNode(\"urn:example:demo/\" + \"fromNode\"),\n          //     object:    namedNode(\"https://w3id.org/fcage/\" + originInputNode.properties.name),\n          //   },{\n          //     predicate: namedNode(\"https://w3id.org/fcage/\" + \"fromPort\"),\n          //     object:    literal(this.getInputLink(node)[1]),\n          //   }])\n           \n          // ); \n        // }\n      }\n\n      // console.log(node);\n\n      let obj = node.properties;\n      // quads with blank nodes\n      if (\"operation\" in obj){\n        let blankNodes = this.addBlankNodes(\"operation\", obj);\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + obj.name),\n          namedNode(\"https://w3id.org/deer/operation\"),\n          writer.blank(blankNodes)\n        );\n      } else if (\"selector\" in obj){\n        let blankNodes = this.addBlankNodes(\"selector\", obj);\n        writer.addQuad(\n          namedNode(\"urn:example:demo/\" + obj.name),\n          namedNode(\"https://w3id.org/deer/selector\"),\n          writer.blank(blankNodes)\n        );\n      }\n      else{ // simple quads\n        for (var prop in obj) {\n          if (prop !== \"name\" && obj[prop].length){\n            if (obj[prop].includes('http')){\n              writer.addQuad(\n                namedNode(\"urn:example:demo/\" + node.properties.name),\n                namedNode(\"https://w3id.org/deer/\" + prop),\n                namedNode(obj[prop])\n              );\n            }\n            else {\n              writer.addQuad(\n                namedNode(\"urn:example:demo/\" + node.properties.name),\n                namedNode(\"https://w3id.org/deer/\" + prop),\n                literal(obj[prop])\n              );\n            }\n          }\n        }\n      }\n\n\n    });\n    writer.end((error, result) => {\n      console.log(result);\n      this.submitConfig(result);\n      result = \"\";\n    });\n  };\n\n  addBlankNodes = (byPredicate, obj) => {\n    let blankNodes = [];\n    for (var prop in obj) {\n      if (prop !== \"name\" && prop !== byPredicate && obj[prop].length){\n        blankNodes.push({\n          predicate: namedNode(\n            \"https://w3id.org/deer/\"+prop\n          ),\n          object: namedNode(obj[prop])\n        });\n      }\n    }\n    return blankNodes;\n  }\n\n  //Download the results\n  downloadResults = (index) => {\n    fetch(\n      URI +\n        \"/result/\" +\n        this.state.requestID +\n        \"/\" +\n        this.state.availableFiles[index]\n    ).then((response) => {\n      response.blob().then((blob) => {\n        let url = window.URL.createObjectURL(blob);\n        let a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.availableFiles[index];\n        a.click();\n      });\n    });\n  };\n\n  submitConfig = (result) => {\n    var data = new Blob([result], { type: \"text/ttl\" });\n    var file = new File([data], \"config.ttl\");\n\n    var formData = new FormData();\n    formData = this.uploadFiles();\n    formData.append(\"config\", file);\n    fetch(URI + \"/submit\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        if (res.error && res.error.code === -1) {\n          this.setState({\n            visible: true,\n          });\n        } else if (res.requestId) {\n          this.setState({\n            requestID: res.requestId,\n            showLogButton: true,\n          });\n          this.interval = setInterval(this.getStatusForRequest, 1000);\n        }\n      });\n  };\n\n  getStatusForRequest = () => {\n    fetch(URI + \"/status/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        if (content.status.code === 2) {\n          clearInterval(this.interval);\n          this.setState({\n            requestCompleteModal: true,\n            showConfigButton: true,\n          });\n          this.getResults();\n        } else if(content.status.code === 1){\n          clearInterval(this.interval);\n          this.setState({\n            visible: true,\n          });\n        }\n      });\n  };\n\n  getResults = () => {\n    fetch(URI + \"/results/\" + this.state.requestID)\n      .then(function (response) {\n        return response.json();\n      })\n      .then((content) => {\n        console.log(content.availableFiles);\n        this.setState({\n          availableFiles: content.availableFiles,\n        });\n      });\n  };\n\n  showLogs = () => {\n    fetch(URI + \"/logs/\" + this.state.requestID).then(function (response) {\n      let a = document.getElementById(\"downloadlink\");\n      a.href = response.url;\n      a.click();\n    });\n  };\n  toggle = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  getFilteredOptions = (event) => {\n    this.setState({\n      afterFilteredSuggestions: this.state.prefixOptions.filter((i) => {\n        return i.toLowerCase().includes(event.target.value.toLowerCase());\n      }),\n      userInput: event.target.value,\n    });\n  };\n\n  selectedPrefix = (event) => {\n    this.setState({\n      afterFilteredSuggestions: [],\n      namespace: this.state.contexts[event.target.value],\n      userInput: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  handleNamespaceChange = (event) => {\n    this.setState({\n      namespace: event.target.value,\n      isDisabled: false,\n    });\n  };\n\n  addNewPrefixes = (e) => {\n    this.setState({\n      addNewPrefixes: this.state.addNewPrefixes.concat(this.state.userInput),\n    });\n    this.state.prefixes[this.state.userInput] = this.state.namespace;\n  };\n\n  saveResults = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleResultModal = () => {\n    this.setState({\n      showResultModal: !this.state.showResultModal,\n    });\n  };\n\n  toggleRequestCompleteModal = () => {\n    this.setState({\n      requestCompleteModal: !this.state.requestCompleteModal,\n    });\n  };\n\n  uploadFiles = () => {\n    let files = this.state.selectedFiles;\n\n    const data = new FormData()\n    for(var x = 0; x < files.length; x++) {\n       data.append('file', files[x])\n    }\n\n    return data;\n  };\n\n  onSelectedFiles = (event) => {\n    this.setState({\n     selectedFiles: event.target.files,\n    })\n  };\n\n  render() {\n    const options = _.map(this.state.prefixOptions, (opt, index) => ({\n      key: opt,\n      text: opt,\n      value: opt,\n    }));\n\n    return (\n      <div className=\"content\">\n        <Modal isOpen={this.state.visible} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>\n            Incorrect Configuration\n          </ModalHeader>\n          <ModalBody>\n            Please input all the required fields and connections.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.requestCompleteModal}\n          toggle={this.toggleRequestCompleteModal}\n        >\n          <ModalHeader toggle={this.toggleRequestCompleteModal}>\n            Status\n          </ModalHeader>\n          <ModalBody>\n            The results are ready. You can download them by clicking 'Show\n            Results'.\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.showResultModal}\n          toggle={this.toggleResultModal}\n        >\n          <ModalHeader toggle={this.toggleResultModal}>Results</ModalHeader>\n          <ModalBody>\n            <Table>\n              <thead>\n                <tr>\n                  <th>File</th>\n                  <th>Download</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.availableFiles.map((file, index) => (\n                  <tr key={index}>\n                    <td>{file}</td>\n                    <td>\n                      <Button onClick={() => this.downloadResults(index)}>\n                        <i\n                          className=\"fa fa-download\"\n                          style={{ color: `white` }}\n                        />{\" \"}\n                        Download\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </ModalBody>\n        </Modal>\n        <Row>\n          <Col lg=\"9\" md=\"9\" sm=\"9\">\n            <Card className=\"card-stats\">\n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Prefixes</CardTitle>\n              </div>\n              <CardBody>\n                <Row>\n                  <Col md=\"12\" xs=\"12\">\n                    <Form>\n                      <Row>\n                        <Col md=\"4\">\n                          <Fragment>\n                            <FormGroup className=\"dropdown\">\n                              <label>Label</label>\n                              <Input\n                                placeholder=\"Label\"\n                                type=\"text\"\n                                value={this.state.userInput}\n                                onChange={this.getFilteredOptions}\n                              ></Input>\n                              <Dropdown\n                                className=\"dropdown-content\"\n                                toggle={this.toggleDropdown}\n                              >\n                                {this.state.afterFilteredSuggestions.map(\n                                  (suggestions, key) => (\n                                    <DropdownItem\n                                      className=\"dropdown-item\"\n                                      value={suggestions}\n                                      onClick={this.selectedPrefix}\n                                    >\n                                      {suggestions}\n                                    </DropdownItem>\n                                  )\n                                )}\n                              </Dropdown>\n                            </FormGroup>\n                          </Fragment>\n                        </Col>\n                        <Col md=\"4\">\n                          <FormGroup>\n                            <label>Namespace</label>\n                            <Input\n                              placeholder=\"Namespace\"\n                              type=\"text\"\n                              value={this.state.namespace}\n                              onChange={this.handleNamespaceChange}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            disabled={this.state.isDisabled}\n                            className=\"btn-round prefixBtn\"\n                            color=\"primary\"\n                            onClick={this.addNewPrefixes}\n                          >\n                            Add prefix\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {this.state.addNewPrefixes.map((addPrefix) => (\n                    <Badge variant=\"light\"> {addPrefix}</Badge>\n                  ))}\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col lg=\"3\" md=\"3\" sm=\"3\">\n            <Card className=\"card-stats\">\n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Attach files</CardTitle>\n              </div>\n              <CardBody>\n                {/* <div class=\"form-group\">\n                  <input\n                    type=\"file\"\n                    class=\"form-control-file\"\n                    id=\"exampleFormControlFile1\"\n                  ></input>\n                </div> */}\n                <Row>\n                  <Col md=\"8\">\n                    <Input className=\"file inputFile\" multiple type=\"file\" name=\"file\" id=\"exampleFile\" onChange={this.onSelectedFiles}/>\n                  </Col>\n                </Row>\n              </CardBody>\n              <hr />\n              <CardFooter></CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"9\">\n            <Card>     \n              <div className=\"numbers\">\n                <CardTitle tag=\"p\">Graph</CardTitle>\n              </div> \n              <CardBody>\n                <div id=\"parentCanvas\" className=\"litegraph litegraph-editor\">\n                  <canvas id=\"mycanvas\" height=\"600\" width=\"1000\"></canvas>{\" \"}\n                </div>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  {/* <a\n                    download=\"config.ttl\"\n                    id=\"downloadlink\"\n                    //style={{ display: \"none\" }}\n                    ref=\"file\"\n                  > */}\n                  <Button onClick={this.saveConfig}>\n                    <i className=\"fa fa-cog\" style={{ color: `white` }} /> Run\n                    Configuration\n                  </Button>\n                  {/* </a> */}\n                  {this.state.showConfigButton ? (\n                    <Button\n                      onClick={this.saveResults}\n                      style={{ marginLeft: `10px` }}\n                    >\n                      <i\n                        className=\"fa fa-sticky-note\"\n                        style={{ color: `white` }}\n                      />{\" \"}\n                      Show results\n                    </Button>\n                  ) : (\n                    \"\"\n                  )}\n                  {this.state.showLogButton ? (\n                    <a\n                      target=\"_blank\"\n                      id=\"downloadlink\"\n                      //style={{ display: \"none\" }}\n                      ref=\"file\"\n                    >\n                      <Button\n                        onClick={this.showLogs}\n                        style={{ marginLeft: `10px` }}\n                      >\n                        <i className=\"fa fa-cog\" style={{ color: `white` }} />{\" \"}\n                        Logs\n                      </Button>\n                    </a>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          {/* <Modal isOpen={this.state.isModalOpen} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>Display Config</ModalHeader>\n            <ModalBody></ModalBody>\n          </Modal> */}\n\n          <Col md=\"3\">\n            {this.state.panelData.filter(p => p.showPanel === true).map((p) =>(\n            <Panel key={p.nodePath+p.numNodeType} panelData={p} updateParentPanelData={this.updateParentPanelData} />))} \n          </Col>\n\n        </Row>\n        {/* <Row>\n            <Col md=\"4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h5\">Email Statistics</CardTitle>\n                  <p className=\"card-category\">Last Campaign Performance</p>\n                </CardHeader>\n                <CardBody>\n                  <Pie\n                    data={dashboardEmailStatisticsChart.data}\n                    options={dashboardEmailStatisticsChart.options}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"legend\">\n                    <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                    <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                    <i className=\"fa fa-circle text-gray\" /> Unopened\n                  </div>\n                  <hr />\n                  <div className=\"stats\">\n                    <i className=\"fa fa-calendar\" /> Number of emails sent\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md=\"8\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h5\">NASDAQ: AAPL</CardTitle>\n                  <p className=\"card-category\">Line Chart with Points</p>\n                </CardHeader>\n                <CardBody>\n                  <Line\n                    data={dashboardNASDAQChart.data}\n                    options={dashboardNASDAQChart.options}\n                    width={400}\n                    height={100}\n                  />\n                </CardBody>\n                <CardFooter>\n                  <div className=\"chart-legend\">\n                    <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                    <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                  </div>\n                  <hr />\n                  <div className=\"card-stats\">\n                    <i className=\"fa fa-check\" /> Data information certified\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row> */}\n      </div>\n    );\n  }\n}\n\nlitegraph.registered_node_types = {};\nlitegraph.searchbox_extras = {};\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.jsx\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard,\n    layout: \"/admin\"\n  }\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n  Button,\n} from \"reactstrap\";\n\nimport DemoNavbar from \"./DemoNavbar.css\";\nimport routes from \"routes.js\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\",\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"dark\",\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n  getBrand() {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\",\n      });\n    } else {\n      this.setState({\n        color: \"transparent\",\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\"></div>\n            <NavbarBrand href=\"/\">\n              <img\n                className=\"logo-height\"\n                alt=\"...\"\n                src={require(\"assets/img/deer-logo.svg\")}\n              />\n              <span className=\"logo-title\">DEER Web UI</span>\n            </NavbarBrand>\n          </div>\n          {/* <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler> */}\n          {/* <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          > */}\n          {/* <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form> */}\n          {/* </Collapse> */}\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <nav className=\"footer-nav\">\n              <ul>\n                <li>\n                  <a href=\"https://www.creative-tim.com\" target=\"_blank\">\n                    {/* TODO: */}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://blog.creative-tim.com\" target=\"_blank\"></a>\n                </li>\n                <li>\n                  <a\n                    href=\"https://www.creative-tim.com/license\"\n                    target=\"_blank\"\n                  ></a>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"credits ml-auto\">\n              {/* <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with{\" \"}\n                <i className=\"fa fa-heart heart\" /> by Creative Tim\n              </div> */}\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport DemoNavbar from \"components/Navbars/DemoNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport routes from \"routes.js\";\nimport Admin from \"./Admin.css\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    };\n    this.mainPanel = React.createRef();\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  };\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          <DemoNavbar {...this.props} />\n          <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  path={prop.layout + prop.path}\n                  component={prop.component}\n                  key={key}\n                />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss?v=1.1.0\";\nimport \"assets/demo/demo.css\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Redirect to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}